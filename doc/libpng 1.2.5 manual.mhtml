From: <Saved by Blink>
Snapshot-Content-Location: http://www.libpng.org/pub/png/libpng-1.2.5-manual.html#section-3
Subject: libpng 1.2.5 manual
Date: Thu, 10 Jan 2019 20:42:50 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--mmfJMv6VFTPpufsAbXFV99k6lkza06mpzfQx4MhsBg----"


------MultipartBoundary--mmfJMv6VFTPpufsAbXFV99k6lkza06mpzfQx4MhsBg----
Content-Type: text/html
Content-ID: <frame-80B063414A6BBF20387A8E9E6FEB1D81@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.libpng.org/pub/png/libpng-1.2.5-manual.html#section-3

<!--?xml version=3D"1.0" encoding=3D"utf-8" ?--><!DOCTYPE html PUBLIC "-//W=
3C//DTD XHTML 1.0 Strict//EN" "DTD/xhtml1-strict.dtd"><html xmlns=3D"http:/=
/www.w3.org/1999/xhtml" xml:lang=3D"en" lang=3D"en"><head><meta http-equiv=
=3D"Content-Type" content=3D"text/html; charset=3DUTF-8">
<title>libpng 1.2.5 manual</title>
<meta name=3D"author" content=3D"Glenn Randers-Pehrson">
<meta name=3D"website" content=3D"http://www.libpng.org/">
<meta name=3D"keywords" content=3D"libpng PNG">
<link rel=3D"stylesheet" crossorigin=3D"anonymous" href=3D"http://gc.kis.v2=
.scr.kaspersky-labs.com/ADE39B2F-2CD6-644C-A355-ADCCFA4C1459/abn/main.css">=
<style type=3D"text/css" nonce=3D"E3A47AB60828054A934BE1B538604F69">#AD_CON=
TROL_28,#AD_Top,#AD_banner,#AdColumn,#AdContainer,#AdHeader,#AdImage,#Adcod=
e,#AdvertiseFrame,#Advertisements,#BottomAdContainer,#BottomAds,#ContentAd,=
#HeroAd,#PreRollAd,#RightAdBlock,#TopAd,#WNAd41,#ab_adblock,#ad-area,#ad-ba=
ckground,#ad-bg,#ad-bottom,#ad-buttons,#ad-container,#ad-header,#ad-header-=
728x90,#ad-lead,#ad-leaderboard,#ad-main,#ad-panel,#ad-right,#ad-rotator,#a=
d-target,#ad-text,#ad-top,#ad-top-banner-placeholder,#ad-top-wrapper,#ad-un=
it,#ad-wrapper,#ad468,#ad728,#ad728x90,#adBanner,#adBanner1,#adBelt,#adComp=
onentWrapper,#adDiv,#adFrame,#adGallery,#adHeader,#adHolder,#adLayer,#adLea=
der,#adLink1,#adPosition0,#adText,#ad_1,#ad_2,#ad_3,#ad_4,#ad_5,#ad_728_90,=
#ad_area,#ad_banner,#ad_center,#ad_content,#ad_global_above_footer,#ad_head=
er,#ad_leaderboard,#ad_main,#ad_overlay,#ad_ph_1,#ad_space,#ad_square,#ad_t=
able,#ad_top,#ad_topslot,#ad_unit,#ad_wrap,#ad_wrapper,#adaptv_ad_player_di=
v,#adbackground,#adbanner,#adbar,#adblock,#adboard,#adbody,#adbox,#adcode,#=
adcontainer,#adcontainer1,#adcontent,#adhead,#adheader,#adimg1,#adlayer,#ad=
news,#adposition3,#adright,#ads-1,#ads-col,#ads-wrapper,#ads1,#ads2,#ads3,#=
ads4,#adsHeader,#adsIframe,#ads_bottom,#ads_iframe,#ads_right,#ads_top,#ads=
_wrapper,#adsdiv,#adsense,#adsense2,#adsense_block,#adsense_inline,#adsense=
wide,#adspace,#adspace_top,#adspot-300x250-pos-1,#adspot-300x250-pos-2,#ads=
top,#adtext,#adtop,#adv,#adv-masthead,#adv-title,#adv-top,#adv_config,#adv_=
right,#advblock,#advert-1,#advert1,#advert2,#advertContainer,#advert_box,#a=
dvertise,#advertisement1,#advertisetop,#advertising_wrapper,#adverts,#advto=
p,#adwrapper,#banner-ad,#bannerAd,#bannerAdWrapper,#banner_ad,#banner_topad=
,#bannerad,#bigAd,#bigad,#body_ad,#bottomAd,#bottomAds,#bottom_ad,#centerad=
s,#cmn_ad_tag_head,#content-header-ad,#contentAd,#content_ads,#content_adv,=
#contentad,#contentadcontainer,#ctlDisplayAd1_lblAd,#dart-container-728x90,=
#dfp_ad_Entry_728x90,#dfp_ad_Home_728x90,#divAd,#div_prerollAd_1,#download_=
ad,#featuread,#featured-ads,#featuredAds,#feed_links_ad_container,#footer-a=
ds,#footer_ad,#footer_ads,#game-ad,#googlead,#gridAdSidebar,#head-ad,#heade=
r-ads,#headerAd,#headerAdContainer,#header_ad,#homead,#inner-advert-row,#ka=
_adRightSkyscraperWide,#leaderAd,#leaderBoardAd,#leaderboard-ad,#leaderboar=
d-advertisement,#leaderboardad,#left-ad,#left_ads,#leftad,#leftads,#logoAd,=
#logo_ad,#mainAd,#main_ad,#mpu2,#mpu2_container,#mpu_container,#msad,#my-ad=
sFPAD,#myAd,#player_ads,#pre_advertising_wrapper,#prerollAd,#promo-ad,#publ=
icidad,#reklama,#rh-ad,#right_ad,#right_ads,#right_adsense,#search-sponsor,=
#searchAd,#search_ads,#sideAd,#side_ads,#sidebar-ads,#sidebar_ad,#sidebar_a=
ds,#skybox-ad,#sponsorAdDiv,#sponsorText,#sponsor_ad,#sponsoredwellcontaine=
rbottom,#sponsors-home,#takeover_ad,#text-ads,#theAd,#top-ad,#top-ad-conten=
t,#topAd,#topAdSpace,#topAdSpace_div,#topAds,#topAdvert,#topBannerAd,#top_a=
d,#top_ads,#topad,#topadvert,#topbannerad,#tv_player a[href*=3D"baskino."][=
target=3D"_blank"],#under_story_ad,#video-adv,#videoAd,#videoAdContainer,#v=
ideoads,#vkMsg,.ADBAR,.AdBar,.AdBody:not(body),.AdBox,.AdInfo,.AdInline,.Ad=
Sidebar,.AdTitle,.AdvertContainer,.HomeAds,.IM_ad_unit,.LazyLoadAd,.Related=
Ads,.SponsoredContent,.ad-300x250,.ad-970,.ad-banner,.ad-block,.ad-body,.ad=
-border,.ad-btn,.ad-button,.ad-cat,.ad-cell,.ad-cluster,.ad-display,.ad-ena=
bled,.ad-fixed,.ad-flag,.ad-grid,.ad-header,.ad-holder,.ad-icon,.ad-img,.ad=
-inner,.ad-item,.ad-leader-top,.ad-leaderboard,.ad-left,.ad-link,.ad-links,=
.ad-loaded,.ad-panel,.ad-placement,.ad-rail,.ad-right,.ad-row,.ad-scroll,.a=
d-section,.ad-served,.ad-sidebar,.ad-source,.ad-square,.ad-stack,.ad-text,.=
ad-top,.ad-unit,.ad-unit-300-wrapper,.ad-vertical-container,.ad-wide,.ad-wr=
ap,.ad-wrapper,.ad300,.ad468,.ad728,.ad90,.adBanner,.adBar,.adBlock,.adBott=
omBoard,.adBox,.adChoicesLogo,.adContent,.adDiv,.adElement,.adFrame,.adFram=
eCnt,.adHead,.adHeader,.adHeaderblack,.adHeadline,.adHolder,.adHoldert,.adI=
mg,.adItem,.adLink,.adMessage,.adMiddle,.adMod,.adModule,.adOverlay,.adPane=
l,.adPod,.adResult,.adRight,.adRotator,.adSpace,.adSpot,.adText,.adTitle,.a=
dTopHome,.adWidget,.adWrap,.ad_1,.ad_160,.ad_160x600,.ad_2,.ad_3,.ad_728x90=
,.ad_960,.ad_Right,.ad_block,.ad_body,.ad_bottom,.ad_container,.ad_content,=
.ad_description,.ad_global_header,.ad_head_rectangle,.ad_header,.ad_image,.=
ad_img,.ad_item,.ad_large,.ad_leaderboard,.ad_middle,.ad_outer,.ad_promo,.a=
d_slug_table,.ad_small,.ad_space,.ad_spot,.ad_text,.ad_title,.ad_trick_head=
er,.ad_trick_left,.ad_wrap,.ad_wrapper,.adarea,.adbanner,.adbar,.adbottom,.=
adbutton,.adcolumn,.adcont,.addiv,.adframe,.adfree,.adheader,.adholder,.adi=
nfo,.adkit,.adlink,.adlist,.admain,.admiddle,.adright,.adrow1,.adrow2,.ads-=
1,.ads-2,.ads-3,.ads-300-250,.ads-area,.ads-bg,.ads-box,.ads-col,.ads-conte=
nt,.ads-footer,.ads-header,.ads-holder,.ads-iframe,.ads-inline,.ads-item,.a=
ds-list,.ads-right,.ads-section,.ads-title,.ads-top,.ads1,.adsBlock,.adsBox=
,.adsWidget,.ads_block,.ads_catDiv,.ads_div,.ads_item,.ads_top,.ads_wrapper=
,.adsbottombox,.adsbox,.adsbygoogle,.adscontainer,.adsense-header,.adshome,=
.adside,.adsinfo,.adsizewrapper,.adslot,.adslot_1,.adslot_300,.adslot_blurr=
ed,.adspace,.adtable,.adtile,.adtop,.adtxt,.adv-block,.adv-box,.adv-header,=
.adv-list,.adv-right,.adv-text,.adv300,.advBox,.adv_1,.adv_300,.adv_left,.a=
dv_right,.adv_title,.adv_top,.adv_txt,.advblock,.advert-block,.advert-box,.=
advert-container,.advert-content,.advert-horizontal,.advert-wrapper,.advert=
2,.advertColumn,.advertContainer,.advertLink,.advertText,.advert_area,.adve=
rt_container,.advert_list,.advertblock,.advertbox,.advertisement-1,.adverti=
sement-block,.advertisement__leaderboard,.advertiser,.advertising-content,.=
advertising_banner,.advertising_block,.advertisment,.advertorial,.adverts,.=
adverttext,.advt,.advtext,.adwolf-holder,.adwords,.afs_ads,.after-post-ad,.=
ammblock,.article-advert,.article_ad,.b-adv,.b-advert,.b-banner,.b-media-ba=
nner,.banner-ad,.banner-ads,.banner-adv,.banner160x600,.banner300,.bannerAd=
,.banner_728x90,.banner_ad,.bannerad,.big-ads,.block-ad,.block-ec_ads,.bloc=
k-simpleads,.blog-ads,.bottom-ad,.bottom-ads,.bottom-left-ad,.bottomAds,.bo=
ttom_ad_block,.box-ads,.box-radvert,.box-recommend-ad,.box_ads,.box_adv,.bo=
xad,.boxadv,.btn-ad,.can_ad_slug,.category-ad,.change_AdContainer,.chitikaA=
dBlock,.commerce-inset,.container_ad,.container_row_ad,.contentAd,.contentA=
ds,.content_ads,.content_tagsAdTech,.context-ads,.cp-adsInited,.custom-ad,.=
desktop-ad,.desktop_ad,.dfp-ad,.dfp-ad-unit,.dfp-tag-wrapper,.displayAd,.do=
wnload_ad,.easyazon-block,.ec-ads-remove-if-empty,.ezAdsense,.featured-ad,.=
featuredAdBox,.flash-advertisement,.footer-ad,.footer-ads,.footer_ad,.foote=
rad,.forumAd,.gallery-ad,.google-sponsored,.googleAdSense,.googleAds,.googl=
e_ad,.greyAd,.grf-list__item:not([data-type=3D"ae"]),.grf-widget__logo,.gri=
d-item-ad,.has-ad,.hasads,.header-ad,.headerAd,.header_ad,.header_ad_center=
,.header_advert,.headerad,.headerads,.home-ad,.home-ads,.homeAd,.homead,.ho=
mepage-ad,.homepage_ads,.horizontal_ad,.imageAds,.img_ad,.imgad,.inner_ad,.=
innerad,.insert-post-ads,.ipsAd,.item-ads,.item-container-ad,.js-springs__t=
op,.js-sticky-ad,.lastads,.leaderboard-ad,.leaderboard-ads,.leftAd,.leftad,=
.list-ad,.list-ads,.listad,.logo-ad,.madv,.marketing-ad,.mid_ad,.middle_AD,=
.mod-adopenx,.module-ad,.nativead,.nav-ad,.newsAd,.node-ad,.oasad,.oio-bann=
er-zone,.openx,.overlay-ads,.pads2,.page-ad,.page_ad,.plainAd,.playerAd,.pl=
ayer_ad,.player_hover_ad,.pm-ad,.post-ad,.post-sponsored,.post_ad,.postad,.=
premiumAdOverlay,.premiumAdOverlayClose,.promoAd,.pub_300x250,.pub_300x250m=
,.pub_728x90,.publicidade,.pushdown-ad,.quads-location,.rail-ad,.rbRectAd,.=
rectangle_ad,.refreshAds,.region-top-ad-position,.reklam,.reklama,.reportAd=
Link,.resultad,.review-ad,.right-ad,.rightAd,.right_ad,.right_ads_column,.r=
ightad,.rightadv,.searchAds,.searchad,.searchads,.section-adv,.section-spon=
sor,.showAd,.showads,.side-ad,.side-bar-ad-position1,.sideAd,.sidebar-ad-c,=
.sidebar-ads,.single-ad,.singleAd,.skinAd,.sky_ad,.skyscraperAd,.slide-ad,.=
smallAd,.small_ad,.smallads,.sponsor-box,.sponsor-logo,.sponsorBlock,.spons=
orBottom,.sponsor_block,.sponsoredLinks,.sponsorlink,.sticky-ad,.story-ad,.=
taboola-ad,.tc_ad_unit,.td-ad,.td-header-ad-wrap,.text-ad,.text-ad-links,.t=
ext-ads,.textAd,.text_ad,.text_ads,.textad,.textads,.top-ad,.top-ad-contain=
er,.top-ad-content,.top-ad-wrapper,.top-advert,.topAD,.topAds,.top_ad,.top_=
ad_div,.top_ad_wrap,.top_ads,.topads,.tower-ad,.trc-content-sponsored,.trc_=
rbox .syndicatedItem,.trc_rbox_border_elm .syndicatedItem,.trc_rbox_div .sy=
ndicatedItem,.trc_related_container div[data-item-syndicated=3D"true"],.typ=
e_ads_default,.vertical-ads,.view_ad,.wide-ad,.wideAd,.withAds,.wnad,.wpIns=
ertInPostAd,.wp_bannerize,.yom-ad,[href*=3D"media.hubfiles.gdn"],[href*=3D"=
xlovecam.com/promo/tracking/"],[href^=3D"http://in.mydirtyhobby.com/track/"=
],[href^=3D"http://join.allofgfs.com/track/"],[href^=3D"http://join.freshgf=
s.com/track/"],[href^=3D"http://join.innocenthigh.com/track/"],[href^=3D"ht=
tp://join.muffx.com/track/"],[href^=3D"http://join.seemygf.com/track/"],[hr=
ef^=3D"http://join.self-shot.com/track/"],[href^=3D"http://join.teengfsex.c=
om/track/"],[href^=3D"http://myalternativegflink.com/track/"],[href^=3D"htt=
p://secure.18exgfs.com/track/"],[href^=3D"http://secure.badassgirlfriends.c=
om/track/"],[href^=3D"http://secure.bustygfsexposed.com/track/"],[href^=3D"=
http://secure.chatrevenge.com/track/"],[href^=3D"http://secure.dagfs.com/tr=
ack/"],[href^=3D"http://secure.fubilov.com/track/"],[href^=3D"http://secure=
.hotgfvideos.com/track/"],[href^=3D"http://secure.mynngf.com/track/"],[href=
^=3D"http://secure.obsessedwithmyself.com/track/"],[href^=3D"http://secure.=
publicgfvideos.com/track/"],[href^=3D"http://secure.realgfsexposed.com/trac=
k/"],[href^=3D"http://secure.slutswithphones.com/track/"],[href^=3D"http://=
secure.watchmygf.com/track/"],[id*=3D"ScriptRoot"],a[href*=3D"&utm_medium=
=3Dcpa"][target=3D"_blank"],a[href*=3D".converteam.online"],a[href*=3D".rev=
imedia.com/"],a[href*=3D".trust.zone"],a[href*=3D".yvok.ru"],a[href*=3D"//a=
dmag.pro/"],a[href*=3D"//ukrmedia.center/"],a[href*=3D"/adrotate-out.php?"]=
,a[href*=3D"/advtise.net"],a[href*=3D"/bodyclick.net"],a[href*=3D"/hit.all-=
in-one.pp.ua/search?"],a[href*=3D"/maniya.info"],a[href*=3D"/relap.io/adv/"=
],a[href*=3D"/rikkobr.com"],a[href*=3D"/skiles.link"],a[href*=3D"/starinfor=
m.ru"],a[href*=3D"/traforet.com"],a[href*=3D"101xp.com/?utm_source=3Dad"],a=
[href*=3D"1xwgn.xyz"],a[href*=3D"2di.site"],a[href*=3D"://winline.ru"],a[hr=
ef*=3D"abs-cdn.org"],a[href*=3D"actionteaser.ru"],a[href*=3D"adsmedia-provi=
der.com"],a[href*=3D"advclicks.net"],a[href*=3D"advert-content.com"],a[href=
*=3D"aff-ads.com"],a[href*=3D"autochetki.ru"] img,a[href*=3D"autoteaser.net=
"],a[href*=3D"bigleads.ru"],a[href*=3D"binomo.com/promo"] > img,a[href*=3D"=
bromigo.pw"],a[href*=3D"catcut.net"],a[href*=3D"clickscloud.net"],a[href*=
=3D"cpagette.com"],a[href*=3D"cpagetti.com"],a[href*=3D"cpagettio.com"],a[h=
ref*=3D"cpaggetti.com"],a[href*=3D"cpaggetti.ru"],a[href*=3D"cpamatica.com"=
],a[href*=3D"download-center.club"],a[href*=3D"globalteaser.ru"],a[href*=3D=
"incrypted.net"][href*=3D"banner"][target=3D"_blank"],a[href*=3D"installoff=
er.net"],a[href*=3D"kadam.net"],a[href*=3D"kadam.ru"],a[href*=3D"leadadvert=
.ru"],a[href*=3D"lenkmio.com"][target=3D"_blank"],a[href*=3D"marathonmirror=
bet.com"],a[href*=3D"marketgid.com/"],a[href*=3D"medicinetizer.ru"],a[href*=
=3D"novostimira.biz"],a[href*=3D"omnicpa.ru"],a[href*=3D"onetwoaffiliates.c=
om"],a[href*=3D"people-group.su"],a[href*=3D"promoheads.com"],a[href*=3D"re=
als-gooods.ru"],a[href*=3D"recreativ.ru"],a[href*=3D"redtram.com"],a[href*=
=3D"rootmedia.cc"],a[href*=3D"runetki.com"],a[href*=3D"salesdoubler.com.ua"=
],a[href*=3D"teasermoney.com"],a[href*=3D"tizerclick.com"],a[href*=3D"tovar=
.helloprice.ru/click/"],a[href*=3D"trafmag.com"],a[href*=3D"true-gooods.ru"=
],a[href*=3D"universallnk.com"],a[href*=3D"wwwapteka.info"],a[href*=3D"zen.=
yandex."] > img:not([src*=3D"gstatic.com"]):not([onload*=3D"google"]),a[hre=
f*=3D"zozoter.ru"],a[href^=3D"http://ad-emea.doubleclick.net/"],a[href^=3D"=
http://ad.doubleclick.net/"],a[href^=3D"http://adfarm.mediaplex.com/"],a[hr=
ef^=3D"http://ads.betfair.com/redirect.aspx?"],a[href^=3D"http://ads2.willi=
amhill.com/redirect.aspx?"],a[href^=3D"http://adserving.unibet.com/"],a[hre=
f^=3D"http://adultfriendfinder.com/p/register.cgi?pid=3D"],a[href^=3D"http:=
//affiliate.coral.co.uk/processing/"],a[href^=3D"http://amigo-free.website/=
"],a[href^=3D"http://amigo-source.website/"],a[href^=3D"http://amigoman.pw/=
"],a[href^=3D"http://amigone.pw/"],a[href^=3D"http://marketgid.com"],a[href=
^=3D"http://mgid.com/"],a[href^=3D"http://online.ladbrokes.com/promoRedirec=
t?"],a[href^=3D"http://partner.sbaffiliates.com/"],a[href^=3D"http://pubads=
.g.doubleclick.net/"],a[href^=3D"http://us.marketgid.com"],a[href^=3D"http:=
//www.adskeeper.co.uk/"],a[href^=3D"http://www.fbooksluts.com/"],a[href^=3D=
"http://www.fleshlight.com/"],a[href^=3D"http://www.liutilities.com/"],a[hr=
ef^=3D"http://www.socialsex.com/"],a[href^=3D"http://www.yourfuckbook.com/?=
"],a[href^=3D"https://ad.doubleclick.net/"],a[href^=3D"https://servedbyadbu=
tler.com/"],a[href^=3D"https://www.financeads.net/tc.php?"],a[onclick*=3D"m=
edia-rotate.com"],a[onclick*=3D"reklamka.ru.net"],a[onmousedown^=3D"this.hr=
ef=3D'https://paid.outbrain.com/network/redir?"][target=3D"_blank"],div[cla=
ss*=3D"notifier_baloon_"],div[id$=3D"notifiers_wrap"],div[id^=3D"MarketGid"=
],div[id^=3D"adfox_"],div[id^=3D"advads-"],div[id^=3D"cpa_rotator_block"],d=
iv[id^=3D"dfp-ad-"],div[id^=3D"div-gpt-ad"],div[id^=3D"google_ads_iframe_"]=
,div[id^=3D"vk_ads_"],div[itemtype=3D"http://schema.org/WPAdBlock"],form[ac=
tion^=3D"//12go.asia/"][target=3D"_blank"] > .powered,iframe[id^=3D"google_=
ads_frame"],iframe[id^=3D"google_ads_iframe"],iframe[src*=3D".cameraprive.c=
om"],iframe[src*=3D"//sass.com.ua/"],iframe[src*=3D"/adnetpartner.com"],ifr=
ame[src*=3D"/uniontraff.com"],iframe[src*=3D"bongacams.com"],iframe[src*=3D=
"directadvert"],iframe[src^=3D"http://ad.yieldmanager.com/"],iframe[src^=3D=
"https://www.favorit.com.ua/"],iframe[width=3D"240"][height=3D"400"],img[wi=
dth=3D"468"][height=3D"60"],img[width=3D"728"][height=3D"90"],noindex a[hre=
f^=3D"http://www.westmister.eu/collection/"],noindex a[href^=3D"http://www.=
westmister.eu/collection/"] ~ * {display: none !important; color: #5c2e67 !=
important; background-color: #79edb2 !important;}</style></head>
<body>

<p style=3D"text-align:center;font-size:24pt;font-weight:bold;">A descripti=
on on how to use and modify libpng</p>

<p>
 <b>libpng version 1.2.5 - October 2, 2002</b><br>
 Updated and distributed by Glenn Randers-Pehrson
<!-- &lt;randeg&#64;alum.rpi.edu&gt; -->
&lt;glennrp@users.sf.net&gt;<br>
 Copyright (c) 1998-2002 Glenn Randers-Pehrson<br>
 For conditions of distribution and use, see <a href=3D"http://www.libpng.o=
rg/pub/png/libpng-1.2.5-manual.html#section-10">copyright notice</a> in png=
.h.<br>
<br>
 based on:<br>
<br>
 libpng 1.0 beta 6  version 0.96 May 28, 1997<br>
 Updated and distributed by Andreas Dilger<br>
 Copyright (c) 1996, 1997 Andreas Dilger<br>
<br>
 libpng 1.0 beta 2 - version 0.88  January 26, 1996<br>
 For conditions of distribution and use, see copyright notice in png.h.<br>
 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.<br>
<br>
 Updated/rewritten per request in the libpng FAQ<br>
 Copyright (c) 1995, 1996 Frank J. T. Wojcik<br>
 December 18, 1995 &amp; January 20, 1996
</p>

<hr>

<ul wfd-id=3D"0">
<li wfd-id=3D"42"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-1">I. Introduction</a></li>
<li wfd-id=3D"41"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-2">II. Structures</a></li>
<li wfd-id=3D"29"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-3">III. Reading</a>
<ul wfd-id=3D"30">
<li wfd-id=3D"40"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-3.1">Setup</a></li>
<li wfd-id=3D"39"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-3.2">Setting up callback code</a></li>
<li wfd-id=3D"38"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-3.3">Unknown-chunk handling</a></li>
<li wfd-id=3D"37"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-3.4">The high-level read interface</a></li>
<li wfd-id=3D"36"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-3.5">The low-level read interface</a></li>
<li wfd-id=3D"35"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-3.6">Querying the info structure</a></li>
<li wfd-id=3D"34"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-3.7">Input transformations</a></li>
<li wfd-id=3D"33"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-3.8">Reading image data</a></li>
<li wfd-id=3D"32"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-3.9">Finishing a sequential read</a></li>
<li wfd-id=3D"31"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-3.10">Reading PNG files progressively</a></li>
</ul></li>

<li wfd-id=3D"19"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-4">IV. Writing</a>
<ul wfd-id=3D"20">
<li wfd-id=3D"28"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-4.1">Setup</a></li>
<li wfd-id=3D"27"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-4.2">Write callbacks</a></li>
<li wfd-id=3D"26"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-4.3">Setting the contents of info for output</a></li>
<li wfd-id=3D"25"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-4.4">Writing unknown chunks</a></li>
<li wfd-id=3D"24"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-4.5">The high-level write interface</a></li>
<li wfd-id=3D"23"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-4.6">The low-level write interface</a></li>
<li wfd-id=3D"22"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-4.7">Writing the image data</a></li>
<li wfd-id=3D"21"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-4.8">Finishing a sequential write</a></li>
</ul></li>

<li wfd-id=3D"6"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-manu=
al.html#section-5">V. Modifying/Customizing libpng:</a>
<ul wfd-id=3D"7">
<li wfd-id=3D"18"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-5.1">Memory allocation, input/output, and error handling</=
a></li>
<li wfd-id=3D"17"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-5.2">Custom chunks</a></li>
<li wfd-id=3D"16"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-5.3">Configuring for 16 bit platforms</a></li>
<li wfd-id=3D"15"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-5.4">Configuring for DOS</a></li>
<li wfd-id=3D"14"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-5.5">Configuring for Medium Model</a></li>
<li wfd-id=3D"13"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-5.6">Configuring for gui/windowing platforms:</a></li>
<li wfd-id=3D"12"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-5.7">Configuring for compiler xxx:</a></li>
<li wfd-id=3D"11"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-5.8">Configuring zlib:</a></li>
<li wfd-id=3D"10"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-man=
ual.html#section-5.9">Controlling row filtering</a></li>
<li wfd-id=3D"9"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-manu=
al.html#section-5.10">Removing unwanted object code</a></li>
<li wfd-id=3D"8"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-manu=
al.html#section-5.11">Requesting debug printout</a></li>
</ul></li>

<li wfd-id=3D"5"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-manu=
al.html#section-6">VI.  Runtime optimization</a></li>
<li wfd-id=3D"4"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-manu=
al.html#section-7">VII.  MNG support</a></li>
<li wfd-id=3D"3"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-manu=
al.html#section-8">VIII.  Changes to Libpng from version 0.88</a></li>
<li wfd-id=3D"2"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-manu=
al.html#section-9">IX. Y2K Compliance in libpng</a></li>
<li wfd-id=3D"1"><a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-manu=
al.html#section-10">X. Copyright notice, disclaimer, and license</a></li>
</ul>

<hr>

<h1 id=3D"section-1">I. Introduction</h1>

<p>This file describes how to use and modify the PNG reference library
(known as libpng) for your own use.  There are five sections to this
file: introduction, structures, reading, writing, and modification and
configuration notes for various special platforms.  In addition to this
file, example.c is a good starting point for using the library, as
it is heavily commented and should include everything most people
will need.  We assume that libpng is already installed; see the
INSTALL file for instructions on how to install libpng.</p>

<p>Libpng was written as a companion to the PNG specification, as a way
of reducing the amount of time and effort it takes to support the PNG
file format in application programs.</p>

<p>The PNG-1.2 specification is available at
<a href=3D"http://www.libpng.org/pub/png">&lt;http://www.libpng.org/pub/png=
&gt;</a>
and at
<a href=3D"ftp://ftp.uu.net/graphics/png/documents/">&lt;ftp://ftp.uu.net/g=
raphics/png/documents/&gt;</a>.</p>

<p>The PNG-1.0 specification is available as RFC 2083 <a href=3D"ftp://ftp.=
uu.net/graphics/png/documents/">&lt;ftp://ftp.uu.net/graphics/png/documents=
/&gt;</a>
and as a W3C Recommendation <a href=3D"http://www.w3.org/TR/REC.png.html">&=
lt;http://www.w3.org/TR/REC.png.html&gt;</a>. Some
additional chunks are described in the special-purpose public chunks
documents at <a href=3D"ftp://ftp.uu.net/graphics/png/documents/">&lt;ftp:/=
/ftp.uu.net/graphics/png/documents/&gt;</a>.</p>

<p>Other information about PNG, and the latest version of libpng, can
be found at the PNG home page, <a href=3D"http://www.libpng.org/pub/png/">&=
lt;http://www.libpng.org/pub/png/&gt;</a>
and at <a href=3D"ftp://ftp.uu.net/graphics/png/">&lt;ftp://ftp.uu.net/grap=
hics/png/&gt;</a>.</p>

<p>Most users will not have to modify the library significantly; advanced
users may want to modify it more.  All attempts were made to make it as
complete as possible, while keeping the code easy to understand.
Currently, this library only supports C.  Support for other languages
is being considered.</p>

<p>Libpng has been designed to handle multiple sessions at one time,
to be easily modifiable, to be portable to the vast majority of
machines (ANSI, K&amp;R, 16-, 32-, and 64-bit) available, and to be easy
to use.  The ultimate goal of libpng is to promote the acceptance of
the PNG file format in whatever way possible.  While there is still
work to be done (see the TODO file), libpng should cover the
majority of the needs of its users.</p>

<p>Libpng uses zlib for its compression and decompression of PNG
files.  Further information about zlib, and the latest version of
zlib, can be found at the zlib home page, <a href=3D"http://www.info-zip.or=
g/pub/infozip/zlib/">&lt;http://www.info-zip.org/pub/infozip/zlib/&gt;</a>.
The zlib compression utility is a general purpose utility that is
useful for more than PNG files, and can be used without libpng.  See
the documentation delivered with zlib for more details.  You can
usually find the source files for the zlib utility wherever you find
the libpng source files.</p>

<p>Libpng is thread safe, provided the threads are using different
instances of the structures.  Each thread should have its own
png_struct and png_info instances, and thus its own image.
Libpng does not protect itself against two threads using the
same instance of a structure.  Note: thread safety may be defeated
by use of some of the MMX assembler code in pnggccrd.c, which is only
compiled when the user defines PNG_THREAD_UNSAFE_OK.</p>


<h1 id=3D"section-2">II. Structures</h1>

<p>There are two main structures that are important to libpng, png_struct
and png_info.  The first, png_struct, is an internal structure that
will not, for the most part, be used by a user except as the first
variable passed to every libpng function call.</p>

<p>The png_info structure is designed to provide information about the
PNG file.  At one time, the fields of png_info were intended to be
directly accessible to the user.  However, this tended to cause problems
with applications using dynamically loaded libraries, and as a result
a set of interface functions for png_info (the png_get_*() and png_set_*()
functions) was developed.  The fields of png_info are still available for
older applications, but it is suggested that applications use the new
interfaces if at all possible.</p>

<p>Applications that do make direct access to the members of png_struct (ex=
cept
for png_ptr-&gt;jmpbuf) must be recompiled whenever the library is updated,
and applications that make direct access to the members of png_info must
be recompiled if they were compiled or loaded with libpng version 1.0.6,
in which the members were in a different order.  In version 1.0.7, the
members of the png_info structure reverted to the old order, as they were
in versions 0.97c through 1.0.5.  Starting with version 2.0.0, both
structures are going to be hidden, and the contents of the structures will
only be accessible through the png_get/png_set functions.</p>

<p>The png.h header file is an invaluable reference for programming with li=
bpng.
And while I'm on the topic, make sure you include the libpng header file:</=
p>

<pre>   #include &lt;png.h&gt;
</pre>


<h1 id=3D"section-3">III. Reading</h1>

<p>We'll now walk you through the possible functions to call when
reading in a PNG file sequentially, briefly explaining the syntax and
purpose of each one.  See example.c and png.h for more detail.  While
progressive reading is covered in the <a href=3D"http://www.libpng.org/pub/=
png/libpng-1.2.5-manual.html#section-3.10">next
section</a>, you will still need some of the functions discussed in
this section to read a PNG file.</p>

<h2 id=3D"section-3.1">Setup</h2>

<p>You will want to do the I/O initialization(*) before you get into libpng=
,
so if it doesn't work, you don't have much to undo.  Of course, you
will also want to insure that you are, in fact, dealing with a PNG
file.  Libpng provides a simple check to see if a file is a PNG file.
To use it, pass in the first 1 to 8 bytes of the file to the function
png_sig_cmp(), and it will return 0 if the bytes match the corresponding
bytes of the PNG signature, or nonzero otherwise.  Of course, the more byte=
s
you pass in, the greater the accuracy of the prediction.</p>

<p>If you are intending to keep the file pointer open for use in libpng,
you must ensure you don't read more than 8 bytes from the beginning
of the file, and you also have to make a call to png_set_sig_bytes_read()
with the number of bytes you read from the beginning.  Libpng will
then only check the bytes (if any) that your program didn't read.</p>

<p>(*): If you are not using the standard I/O functions, you will need
to replace them with custom functions.  See the discussion under
<a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-manual.html#section-5=
">Customizing libpng</a>.</p>

<pre>    FILE *fp =3D fopen(file_name, "rb");
    if (!fp)
    {
        return (ERROR);
    }
    fread(header, 1, number, fp);
    is_png =3D !png_sig_cmp(header, 0, number);
    if (!is_png)
    {
        return (NOT_PNG);
    }
</pre>

<p>Next, png_struct and png_info need to be allocated and initialized.
In order to ensure that the size of these structures is correct even
with a dynamically linked libpng, there are functions to initialize
and allocate the structures.  We also pass the library version,
optional pointers to error handling functions, and a pointer to a data
struct for use by the error functions, if necessary (the pointer and
functions can be NULL if the default error handlers are to be used).
See the section on <a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-ma=
nual.html#section-8">Changes to Libpng</a> below regarding
the old initialization functions.  The structure allocation functions
quietly return NULL if they fail to create the structure, so your
application should check for that.</p>

<pre>    png_structp png_ptr =3D png_create_read_struct
       (PNG_LIBPNG_VER_STRING, (png_voidp)user_error_ptr,
        user_error_fn, user_warning_fn);
    if (!png_ptr)
        return (ERROR);

    png_infop info_ptr =3D png_create_info_struct(png_ptr);
    if (!info_ptr)
    {
        png_destroy_read_struct(&amp;png_ptr,
           (png_infopp)NULL, (png_infopp)NULL);
        return (ERROR);
    }

    png_infop end_info =3D png_create_info_struct(png_ptr);
    if (!end_info)
    {
        png_destroy_read_struct(&amp;png_ptr, &amp;info_ptr,
          (png_infopp)NULL);
        return (ERROR);
    }
</pre>

<p>If you want to use your own memory allocation routines,
define PNG_USER_MEM_SUPPORTED and use
png_create_read_struct_2() instead of png_create_read_struct():</p>

<pre>    png_structp png_ptr =3D png_create_read_struct_2
       (PNG_LIBPNG_VER_STRING, (png_voidp)user_error_ptr,
        user_error_fn, user_warning_fn, (png_voidp)
        user_mem_ptr, user_malloc_fn, user_free_fn);
</pre>

<p>The error handling routines passed to png_create_read_struct()
and the memory alloc/free routines passed to png_create_struct_2()
are only necessary if you are not using the libpng supplied error
handling and memory alloc/free functions.</p>

<p>When libpng encounters an error, it expects to longjmp back
to your routine.  Therefore, you will need to call setjmp and pass
your png_jmpbuf(png_ptr).  If you read the file from different
routines, you will need to update the jmpbuf field every time you enter
a new routine that will call a png_*() function.</p>

<p>See your documentation of setjmp/longjmp for your compiler for more
information on setjmp/longjmp.  See the discussion on libpng error
handling in the <a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-manua=
l.html#section-5">Customizing Libpng</a> section below for
more information on the libpng error handling.  If an error occurs,
and libpng longjmp's back to your setjmp, you will want to call
png_destroy_read_struct() to free any memory.</p>

<pre>    if (setjmp(png_jmpbuf(png_ptr)))
    {
        png_destroy_read_struct(&amp;png_ptr, &amp;info_ptr,
           &amp;end_info);
        fclose(fp);
        return (ERROR);
    }
</pre>

<p>If you would rather avoid the complexity of setjmp/longjmp issues,
you can compile libpng with PNG_SETJMP_NOT_SUPPORTED, in which case
errors will result in a call to PNG_ABORT() which defaults to abort().</p>

<p>Now you need to set up the input code.  The default for libpng is
to use the C function fread().  If you use this, you will need to pass
a valid FILE * in the function png_init_io().  Be sure that the file
is opened in binary mode.  If you wish to handle reading data in
another way, you need not call the png_init_io() function, but you
must then implement the libpng I/O methods discussed in the <a href=3D"http=
://www.libpng.org/pub/png/libpng-1.2.5-manual.html#section-5">Customizing L=
ibpng</a> section below.</p>

<pre>    png_init_io(png_ptr, fp);
</pre>

<p>If you had previously opened the file and read any of the signature from
the beginning in order to see if this was a PNG file, you need to let
libpng know that there are some bytes missing from the start of the file.</=
p>

<pre>    png_set_sig_bytes(png_ptr, number);
</pre>

<h2 id=3D"section-3.2">Setting up callback code</h2>

<p>You can set up a callback function to handle any unknown chunks in the
input stream. You must supply the function</p>

<pre>    read_chunk_callback(png_ptr ptr,
         png_unknown_chunkp chunk);
    {
       /* The unknown chunk structure contains your
          chunk data: */
           png_byte name[5];
           png_byte *data;
           png_size_t size;
       /* Note that libpng has already taken care of
          the CRC handling */

       /* put your code here.  Return one of the
          following: */

       return (-n); /* chunk had an error */
       return (0); /* did not recognize */
       return (n); /* success */
    }
</pre>

<p>(You can give your function another name that you like instead of
"read_chunk_callback")</p>

<p>To inform libpng about your function, use</p>

<pre>    png_set_read_user_chunk_fn(png_ptr, user_chunk_ptr,
        read_chunk_callback);
</pre>

<p>This names not only the callback function, but also a user pointer that
you can retrieve with</p>

<pre>    png_get_user_chunk_ptr(png_ptr);
</pre>

<p>At this point, you can set up a callback function that will be
called after each row has been read, which you can use to control
a progress meter or the like.  It's demonstrated in pngtest.c.
You must supply a function</p>

<pre>    void read_row_callback(png_ptr ptr, png_uint_32 row,
       int pass);
    {
      /* put your code here */
    }
</pre>

<p>(You can give it another name that you like instead of "read_row_callbac=
k")</p>

<p>To inform libpng about your function, use</p>

<pre>    png_set_read_status_fn(png_ptr, read_row_callback);
</pre>

<h2 id=3D"section-3.3">Unknown-chunk handling</h2>

<p>Now you get to set the way the library processes unknown chunks in the
input PNG stream. Both known and unknown chunks will be read.  Normal
behavior is that known chunks will be parsed into information in
various info_ptr members; unknown chunks will be discarded. To change
this, you can call:</p>

<pre>    png_set_keep_unknown_chunks(png_ptr, info_ptr, keep,
        chunk_list, num_chunks);
    keep       - 0: do not keep
                 1: keep only if safe-to-copy
                 2: keep even if unsafe-to-copy
    chunk_list - list of chunks affected (a byte string,
                 five bytes per chunk, NULL or '\0' if
                 num_chunks is 0)
    num_chunks - number of chunks affected; if 0, all
                 unknown chunks are affected
</pre>

<p>Unknown chunks declared in this way will be saved as raw data onto a
list of png_unknown_chunk structures.  If a chunk that is normally
known to libpng is named in the list, it will be handled as unknown,
according to the "keep" directive.  If a chunk is named in successive
instances of png_set_keep_unknown_chunks(), the final instance will
take precedence.</p>

<h2 id=3D"section-3.4">The high-level read interface</h2>

<p>At this point there are two ways to proceed; through the high-level
read interface, or through a sequence of low-level read operations.
You can use the high-level interface if (a) you are willing to read
the entire image into memory, and (b) the input transformations
you want to do are limited to the following set:</p>

<pre>    PNG_TRANSFORM_IDENTITY      No transformation
    PNG_TRANSFORM_STRIP_16      Strip 16-bit samples to
                                8 bits
    PNG_TRANSFORM_STRIP_ALPHA   Discard the alpha channel
    PNG_TRANSFORM_PACKING       Expand 1, 2 and 4-bit
                                samples to bytes
    PNG_TRANSFORM_PACKSWAP      Change order of packed
                                pixels to LSB first
    PNG_TRANSFORM_EXPAND        Perform set_expand()
    PNG_TRANSFORM_INVERT_MONO   Invert monochrome images
    PNG_TRANSFORM_SHIFT         Normalize pixels to the
                                sBIT depth
    PNG_TRANSFORM_BGR           Flip RGB to BGR, RGBA
                                to BGRA
    PNG_TRANSFORM_SWAP_ALPHA    Flip RGBA to ARGB or GA
                                to AG
    PNG_TRANSFORM_INVERT_ALPHA  Change alpha from opacity
                                to transparency
    PNG_TRANSFORM_SWAP_ENDIAN   Byte-swap 16-bit samples
</pre>

<p>(This excludes setting a background color, doing gamma transformation,
dithering, and setting filler.)  If this is the case, simply do this:</p>

<pre>    png_read_png(png_ptr, info_ptr, png_transforms, NULL)
</pre>

<p>where png_transforms is an integer containing the logical OR of
some set of transformation flags.  This call is equivalent to png_read_info=
(),
followed the set of transformations indicated by the transform mask,
then png_read_image(), and finally png_read_end().</p>

<p>(The final parameter of this call is not yet used.  Someday it might poi=
nt
to transformation parameters required by some future input transform.)</p>

<p>After you have called png_read_png(), you can retrieve the image data
with</p>

<pre>   row_pointers =3D png_get_rows(png_ptr, info_ptr);
</pre>

<p>where row_pointers is an array of pointers to the pixel data for each ro=
w:</p>

<pre>   png_bytep row_pointers[height];
</pre>

<p>If you know your image size and pixel size ahead of time, you can alloca=
te
row_pointers prior to calling png_read_png() with</p>

<pre>   row_pointers =3D png_malloc(png_ptr,
      height*sizeof(png_bytep));
   for (int i=3D0; i&lt;height, i++)
      row_pointers[i]=3Dpng_malloc(png_ptr,
         width*pixel_size);
   png_set_rows(png_ptr, info_ptr, &amp;row_pointers);
</pre>

<p>Alternatively you could allocate your image in one big block and define
row_pointers[i] to point into the proper places in your block.</p>

<p>If you use png_set_rows(), the application is responsible for freeing
row_pointers (and row_pointers[i], if they were separately allocated).</p>

<p>If you don't allocate row_pointers ahead of time, png_read_png() will
do it, and it'll be free'ed when you call png_destroy_*().</p>

<h2 id=3D"section-3.5">The low-level read interface</h2>

<p>If you are going the low-level route, you are now ready to read all
the file information up to the actual image data.  You do this with a
call to png_read_info().</p>

<pre>    png_read_info(png_ptr, info_ptr);
</pre>

<p>This will process all chunks up to but not including the image data.</p>

<h2 id=3D"section-3.6">Querying the info structure</h2>

<p>Functions are used to get the information from the info_ptr once it
has been read.  Note that these fields may not be completely filled
in until png_read_end() has read the chunk data following the image.</p>

<pre>    png_get_IHDR(png_ptr, info_ptr, &amp;width, &amp;height,
       &amp;bit_depth, &amp;color_type, &amp;interlace_type,
       &amp;compression_type, &amp;filter_method);

    width          - holds the width of the image
                     in pixels (up to 2^31).
    height         - holds the height of the image
                     in pixels (up to 2^31).
    bit_depth      - holds the bit depth of one of the
                     image channels.  (valid values are
                     1, 2, 4, 8, 16 and depend also on
                     the color_type.  See also
                     significant bits (sBIT) below).
    color_type     - describes which color/alpha channels
                         are present.
                     PNG_COLOR_TYPE_GRAY
                        (bit depths 1, 2, 4, 8, 16)
                     PNG_COLOR_TYPE_GRAY_ALPHA
                        (bit depths 8, 16)
                     PNG_COLOR_TYPE_PALETTE
                        (bit depths 1, 2, 4, 8)
                     PNG_COLOR_TYPE_RGB
                        (bit_depths 8, 16)
                     PNG_COLOR_TYPE_RGB_ALPHA
                        (bit_depths 8, 16)

                     PNG_COLOR_MASK_PALETTE
                     PNG_COLOR_MASK_COLOR
                     PNG_COLOR_MASK_ALPHA

    filter_method  - (must be PNG_FILTER_TYPE_BASE
                     for PNG 1.0, and can also be
                     PNG_INTRAPIXEL_DIFFERENCING if
                     the PNG datastream is embedded in
                     a MNG-1.0 datastream)
    compression_type - (must be PNG_COMPRESSION_TYPE_BASE
                     for PNG 1.0)
    interlace_type - (PNG_INTERLACE_NONE or
                     PNG_INTERLACE_ADAM7)
    Any or all of interlace_type, compression_type, of
    filter_method can be NULL if you are
    not interested in their values.

    channels =3D png_get_channels(png_ptr, info_ptr);
    channels       - number of channels of info for the
                     color type (valid values are 1 (GRAY,
                     PALETTE), 2 (GRAY_ALPHA), 3 (RGB),
                     4 (RGB_ALPHA or RGB + filler byte))
    rowbytes =3D png_get_rowbytes(png_ptr, info_ptr);
    rowbytes       - number of bytes needed to hold a row

    signature =3D png_get_signature(png_ptr, info_ptr);
    signature      - holds the signature read from the
                     file (if any).  The data is kept in
                     the same offset it would be if the
                     whole signature were read (i.e. if an
                     application had already read in 4
                     bytes of signature before starting
                     libpng, the remaining 4 bytes would
                     be in signature[4] through signature[7]
                     (see png_set_sig_bytes())).


    width            =3D png_get_image_width(png_ptr,
                         info_ptr);
    height           =3D png_get_image_height(png_ptr,
                         info_ptr);
    bit_depth        =3D png_get_bit_depth(png_ptr,
                         info_ptr);
    color_type       =3D png_get_color_type(png_ptr,
                         info_ptr);
    filter_method    =3D png_get_filter_type(png_ptr,
                         info_ptr);
    compression_type =3D png_get_compression_type(png_ptr,
                         info_ptr);
    interlace_type   =3D png_get_interlace_type(png_ptr,
                         info_ptr);
</pre>

<p>These are also important, but their validity depends on whether the chun=
k
has been read.  The png_get_valid(png_ptr, info_ptr, PNG_INFO_&lt;chunk&gt;=
) and
png_get_&lt;chunk&gt;(png_ptr, info_ptr, ...) functions return non-zero if =
the
data has been read, or zero if it is missing.  The parameters to the
png_get_&lt;chunk&gt; are set directly if they are simple data types, or a =
pointer
into the info_ptr is returned for any complex types.</p>

<pre>    png_get_PLTE(png_ptr, info_ptr, &amp;palette,
                     &amp;num_palette);
    palette        - the palette for the file
                     (array of png_color)
    num_palette    - number of entries in the palette

    png_get_gAMA(png_ptr, info_ptr, &amp;gamma);
    gamma          - the gamma the file is written
                     at (PNG_INFO_gAMA)

    png_get_sRGB(png_ptr, info_ptr, &amp;srgb_intent);
    srgb_intent    - the rendering intent (PNG_INFO_sRGB)
                     The presence of the sRGB chunk
                     means that the pixel data is in the
                     sRGB color space.  This chunk also
                     implies specific values of gAMA and
                     cHRM.

    png_get_iCCP(png_ptr, info_ptr, &amp;name,
       &amp;compression_type, &amp;profile, &amp;proflen);
    name            - The profile name.
    compression     - The compression type; always
                      PNG_COMPRESSION_TYPE_BASE for PNG 1.0.
                      You may give NULL to this argument to
                      ignore it.
    profile         - International Color Consortium color
                      profile data. May contain NULs.
    proflen         - length of profile data in bytes.

    png_get_sBIT(png_ptr, info_ptr, &amp;sig_bit);
    sig_bit        - the number of significant bits for
                     (PNG_INFO_sBIT) each of the gray,
                     red, green, and blue channels,
                     whichever are appropriate for the
                     given color type (png_color_16)

    png_get_tRNS(png_ptr, info_ptr, &amp;trans, &amp;num_trans,
                     &amp;trans_values);
    trans          - array of transparent entries for
                     palette (PNG_INFO_tRNS)
    trans_values   - graylevel or color sample values of
                     the single transparent color for
                     non-paletted images (PNG_INFO_tRNS)
    num_trans      - number of transparent entries
                     (PNG_INFO_tRNS)

    png_get_hIST(png_ptr, info_ptr, &amp;hist);
                     (PNG_INFO_hIST)
    hist           - histogram of palette (array of
                     png_uint_16)

    png_get_tIME(png_ptr, info_ptr, &amp;mod_time);
    mod_time       - time image was last modified
                    (PNG_VALID_tIME)

    png_get_bKGD(png_ptr, info_ptr, &amp;background);
    background     - background color (PNG_VALID_bKGD)
                     valid 16-bit red, green and blue
                     values, regardless of color_type

    num_comments   =3D png_get_text(png_ptr, info_ptr,
                     &amp;text_ptr, &amp;num_text);
    num_comments   - number of comments
    text_ptr       - array of png_text holding image
                     comments
    text_ptr[i].compression - type of compression used
                 on "text" PNG_TEXT_COMPRESSION_NONE
                           PNG_TEXT_COMPRESSION_zTXt
                           PNG_ITXT_COMPRESSION_NONE
                           PNG_ITXT_COMPRESSION_zTXt
    text_ptr[i].key   - keyword for comment.  Must contain
                         1-79 characters.
    text_ptr[i].text  - text comments for current
                         keyword.  Can be empty.
    text_ptr[i].text_length - length of text string,
                 after decompression, 0 for iTXt
    text_ptr[i].itxt_length - length of itxt string,
                 after decompression, 0 for tEXt/zTXt
    text_ptr[i].lang  - language of comment (empty
                         string for unknown).
    text_ptr[i].lang_key  - keyword in UTF-8
                         (empty string for unknown).
    num_text       - number of comments (same as
                     num_comments; you can put NULL here
                     to avoid the duplication)
    Note while png_set_text() will accept text, language,
    and translated keywords that can be NULL pointers, the
    structure returned by png_get_text will always contain
    regular zero-terminated C strings.  They might be
    empty strings but they will never be NULL pointers.

    num_spalettes =3D png_get_sPLT(png_ptr, info_ptr,
       &amp;palette_ptr);
    palette_ptr    - array of palette structures holding
                     contents of one or more sPLT chunks
                     read.
    num_spalettes  - number of sPLT chunks read.

    png_get_oFFs(png_ptr, info_ptr, &amp;offset_x, &amp;offset_y,
       &amp;unit_type);
    offset_x       - positive offset from the left edge
                     of the screen
    offset_y       - positive offset from the top edge
                     of the screen
    unit_type      - PNG_OFFSET_PIXEL, PNG_OFFSET_MICROMETER

    png_get_pHYs(png_ptr, info_ptr, &amp;res_x, &amp;res_y,
       &amp;unit_type);
    res_x          - pixels/unit physical resolution in
                     x direction
    res_y          - pixels/unit physical resolution in
                     x direction
    unit_type      - PNG_RESOLUTION_UNKNOWN,
                     PNG_RESOLUTION_METER

    png_get_sCAL(png_ptr, info_ptr, &amp;unit, &amp;width,
       &amp;height)
    unit        - physical scale units (an integer)
    width       - width of a pixel in physical scale units
    height      - height of a pixel in physical scale units
                 (width and height are doubles)

    png_get_sCAL_s(png_ptr, info_ptr, &amp;unit, &amp;width,
       &amp;height)
    unit        - physical scale units (an integer)
    width       - width of a pixel in physical scale units
    height      - height of a pixel in physical scale units
                 (width and height are strings like "2.54")

    num_unknown_chunks =3D png_get_unknown_chunks(png_ptr,
       info_ptr, &amp;unknowns)
    unknowns          - array of png_unknown_chunk
                        structures holding unknown chunks
    unknowns[i].name  - name of unknown chunk
    unknowns[i].data  - data of unknown chunk
    unknowns[i].size  - size of unknown chunk's data
    unknowns[i].location - position of chunk in file

    The value of "i" corresponds to the order in which the
    chunks were read from the PNG file or inserted with the
    png_set_unknown_chunks() function.
</pre>

<p>The data from the pHYs chunk can be retrieved in several convenient
forms:</p>

<pre>    res_x =3D png_get_x_pixels_per_meter(png_ptr,
       info_ptr)
    res_y =3D png_get_y_pixels_per_meter(png_ptr,
       info_ptr)
    res_x_and_y =3D png_get_pixels_per_meter(png_ptr,
       info_ptr)
    res_x =3D png_get_x_pixels_per_inch(png_ptr,
       info_ptr)
    res_y =3D png_get_y_pixels_per_inch(png_ptr,
       info_ptr)
    res_x_and_y =3D png_get_pixels_per_inch(png_ptr,
       info_ptr)
    aspect_ratio =3D png_get_pixel_aspect_ratio(png_ptr,
       info_ptr)

   (Each of these returns 0 [signifying "unknown"] if
       the data is not present or if res_x is 0;
       res_x_and_y is 0 if res_x !=3D res_y)
</pre>

<p>The data from the oFFs chunk can be retrieved in several convenient
forms:</p>

<pre>    x_offset =3D png_get_x_offset_microns(png_ptr, info_ptr);
    y_offset =3D png_get_y_offset_microns(png_ptr, info_ptr);
    x_offset =3D png_get_x_offset_inches(png_ptr, info_ptr);
    y_offset =3D png_get_y_offset_inches(png_ptr, info_ptr);

   (Each of these returns 0 [signifying "unknown" if both
       x and y are 0] if the data is not present or if the
       chunk is present but the unit is the pixel)
</pre>

<p>For more information, see the png_info definition in png.h and the
PNG specification for chunk contents.  Be careful with trusting
rowbytes, as some of the transformations could increase the space
needed to hold a row (expand, filler, gray_to_rgb, etc.).
See png_read_update_info(), below.</p>

<p>A quick word about text_ptr and num_text.  PNG stores comments in
keyword/text pairs, one pair per chunk, with no limit on the number
of text chunks, and a 2^31 byte limit on their size.  While there are
suggested keywords, there is no requirement to restrict the use to these
strings.  It is strongly suggested that keywords and text be sensible
to humans (that's the point), so don't use abbreviations.  Non-printing
symbols are not allowed.  See the PNG specification for more details.
There is also no requirement to have text after the keyword.</p>

<p>Keywords should be limited to 79 Latin-1 characters without leading or
trailing spaces, but non-consecutive spaces are allowed within the
keyword.  It is possible to have the same keyword any number of times.
The text_ptr is an array of png_text structures, each holding a
pointer to a language string, a pointer to a keyword and a pointer to
a text string.  The text string, language code, and translated
keyword may be empty or NULL pointers.  The keyword/text
pairs are put into the array in the order that they are received.
However, some or all of the text chunks may be after the image, so, to
make sure you have read all the text chunks, don't mess with these
until after you read the stuff after the image.  This will be
mentioned again below in the discussion that goes with png_read_end().</p>

<h2 id=3D"section-3.7">Input transformations</h2>

<p>After you've read the header information, you can set up the library
to handle any special transformations of the image data.  The various
ways to transform the data will be described in the order that they
should occur.  This is important, as some of these change the color
type and/or bit depth of the data, and some others only work on
certain color types and bit depths.  Even though each transformation
checks to see if it has data that it can do something with, you should
make sure to only enable a transformation if it will be valid for the
data.  For example, don't swap red and blue on grayscale data.</p>

<p>The colors used for the background and transparency values should be
supplied in the same format/depth as the current image data.  They
are stored in the same format/depth as the image data in a bKGD or tRNS
chunk, so this is what libpng expects for this data.  The colors are
transformed to keep in sync with the image data when an application
calls the png_read_update_info() routine (see below).</p>

<p>Data will be decoded into the supplied row buffers packed into bytes
unless the library has been told to transform it into another format.
For example, 4 bit/pixel paletted or grayscale data will be returned
2 pixels/byte with the leftmost pixel in the high-order bits of the
byte, unless png_set_packing() is called.  8-bit RGB data will be stored
in RGB RGB RGB format unless png_set_filler() is called to insert filler
bytes, either before or after each RGB triplet.  16-bit RGB data will
be returned RRGGBB RRGGBB, with the most significant byte of the color
value first, unless png_set_strip_16() is called to transform it to
regular RGB RGB triplets, or png_set_filler() is called to insert
filler bytes, either before or after each RRGGBB triplet.  Similarly,
8-bit or 16-bit grayscale data can be modified with png_set_filler()
or png_set_strip_16().</p>

<p>The following code transforms grayscale images of less than 8 to 8 bits,
changes paletted images to RGB, and adds a full alpha channel if there is
transparency information in a tRNS chunk.  This is most useful on
grayscale images with bit depths of 2 or 4 or if there is a multiple-image
viewing application that wishes to treat all images in the same way.</p>

<pre>    if (color_type =3D=3D PNG_COLOR_TYPE_PALETTE)
        png_set_palette_to_rgb(png_ptr);

    if (color_type =3D=3D PNG_COLOR_TYPE_GRAY &amp;&amp;
        bit_depth &lt; 8) png_set_gray_1_2_4_to_8(png_ptr);

    if (png_get_valid(png_ptr, info_ptr,
        PNG_INFO_tRNS)) png_set_tRNS_to_alpha(png_ptr);
</pre>

<p>These three functions are actually aliases for png_set_expand(), added
in libpng version 1.0.4, with the function names expanded to improve code
readability.  In some future version they may actually do different
things.</p>

<p>PNG can have files with 16 bits per channel.  If you only can handle
8 bits per channel, this will strip the pixels down to 8 bit.</p>

<pre>    if (bit_depth =3D=3D 16)
        png_set_strip_16(png_ptr);
</pre>

<p>If, for some reason, you don't need the alpha channel on an image,
and you want to remove it rather than combining it with the background
(but the image author certainly had in mind that you *would* combine
it with the background, so that's what you should probably do):</p>

<pre>    if (color_type &amp; PNG_COLOR_MASK_ALPHA)
        png_set_strip_alpha(png_ptr);
</pre>

<p>In PNG files, the alpha channel in an image
is the level of opacity.  If you need the alpha channel in an image to
be the level of transparency instead of opacity, you can invert the
alpha channel (or the tRNS chunk data) after it's read, so that 0 is
fully opaque and 255 (in 8-bit or paletted images) or 65535 (in 16-bit
images) is fully transparent, with</p>

<pre>    png_set_invert_alpha(png_ptr);
</pre>

<p>PNG files pack pixels of bit depths 1, 2, and 4 into bytes as small as
they can, resulting in, for example, 8 pixels per byte for 1 bit
files.  This code expands to 1 pixel per byte without changing the
values of the pixels:</p>

<pre>    if (bit_depth &lt; 8)
        png_set_packing(png_ptr);
</pre>

<p>PNG files have possible bit depths of 1, 2, 4, 8, and 16.  All pixels
stored in a PNG image have been "scaled" or "shifted" up to the next
higher possible bit depth (e.g. from 5 bits/sample in the range [0,31] to
8 bits/sample in the range [0, 255]).  However, it is also possible to
convert the PNG pixel data back to the original bit depth of the image.
This call reduces the pixels back down to the original bit depth:</p>

<pre>    png_color_8p sig_bit;

    if (png_get_sBIT(png_ptr, info_ptr, &amp;sig_bit))
        png_set_shift(png_ptr, sig_bit);
</pre>

<p>PNG files store 3-color pixels in red, green, blue order.  This code
changes the storage of the pixels to blue, green, red:</p>

<pre>    if (color_type =3D=3D PNG_COLOR_TYPE_RGB ||
        color_type =3D=3D PNG_COLOR_TYPE_RGB_ALPHA)
        png_set_bgr(png_ptr);
</pre>

<p>PNG files store RGB pixels packed into 3 or 6 bytes. This code expands t=
hem
into 4 or 8 bytes for windowing systems that need them in this format:</p>

<pre>    if (color_type =3D=3D PNG_COLOR_TYPE_RGB)
        png_set_filler(png_ptr, filler, PNG_FILLER_BEFORE);
</pre>

<p>where "filler" is the 8 or 16-bit number to fill with, and the location =
is
either PNG_FILLER_BEFORE or PNG_FILLER_AFTER, depending upon whether
you want the filler before the RGB or after.  This transformation
does not affect images that already have full alpha channels.  To add an
opaque alpha channel, use filler=3D0xff or 0xffff and PNG_FILLER_AFTER whic=
h
will generate RGBA pixels.</p>

<p>If you are reading an image with an alpha channel, and you need the
data as ARGB instead of the normal PNG format RGBA:</p>

<pre>    if (color_type =3D=3D PNG_COLOR_TYPE_RGB_ALPHA)
        png_set_swap_alpha(png_ptr);
</pre>

<p>For some uses, you may want a grayscale image to be represented as
RGB.  This code will do that conversion:</p>

<pre>    if (color_type =3D=3D PNG_COLOR_TYPE_GRAY ||
        color_type =3D=3D PNG_COLOR_TYPE_GRAY_ALPHA)
          png_set_gray_to_rgb(png_ptr);
</pre>

<p>Conversely, you can convert an RGB or RGBA image to grayscale or graysca=
le
with alpha.</p>

<pre>    if (color_type =3D=3D PNG_COLOR_TYPE_RGB ||
        color_type =3D=3D PNG_COLOR_TYPE_RGB_ALPHA)
          png_set_rgb_to_gray_fixed(png_ptr, error_action,
             int red_weight, int green_weight);

    error_action =3D 1: silently do the conversion
    error_action =3D 2: issue a warning if the original
                      image has any pixel where
                      red !=3D green or red !=3D blue
    error_action =3D 3: issue an error and abort the
                      conversion if the original
                      image has any pixel where
                      red !=3D green or red !=3D blue

    red_weight:       weight of red component times 100000
    green_weight:     weight of green component times 100000
                      If either weight is negative, default
                      weights (21268, 71514) are used.
</pre>

<p>If you have set error_action =3D 1 or 2, you can
later check whether the image really was gray, after processing
the image rows, with the png_get_rgb_to_gray_status(png_ptr) function.
It will return a png_byte that is zero if the image was gray or
1 if there were any non-gray pixels.  bKGD and sBIT data
will be silently converted to grayscale, using the green channel
data, regardless of the error_action setting.</p>

<p>With red_weight+green_weight&lt;=3D100000,
the normalized graylevel is computed:</p>

<pre>    int rw =3D red_weight * 65536;
    int gw =3D green_weight * 65536;
    int bw =3D 65536 - (rw + gw);
    gray =3D (rw*red + gw*green + bw*blue)/65536;
</pre>

<p>The default values approximate those recommended in the Charles
Poynton's Color FAQ,
<a href=3D"http://www.inforamp.net/~poynton/">&lt;http://www.inforamp.net/~=
poynton/&gt;</a>
Copyright (c) 1998-01-04 Charles Poynton poynton@inforamp.net</p>

<pre>    Y =3D 0.212671 * R + 0.715160 * G + 0.072169 * B
</pre>

<p>Libpng approximates this with</p>

<pre>    Y =3D 0.21268 * R    + 0.7151 * G    + 0.07217 * B
</pre>

<p>which can be expressed with integers as</p>

<pre>    Y =3D (6969 * R + 23434 * G + 2365 * B)/32768
</pre>

<p>The calculation is done in a linear colorspace, if the image gamma
is known.</p>

<p>If you have a grayscale and you are using png_set_expand_depth(),
png_set_expand(), or png_set_gray_to_rgb to change to truecolor or to
a higher bit-depth, you must either supply the background color as a gray
value at the original file bit-depth (need_expand =3D 1) or else supply the
background color as an RGB triplet at the final, expanded bit depth
(need_expand =3D 0).  Similarly, if you are reading a paletted image, you
must either supply the background color as a palette index (need_expand =3D=
 1)
or as an RGB triplet that may or may not be in the palette (need_expand =3D=
 0).</p>

<pre>    png_color_16 my_background;
    png_color_16p image_background;

    if (png_get_bKGD(png_ptr, info_ptr, &amp;image_background))
        png_set_background(png_ptr, image_background,
          PNG_BACKGROUND_GAMMA_FILE, 1, 1.0);
    else
        png_set_background(png_ptr, &amp;my_background,
          PNG_BACKGROUND_GAMMA_SCREEN, 0, 1.0);
</pre>

<p>The png_set_background() function tells libpng to composite images
with alpha or simple transparency against the supplied background
color.  If the PNG file contains a bKGD chunk (PNG_INFO_bKGD valid),
you may use this color, or supply another color more suitable for
the current display (e.g., the background color from a web page).  You
need to tell libpng whether the color is in the gamma space of the
display (PNG_BACKGROUND_GAMMA_SCREEN for colors you supply), the file
(PNG_BACKGROUND_GAMMA_FILE for colors from the bKGD chunk), or one
that is neither of these gammas (PNG_BACKGROUND_GAMMA_UNIQUE - I don't
know why anyone would use this, but it's here).</p>

<p>To properly display PNG images on any kind of system, the application ne=
eds
to know what the display gamma is.  Ideally, the user will know this, and
the application will allow them to set it.  One method of allowing the user
to set the display gamma separately for each system is to check for a
SCREEN_GAMMA or DISPLAY_GAMMA environment variable, which will hopefully be
correctly set.</p>

<p>Note that display_gamma is the overall gamma correction required to prod=
uce
pleasing results, which depends on the lighting conditions in the surroundi=
ng
environment.  In a dim or brightly lit room, no compensation other than
the physical gamma exponent of the monitor is needed, while in a dark room
a slightly smaller exponent is better.</p>

<pre>   double gamma, screen_gamma;

   if (/* We have a user-defined screen
       gamma value */)
   {
      screen_gamma =3D user_defined_screen_gamma;
   }
   /* One way that applications can share the same
      screen gamma value */
   else if ((gamma_str =3D getenv("SCREEN_GAMMA"))
      !=3D NULL)
   {
      screen_gamma =3D (double)atof(gamma_str);
   }
   /* If we don't have another value */
   else
   {
      screen_gamma =3D 2.2; /* A good guess for a
           PC monitor in a bright office or a dim room */
      screen_gamma =3D 2.0; /* A good guess for a
           PC monitor in a dark room */
      screen_gamma =3D 1.7 or 1.0;  /* A good
           guess for Mac systems */
   }
</pre>

<p>The png_set_gamma() function handles gamma transformations of the data.
Pass both the file gamma and the current screen_gamma.  If the file does
not have a gamma value, you can pass one anyway if you have an idea what
it is (usually 0.45455 is a good guess for GIF images on PCs).  Note
that file gammas are inverted from screen gammas.  See the discussions
on gamma in the PNG specification for an excellent description of what
gamma is, and why all applications should support it.  It is strongly
recommended that PNG viewers support gamma correction.</p>

<pre>   if (png_get_gAMA(png_ptr, info_ptr, &amp;gamma))
      png_set_gamma(png_ptr, screen_gamma, gamma);
   else
      png_set_gamma(png_ptr, screen_gamma, 0.45455);
</pre>

<p>If you need to reduce an RGB file to a paletted file, or if a paletted
file has more entries then will fit on your screen, png_set_dither()
will do that.  Note that this is a simple match dither that merely
finds the closest color available.  This should work fairly well with
optimized palettes, and fairly badly with linear color cubes.  If you
pass a palette that is larger then maximum_colors, the file will
reduce the number of colors in the palette so it will fit into
maximum_colors.  If there is a histogram, it will use it to make
more intelligent choices when reducing the palette.  If there is no
histogram, it may not do as good a job.</p>

<pre>   if (color_type &amp; PNG_COLOR_MASK_COLOR)
   {
      if (png_get_valid(png_ptr, info_ptr,
         PNG_INFO_PLTE))
      {
         png_uint_16p histogram =3D NULL;

         png_get_hIST(png_ptr, info_ptr,
            &amp;histogram);
         png_set_dither(png_ptr, palette, num_palette,
            max_screen_colors, histogram, 1);
      }
      else
      {
         png_color std_color_cube[MAX_SCREEN_COLORS] =3D
            { ... colors ... };

         png_set_dither(png_ptr, std_color_cube,
            MAX_SCREEN_COLORS, MAX_SCREEN_COLORS,
            NULL,0);
      }
   }
</pre>

<p>PNG files describe monochrome as black being zero and white being one.
The following code will reverse this (make black be one and white be
zero):</p>

<pre>   if (bit_depth =3D=3D 1 &amp;&amp; color_type =3D=3D PNG_COLOR_TYPE_=
GRAY)
      png_set_invert_mono(png_ptr);
</pre>

<p>This function can also be used to invert grayscale and gray-alpha images=
:</p>

<pre>   if (color_type =3D=3D PNG_COLOR_TYPE_GRAY ||
        color_type =3D=3D PNG_COLOR_TYPE_GRAY_ALPHA)
      png_set_invert_mono(png_ptr);
</pre>

<p>PNG files store 16 bit pixels in network byte order (big-endian,
ie. most significant bits first).  This code changes the storage to the
other way (little-endian, i.e. least significant bits first, the
way PCs store them):</p>

<pre>    if (bit_depth =3D=3D 16)
        png_set_swap(png_ptr);
</pre>

<p>If you are using packed-pixel images (1, 2, or 4 bits/pixel), and you
need to change the order the pixels are packed into bytes, you can use:</p>

<pre>    if (bit_depth &lt; 8)
       png_set_packswap(png_ptr);
</pre>

<p>Finally, you can write your own transformation function if none of
the existing ones meets your needs.  This is done by setting a callback
with</p>

<pre>    png_set_read_user_transform_fn(png_ptr,
       read_transform_fn);
</pre>

<p>You must supply the function</p>

<pre>    void read_transform_fn(png_ptr ptr, row_info_ptr
       row_info, png_bytep data)
</pre>

<p>See pngtest.c for a working example.  Your function will be called
after all of the other transformations have been processed.</p>

<p>You can also set up a pointer to a user structure for use by your
callback function, and you can inform libpng that your transform
function will change the number of channels or bit depth with the
function</p>

<pre>    png_set_user_transform_info(png_ptr, user_ptr,
       user_depth, user_channels);
</pre>

<p>The user's application, not libpng, is responsible for allocating and
freeing any memory required for the user structure.</p>

<p>You can retrieve the pointer via the function
png_get_user_transform_ptr().  For example:</p>

<pre>    voidp read_user_transform_ptr =3D
       png_get_user_transform_ptr(png_ptr);
</pre>

<p>The last thing to handle is interlacing; this is covered in detail below=
,
but you must call the function here if you want libpng to handle expansion
of the interlaced image.</p>

<pre>    number_of_passes =3D png_set_interlace_handling(png_ptr);
</pre>

<p>After setting the transformations, libpng can update your png_info
structure to reflect any transformations you've requested with this
call.  This is most useful to update the info structure's rowbytes
field so you can use it to allocate your image memory.  This function
will also update your palette with the correct screen_gamma and
background if these have been given with the calls above.</p>

<pre>    png_read_update_info(png_ptr, info_ptr);
</pre>

<p>After you call png_read_update_info(), you can allocate any
memory you need to hold the image.  The row data is simply
raw byte data for all forms of images.  As the actual allocation
varies among applications, no example will be given.  If you
are allocating one large chunk, you will need to build an
array of pointers to each row, as it will be needed for some
of the functions below.</p>

<h2 id=3D"section-3.8">Reading image data</h2>

<p>After you've allocated memory, you can read the image data.
The simplest way to do this is in one function call.  If you are
allocating enough memory to hold the whole image, you can just
call png_read_image() and libpng will read in all the image data
and put it in the memory area supplied.  You will need to pass in
an array of pointers to each row.</p>

<p>This function automatically handles interlacing, so you don't need
to call png_set_interlace_handling() or call this function multiple
times, or any of that other stuff necessary with png_read_rows().</p>

<pre>   png_read_image(png_ptr, row_pointers);
</pre>

<p>where row_pointers is:</p>

<pre>   png_bytep row_pointers[height];
</pre>

<p>You can point to void or char or whatever you use for pixels.</p>

<p>If you don't want to read in the whole image at once, you can
use png_read_rows() instead.  If there is no interlacing (check
interlace_type =3D=3D PNG_INTERLACE_NONE), this is simple:</p>

<pre>    png_read_rows(png_ptr, row_pointers, NULL,
       number_of_rows);
</pre>

<p>where row_pointers is the same as in the png_read_image() call.</p>

<p>If you are doing this just one row at a time, you can do this with
a single row_pointer instead of an array of row_pointers:</p>

<pre>    png_bytep row_pointer =3D row;
    png_read_row(png_ptr, row_pointer, NULL);
</pre>

<p>If the file is interlaced (interlace_type !=3D 0 in the IHDR chunk), thi=
ngs
get somewhat harder.  The only current (PNG Specification version 1.2)
interlacing type for PNG is (interlace_type =3D=3D PNG_INTERLACE_ADAM7)
is a somewhat complicated 2D interlace scheme, known as Adam7, that
breaks down an image into seven smaller images of varying size, based
on an 8x8 grid.</p>

<p>libpng can fill out those images or it can give them to you "as is".
If you want them filled out, there are two ways to do that.  The one
mentioned in the PNG specification is to expand each pixel to cover
those pixels that have not been read yet (the "rectangle" method).
This results in a blocky image for the first pass, which gradually
smooths out as more pixels are read.  The other method is the "sparkle"
method, where pixels are drawn only in their final locations, with the
rest of the image remaining whatever colors they were initialized to
before the start of the read.  The first method usually looks better,
but tends to be slower, as there are more pixels to put in the rows.</p>

<p>If you don't want libpng to handle the interlacing details, just call
png_read_rows() seven times to read in all seven images.  Each of the
images is a valid image by itself, or they can all be combined on an
8x8 grid to form a single image (although if you intend to combine them
you would be far better off using the libpng interlace handling).</p>

<p>The first pass will return an image 1/8 as wide as the entire image
(every 8th column starting in column 0) and 1/8 as high as the original
(every 8th row starting in row 0), the second will be 1/8 as wide
(starting in column 4) and 1/8 as high (also starting in row 0).  The
third pass will be 1/4 as wide (every 4th pixel starting in column 0) and
1/8 as high (every 8th row starting in row 4), and the fourth pass will
be 1/4 as wide and 1/4 as high (every 4th column starting in column 2,
and every 4th row starting in row 0).  The fifth pass will return an
image 1/2 as wide, and 1/4 as high (starting at column 0 and row 2),
while the sixth pass will be 1/2 as wide and 1/2 as high as the original
(starting in column 1 and row 0).  The seventh and final pass will be as
wide as the original, and 1/2 as high, containing all of the odd
numbered scanlines.  Phew!</p>

<p>If you want libpng to expand the images, call this before calling
png_start_read_image() or png_read_update_info():</p>

<pre>    if (interlace_type =3D=3D PNG_INTERLACE_ADAM7)
        number_of_passes
           =3D png_set_interlace_handling(png_ptr);
</pre>

<p>This will return the number of passes needed.  Currently, this
is seven, but may change if another interlace type is added.
This function can be called even if the file is not interlaced,
where it will return one pass.</p>

<p>If you are not going to display the image after each pass, but are
going to wait until the entire image is read in, use the sparkle
effect.  This effect is faster and the end result of either method
is exactly the same.  If you are planning on displaying the image
after each pass, the "rectangle" effect is generally considered the
better looking one.</p>

<p>If you only want the "sparkle" effect, just call png_read_rows() as
normal, with the third parameter NULL.  Make sure you make pass over
the image number_of_passes times, and you don't change the data in the
rows between calls.  You can change the locations of the data, just
not the data.  Each pass only writes the pixels appropriate for that
pass, and assumes the data from previous passes is still valid.</p>

<pre>    png_read_rows(png_ptr, row_pointers, NULL,
       number_of_rows);
</pre>

<p>If you only want the first effect (the rectangles), do the same as
before except pass the row buffer in the third parameter, and leave
the second parameter NULL.</p>

<pre>    png_read_rows(png_ptr, NULL, row_pointers,
       number_of_rows);
</pre>

<h2 id=3D"section-3.9">Finishing a sequential read</h2>

<p>After you are finished reading the image through either the high- or
low-level interfaces, you can finish reading the file.  If you are
interested in comments or time, which may be stored either before or
after the image data, you should pass the separate png_info struct if
you want to keep the comments from before and after the image
separate.  If you are not interested, you can pass NULL.</p>

<pre>   png_read_end(png_ptr, end_info);
</pre>

<p>When you are done, you can free all memory allocated by libpng like this=
:</p>

<pre>   png_destroy_read_struct(&amp;png_ptr, &amp;info_ptr,
       &amp;end_info);
</pre>

<p>It is also possible to individually free the info_ptr members that
point to libpng-allocated storage with the following function:</p>

<pre>    png_free_data(png_ptr, info_ptr, mask, seq)
    mask - identifies data to be freed, a mask
           containing the logical OR of one or
           more of
             PNG_FREE_PLTE, PNG_FREE_TRNS,
             PNG_FREE_HIST, PNG_FREE_ICCP,
             PNG_FREE_PCAL, PNG_FREE_ROWS,
             PNG_FREE_SCAL, PNG_FREE_SPLT,
             PNG_FREE_TEXT, PNG_FREE_UNKN,
           or simply PNG_FREE_ALL
    seq  - sequence number of item to be freed
           (-1 for all items)
</pre>

<p>This function may be safely called when the relevant storage has
already been freed, or has not yet been allocated, or was allocated
by the user and not by libpng,  and will in those
cases do nothing.  The "seq" parameter is ignored if only one item
of the selected data type, such as PLTE, is allowed.  If "seq" is not
-1, and multiple items are allowed for the data type identified in
the mask, such as text or sPLT, only the n'th item in the structure
is freed, where n is "seq".</p>

<p>The default behavior is only to free data that was allocated internally
by libpng.  This can be changed, so that libpng will not free the data,
or so that it will free data that was allocated by the user with png_malloc=
()
or png_zalloc() and passed in via a png_set_*() function, with</p>

<pre>    png_data_freer(png_ptr, info_ptr, freer, mask)
    mask   - which data elements are affected
             same choices as in png_free_data()
    freer  - one of
               PNG_DESTROY_WILL_FREE_DATA
               PNG_SET_WILL_FREE_DATA
               PNG_USER_WILL_FREE_DATA
</pre>

<p>This function only affects data that has already been allocated.
You can call this function after reading the PNG data but before calling
any png_set_*() functions, to control whether the user or the png_set_*()
function is responsible for freeing any existing data that might be present=
,
and again after the png_set_*() functions to control whether the user
or png_destroy_*() is supposed to free the data.  When the user assumes
responsibility for libpng-allocated data, the application must use
png_free() to free it, and when the user transfers responsibility to libpng
for data that the user has allocated, the user must have used png_malloc()
or png_zalloc() to allocate it.</p>

<p>If you allocated your row_pointers in a single block, as suggested above=
 in
the description of the high level read interface, you must not transfer
responsibility for freeing it to the png_set_rows or png_read_destroy funct=
ion,
because they would also try to free the individual row_pointers[i].</p>

<p>If you allocated text_ptr.text, text_ptr.lang, and text_ptr.translated_k=
eyword
separately, do not transfer responsibility for freeing text_ptr to libpng,
because when libpng fills a png_text structure it combines these members wi=
th
the key member, and png_free_data() will free only text_ptr.key.  Similarly=
,
if you transfer responsibility for free'ing text_ptr from libpng to your
application, your application must not separately free those members.</p>

<p>The png_free_data() function will turn off the "valid" flag for anything
it frees.  If you need to turn the flag off for a chunk that was freed by y=
our
application instead of by libpng, you can use</p>

<pre>    png_set_invalid(png_ptr, info_ptr, mask);
    mask - identifies the chunks to be made invalid,
           containing the logical OR of one or
           more of
             PNG_INFO_gAMA, PNG_INFO_sBIT,
             PNG_INFO_cHRM, PNG_INFO_PLTE,
             PNG_INFO_tRNS, PNG_INFO_bKGD,
             PNG_INFO_hIST, PNG_INFO_pHYs,
             PNG_INFO_oFFs, PNG_INFO_tIME,
             PNG_INFO_pCAL, PNG_INFO_sRGB,
             PNG_INFO_iCCP, PNG_INFO_sPLT,
             PNG_INFO_sCAL, PNG_INFO_IDAT
</pre>

<p>For a more compact example of reading a PNG image, see the file example.=
c.</p>

<h2 id=3D"section-3.10">Reading PNG files progressively</h2>

<p>The progressive reader is slightly different then the
non-progressive reader.  Instead of calling png_read_info(),
png_read_rows(), and png_read_end(), you make one call to
png_process_data(), which calls callbacks when it has the info, a row,
or the end of the image.  You set up these callbacks with
png_set_progressive_read_fn().  You don't have to worry about the
input/output functions of libpng, as you are giving the library the
data directly in png_process_data().  I will assume that you have read
the section on <a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-manual=
.html#section-3">reading PNG files</a> above, so I will
only highlight the differences (although I will show all of the
code).</p>

<pre>png_structp png_ptr;
png_infop info_ptr;

 /*  An example code fragment of how you would
     initialize the progressive reader in your
     application. */
 int
 initialize_png_reader()
 {
    png_ptr =3D png_create_read_struct
        (PNG_LIBPNG_VER_STRING, (png_voidp)user_error_ptr,
         user_error_fn, user_warning_fn);
    if (!png_ptr)
        return (ERROR);
    info_ptr =3D png_create_info_struct(png_ptr);
    if (!info_ptr)
    {
        png_destroy_read_struct(&amp;png_ptr, (png_infopp)NULL,
           (png_infopp)NULL);
        return (ERROR);
    }

    if (setjmp(png_jmpbuf(png_ptr)))
    {
        png_destroy_read_struct(&amp;png_ptr, &amp;info_ptr,
           (png_infopp)NULL);
        return (ERROR);
    }

    /* This one's new.  You can provide functions
       to be called when the header info is valid,
       when each row is completed, and when the image
       is finished.  If you aren't using all functions,
       you can specify NULL parameters.  Even when all
       three functions are NULL, you need to call
       png_set_progressive_read_fn().  You can use
       any struct as the user_ptr (cast to a void pointer
       for the function call), and retrieve the pointer
       from inside the callbacks using the function

          png_get_progressive_ptr(png_ptr);

       which will return a void pointer, which you have
       to cast appropriately.
     */
    png_set_progressive_read_fn(png_ptr, (void *)user_ptr,
        info_callback, row_callback, end_callback);

    return 0;
 }

 /* A code fragment that you call as you receive blocks
   of data */
 int
 process_data(png_bytep buffer, png_uint_32 length)
 {
    if (setjmp(png_jmpbuf(png_ptr)))
    {
        png_destroy_read_struct(&amp;png_ptr, &amp;info_ptr,
           (png_infopp)NULL);
        return (ERROR);
    }

    /* This one's new also.  Simply give it a chunk
       of data from the file stream (in order, of
       course).  On machines with segmented memory
       models machines, don't give it any more than
       64K.  The library seems to run fine with sizes
       of 4K. Although you can give it much less if
       necessary (I assume you can give it chunks of
       1 byte, I haven't tried less then 256 bytes
       yet).  When this function returns, you may
       want to display any rows that were generated
       in the row callback if you don't already do
       so there.
     */
    png_process_data(png_ptr, info_ptr, buffer, length);
    return 0;
 }

 /* This function is called (as set by
    png_set_progressive_read_fn() above) when enough data
    has been supplied so all of the header has been
    read.
 */
 void
 info_callback(png_structp png_ptr, png_infop info)
 {
    /* Do any setup here, including setting any of
       the transformations mentioned in the <a href=3D"http://www.libpng.or=
g/pub/png/libpng-1.2.5-manual.html#section-3">Reading
       PNG files</a> section.  For now, you _must_ call
       either png_start_read_image() or
       png_read_update_info() after all the
       transformations are set (even if you don't set
       any).  You may start getting rows before
       png_process_data() returns, so this is your
       last chance to prepare for that.
     */
 }

 /* This function is called when each row of image
    data is complete */
 void
 row_callback(png_structp png_ptr, png_bytep new_row,
    png_uint_32 row_num, int pass)
 {
    /* If the image is interlaced, and you turned
       on the interlace handler, this function will
       be called for every row in every pass.  Some
       of these rows will not be changed from the
       previous pass.  When the row is not changed,
       the new_row variable will be NULL.  The rows
       and passes are called in order, so you don't
       really need the row_num and pass, but I'm
       supplying them because it may make your life
       easier.

       For the non-NULL rows of interlaced images,
       you must call png_progressive_combine_row()
       passing in the row and the old row.  You can
       call this function for NULL rows (it will just
       return) and for non-interlaced images (it just
       does the memcpy for you) if it will make the
       code easier.  Thus, you can just do this for
       all cases:
     */

        png_progressive_combine_row(png_ptr, old_row,
          new_row);

    /* where old_row is what was displayed for
       previously for the row.  Note that the first
       pass (pass =3D=3D 0, really) will completely cover
       the old row, so the rows do not have to be
       initialized.  After the first pass (and only
       for interlaced images), you will have to pass
       the current row, and the function will combine
       the old row and the new row.
    */
 }

 void
 end_callback(png_structp png_ptr, png_infop info)
 {
    /* This function is called after the whole image
       has been read, including any chunks after the
       image (up to and including the IEND).  You
       will usually have the same info chunk as you
       had in the header, although some data may have
       been added to the comments and time fields.

       Most people won't do much here, perhaps setting
       a flag that marks the image as finished.
     */
 }
</pre>


<h1 id=3D"section-4">IV. Writing</h1>

<p>Much of this is very similar to reading.  However, everything of
importance is repeated here, so you won't have to constantly look
back up in the <a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-manual=
.html#section-3">reading section</a> to understand writing.</p>

<h2 id=3D"section-4.1">Setup</h2>

<p>You will want to do the I/O initialization before you get into libpng,
so if it doesn't work, you don't have anything to undo. If you are not
using the standard I/O functions, you will need to replace them with
custom writing functions.  See the discussion under <a href=3D"http://www.l=
ibpng.org/pub/png/libpng-1.2.5-manual.html#section-5">Customizing libpng</a=
>.</p>

<pre>    FILE *fp =3D fopen(file_name, "wb");
    if (!fp)
    {
       return (ERROR);
    }
</pre>

<p>Next, png_struct and png_info need to be allocated and initialized.
As these can be both relatively large, you may not want to store these
on the stack, unless you have stack space to spare.  Of course, you
will want to check if they return NULL.  If you are also reading,
you won't want to name your read structure and your write structure
both "png_ptr"; you can call them anything you like, such as
"read_ptr" and "write_ptr".  Look at pngtest.c, for example.</p>

<pre>    png_structp png_ptr =3D png_create_write_struct
       (PNG_LIBPNG_VER_STRING, (png_voidp)user_error_ptr,
        user_error_fn, user_warning_fn);
    if (!png_ptr)
       return (ERROR);

    png_infop info_ptr =3D png_create_info_struct(png_ptr);
    if (!info_ptr)
    {
       png_destroy_write_struct(&amp;png_ptr,
         (png_infopp)NULL);
       return (ERROR);
    }
</pre>

<p>If you want to use your own memory allocation routines,
define PNG_USER_MEM_SUPPORTED and use
png_create_write_struct_2() instead of png_create_write_struct():</p>

<pre>    png_structp png_ptr =3D png_create_write_struct_2
       (PNG_LIBPNG_VER_STRING, (png_voidp)user_error_ptr,
        user_error_fn, user_warning_fn, (png_voidp)
        user_mem_ptr, user_malloc_fn, user_free_fn);
</pre>

<p>After you have these structures, you will need to set up the error
handling.  When libpng encounters an error, it expects to longjmp()
back to your routine.  Therefore, you will need to call setjmp() and
pass the png_jmpbuf(png_ptr).  If you write the file from different
routines, you will need to update the png_jmpbuf(png_ptr) every time
you enter a new routine that will call a png_*() function.  See your
documentation of setjmp/longjmp for your compiler for more information
on setjmp/longjmp.  See the discussion on libpng error handling in the
<a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-manual.html#section-5=
">Customizing Libpng</a> section below for more information
on the libpng error handling.</p>

<pre>    if (setjmp(png_jmpbuf(png_ptr)))
    {
       png_destroy_write_struct(&amp;png_ptr, &amp;info_ptr);
       fclose(fp);
       return (ERROR);
    }
    ...
    return;
</pre>

<p>If you would rather avoid the complexity of setjmp/longjmp issues,
you can compile libpng with PNG_SETJMP_NOT_SUPPORTED, in which case
errors will result in a call to PNG_ABORT() which defaults to abort().</p>

<p>Now you need to set up the output code.  The default for libpng is
to use the C function fwrite().  If you use this, you will need to
pass a valid FILE * in the function png_init_io().  Be sure that the
file is opened in binary mode.  Again, if you wish to handle writing
data in another way, see the discussion on libpng I/O handling in the
<a href=3D"http://www.libpng.org/pub/png/libpng-1.2.5-manual.html#section-5=
">Customizing Libpng</a> section below.</p>

<pre>    png_init_io(png_ptr, fp);
</pre>

<h2 id=3D"section-4.2">Write callbacks</h2>

<p>At this point, you can set up a callback function that will be
called after each row has been written, which you can use to control
a progress meter or the like.  It's demonstrated in pngtest.c.
You must supply a function</p>

<pre>    void write_row_callback(png_ptr, png_uint_32 row,
       int pass);
    {
      /* put your code here */
    }
</pre>

<p>(You can give it another name that you like instead of "write_row_callba=
ck")</p>

<p>To inform libpng about your function, use</p>

<pre>    png_set_write_status_fn(png_ptr, write_row_callback);
</pre>

<p>You now have the option of modifying how the compression library will
run.  The following functions are mainly for testing, but may be useful
in some cases, like if you need to write PNG files extremely fast and
are willing to give up some compression, or if you want to get the
maximum possible compression at the expense of slower writing.  If you
have no special needs in this area, let the library do what it wants by
not calling this function at all, as it has been tuned to deliver a good
speed/compression ratio. The second parameter to png_set_filter() is
the filter method, for which the only valid values are 0 (as of the
July 1999 PNG specification, version 1.2) or 64 (if you are writing
a PNG datastream that is to be embedded in a MNG datastream).  The third
parameter is a flag that indicates which filter type(s) are to be tested
for each scanline.  See the PNG specification for details on the specific f=
ilter
types.</p>

<pre>    /* turn on or off filtering, and/or choose
       specific filters.  You can use either a single
       PNG_FILTER_VALUE_NAME or the logical OR of one
       or more PNG_FILTER_NAME masks. */
    png_set_filter(png_ptr, 0,
       PNG_FILTER_NONE  | PNG_FILTER_VALUE_NONE |
       PNG_FILTER_SUB   | PNG_FILTER_VALUE_SUB  |
       PNG_FILTER_UP    | PNG_FILTER_VALUE_UP   |
       PNG_FILTER_AVE   | PNG_FILTER_VALUE_AVE  |
       PNG_FILTER_PAETH | PNG_FILTER_VALUE_PAETH|
       PNG_ALL_FILTERS);
</pre>

<p>If an application
wants to start and stop using particular filters during compression,
it should start out with all of the filters (to ensure that the previous
row of pixels will be stored in case it's needed later), and then add
and remove them after the start of compression.</p>

<p>If you are writing a PNG datastream that is to be embedded in a MNG
datastream, the second parameter can be either 0 or 64.</p>

<p>The png_set_compression_*() functions interface to the zlib compression
library, and should mostly be ignored unless you really know what you are
doing.  The only generally useful call is png_set_compression_level()
which changes how much time zlib spends on trying to compress the image
data.  See the Compression Library (zlib.h and algorithm.txt, distributed
with zlib) for details on the compression levels.</p>

<pre>    /* set the zlib compression level */
    png_set_compression_level(png_ptr,
        Z_BEST_COMPRESSION);

    /* set other zlib parameters */
    png_set_compression_mem_level(png_ptr, 8);
    png_set_compression_strategy(png_ptr,
        Z_DEFAULT_STRATEGY);
    png_set_compression_window_bits(png_ptr, 15);
    png_set_compression_method(png_ptr, 8);
    png_set_compression_buffer_size(png_ptr, 8192)

extern PNG_EXPORT(void,png_set_zbuf_size)
</pre>

<h2 id=3D"section-4.3">Setting the contents of info for output</h2>

<p>You now need to fill in the png_info structure with all the data you
wish to write before the actual image.  Note that the only thing you
are allowed to write after the image is the text chunks and the time
chunk (as of PNG Specification 1.2, anyway).  See png_write_end() and
the latest PNG specification for more information on that.  If you
wish to write them before the image, fill them in now, and flag that
data as being valid.  If you want to wait until after the data, don't
fill them until png_write_end().  For all the fields in png_info and
their data types, see png.h.  For explanations of what the fields
contain, see the PNG specification.</p>

<p>Some of the more important parts of the png_info are:</p>

<pre>    png_set_IHDR(png_ptr, info_ptr, width, height,
       bit_depth, color_type, interlace_type,
       compression_type, filter_method)
    width          - holds the width of the image
                     in pixels (up to 2^31).
    height         - holds the height of the image
                     in pixels (up to 2^31).
    bit_depth      - holds the bit depth of one of the
                     image channels.
                     (valid values are 1, 2, 4, 8, 16
                     and depend also on the
                     color_type.  See also significant
                     bits (sBIT) below).
    color_type     - describes which color/alpha
                     channels are present.
                     PNG_COLOR_TYPE_GRAY
                        (bit depths 1, 2, 4, 8, 16)
                     PNG_COLOR_TYPE_GRAY_ALPHA
                        (bit depths 8, 16)
                     PNG_COLOR_TYPE_PALETTE
                        (bit depths 1, 2, 4, 8)
                     PNG_COLOR_TYPE_RGB
                        (bit_depths 8, 16)
                     PNG_COLOR_TYPE_RGB_ALPHA
                        (bit_depths 8, 16)

                     PNG_COLOR_MASK_PALETTE
                     PNG_COLOR_MASK_COLOR
                     PNG_COLOR_MASK_ALPHA

    interlace_type - PNG_INTERLACE_NONE or
                     PNG_INTERLACE_ADAM7
    compression_type - (must be
                     PNG_COMPRESSION_TYPE_DEFAULT)
    filter_method  - (must be PNG_FILTER_TYPE_DEFAULT
                     or, if you are writing a PNG to
                     be embedded in a MNG datastream,
                     can also be
                     PNG_INTRAPIXEL_DIFFERENCING)

    png_set_PLTE(png_ptr, info_ptr, palette,
       num_palette);
    palette        - the palette for the file
                     (array of png_color)
    num_palette    - number of entries in the palette

    png_set_gAMA(png_ptr, info_ptr, gamma);
    gamma          - the gamma the image was created
                     at (PNG_INFO_gAMA)

    png_set_sRGB(png_ptr, info_ptr, srgb_intent);
    srgb_intent    - the rendering intent
                     (PNG_INFO_sRGB) The presence of
                     the sRGB chunk means that the pixel
                     data is in the sRGB color space.
                     This chunk also implies specific
                     values of gAMA and cHRM.  Rendering
                     intent is the CSS-1 property that
                     has been defined by the International
                     Color Consortium
                     (<a href=3D"http://www.color.org/">http://www.color.or=
g/</a>).
                     It can be one of
                     PNG_sRGB_INTENT_SATURATION,
                     PNG_sRGB_INTENT_PERCEPTUAL,
                     PNG_sRGB_INTENT_ABSOLUTE, or
                     PNG_sRGB_INTENT_RELATIVE.


    png_set_sRGB_gAMA_and_cHRM(png_ptr, info_ptr,
       srgb_intent);
    srgb_intent    - the rendering intent
                     (PNG_INFO_sRGB) The presence of the
                     sRGB chunk means that the pixel
                     data is in the sRGB color space.
                     This function also causes gAMA and
                     cHRM chunks with the specific values
                     that are consistent with sRGB to be
                     written.

    png_set_iCCP(png_ptr, info_ptr, name, compression_type,
                      profile, proflen);
    name            - The profile name.
    compression     - The compression type; always
                      PNG_COMPRESSION_TYPE_BASE for PNG 1.0.
                      You may give NULL to this argument to
                      ignore it.
    profile         - International Color Consortium color
                      profile data. May contain NULs.
    proflen         - length of profile data in bytes.

    png_set_sBIT(png_ptr, info_ptr, sig_bit);
    sig_bit        - the number of significant bits for
                     (PNG_INFO_sBIT) each of the gray, red,
                     green, and blue channels, whichever are
                     appropriate for the given color type
                     (png_color_16)

    png_set_tRNS(png_ptr, info_ptr, trans, num_trans,
       trans_values);
    trans          - array of transparent entries for
                     palette (PNG_INFO_tRNS)
    trans_values   - graylevel or color sample values of
                     the single transparent color for
                     non-paletted images (PNG_INFO_tRNS)
    num_trans      - number of transparent entries
                     (PNG_INFO_tRNS)

    png_set_hIST(png_ptr, info_ptr, hist);
                    (PNG_INFO_hIST)
    hist           - histogram of palette (array of
                     png_uint_16)

    png_set_tIME(png_ptr, info_ptr, mod_time);
    mod_time       - time image was last modified
                     (PNG_VALID_tIME)

    png_set_bKGD(png_ptr, info_ptr, background);
    background     - background color (PNG_VALID_bKGD)

    png_set_text(png_ptr, info_ptr, text_ptr, num_text);
    text_ptr       - array of png_text holding image
                     comments
    text_ptr[i].compression - type of compression used
                 on "text" PNG_TEXT_COMPRESSION_NONE
                           PNG_TEXT_COMPRESSION_zTXt
                           PNG_ITXT_COMPRESSION_NONE
                           PNG_ITXT_COMPRESSION_zTXt
    text_ptr[i].key   - keyword for comment.  Must contain
                 1-79 characters.
    text_ptr[i].text  - text comments for current
                         keyword.  Can be NULL or empty.
    text_ptr[i].text_length - length of text string,
                 after decompression, 0 for iTXt
    text_ptr[i].itxt_length - length of itxt string,
                 after decompression, 0 for tEXt/zTXt
    text_ptr[i].lang  - language of comment (NULL or
                         empty for unknown).
    text_ptr[i].translated_keyword  - keyword in UTF-8 (NULL
                         or empty for unknown).
    num_text       - number of comments

    png_set_sPLT(png_ptr, info_ptr, &amp;palette_ptr,
       num_spalettes);
    palette_ptr    - array of png_sPLT_struct structures
                     to be added to the list of palettes
                     in the info structure.
    num_spalettes  - number of palette structures to be
                     added.

    png_set_oFFs(png_ptr, info_ptr, offset_x, offset_y,
        unit_type);
    offset_x  - positive offset from the left
                     edge of the screen
    offset_y  - positive offset from the top
                     edge of the screen
    unit_type - PNG_OFFSET_PIXEL, PNG_OFFSET_MICROMETER

    png_set_pHYs(png_ptr, info_ptr, res_x, res_y,
        unit_type);
    res_x       - pixels/unit physical resolution
                  in x direction
    res_y       - pixels/unit physical resolution
                  in y direction
    unit_type   - PNG_RESOLUTION_UNKNOWN,
                  PNG_RESOLUTION_METER

    png_set_sCAL(png_ptr, info_ptr, unit, width, height)
    unit        - physical scale units (an integer)
    width       - width of a pixel in physical scale units
    height      - height of a pixel in physical scale units
                  (width and height are doubles)

    png_set_sCAL_s(png_ptr, info_ptr, unit, width, height)
    unit        - physical scale units (an integer)
    width       - width of a pixel in physical scale units
    height      - height of a pixel in physical scale units
                 (width and height are strings like "2.54")

    png_set_unknown_chunks(png_ptr, info_ptr, &amp;unknowns,
       num_unknowns)
    unknowns          - array of png_unknown_chunk
                        structures holding unknown chunks
    unknowns[i].name  - name of unknown chunk
    unknowns[i].data  - data of unknown chunk
    unknowns[i].size  - size of unknown chunk's data
    unknowns[i].location - position to write chunk in file
                           0: do not write chunk
                           PNG_HAVE_IHDR: before PLTE
                           PNG_HAVE_PLTE: before IDAT
                           PNG_AFTER_IDAT: after IDAT
</pre>

<p>The "location" member is set automatically according to
what part of the output file has already been written.
You can change its value after calling png_set_unknown_chunks()
as demonstrated in pngtest.c.  Within each of the "locations",
the chunks are sequenced according to their position in the
structure (that is, the value of "i", which is the order in which
the chunk was either read from the input file or defined with
png_set_unknown_chunks).</p>

<p>A quick word about text and num_text.  text is an array of png_text
structures.  num_text is the number of valid structures in the array.
Each png_text structure holds a language code, a keyword, a text value,
and a compression type.</p>

<p>The compression types have the same valid numbers as the compression
types of the image data.  Currently, the only valid number is zero.
However, you can store text either compressed or uncompressed, unlike
images, which always have to be compressed.  So if you don't want the
text compressed, set the compression type to PNG_TEXT_COMPRESSION_NONE.
Because tEXt and zTXt chunks don't have a language field, if you
specify PNG_TEXT_COMPRESSION_NONE or PNG_TEXT_COMPRESSION_zTXt
any language code or translated keyword will not be written out.</p>

<p>Until text gets around 1000 bytes, it is not worth compressing it.
After the text has been written out to the file, the compression type
is set to PNG_TEXT_COMPRESSION_NONE_WR or PNG_TEXT_COMPRESSION_zTXt_WR,
so that it isn't written out again at the end (in case you are calling
png_write_end() with the same struct.</p>

<p>The keywords that are given in the PNG Specification are:</p>

<pre>    Title            Short (one line) title or
                     caption for image
    Author           Name of image's creator
    Description      Description of image (possibly long)
    Copyright        Copyright notice
    Creation Time    Time of original image creation
                     (usually RFC 1123 format, see below)
    Software         Software used to create the image
    Disclaimer       Legal disclaimer
    Warning          Warning of nature of content
    Source           Device used to create the image
    Comment          Miscellaneous comment; conversion
                     from other image format
</pre>

<p>The keyword-text pairs work like this.  Keywords should be short
simple descriptions of what the comment is about.  Some typical
keywords are found in the PNG specification, as is some recommendations
on keywords.  You can repeat keywords in a file.  You can even write
some text before the image and some after.  For example, you may want
to put a description of the image before the image, but leave the
disclaimer until after, so viewers working over modem connections
don't have to wait for the disclaimer to go over the modem before
they start seeing the image.  Finally, keywords should be full
words, not abbreviations.  Keywords and text are in the ISO 8859-1
(Latin-1) character set (a superset of regular ASCII) and can not
contain NUL characters, and should not contain control or other
unprintable characters.  To make the comments widely readable, stick
with basic ASCII, and avoid machine specific character set extensions
like the IBM-PC character set.  The keyword must be present, but
you can leave off the text string on non-compressed pairs.
Compressed pairs must have a text string, as only the text string
is compressed anyway, so the compression would be meaningless.</p>

<p>PNG supports modification time via the png_time structure.  Two
conversion routines are provided, png_convert_from_time_t() for
time_t and png_convert_from_struct_tm() for struct tm.  The
time_t routine uses gmtime().  You don't have to use either of
these, but if you wish to fill in the png_time structure directly,
you should provide the time in universal time (GMT) if possible
instead of your local time.  Note that the year number is the full
year (e.g. 1998, rather than 98 - PNG is year 2000 compliant!), and
that months start with 1.</p>

<p>If you want to store the time of the original image creation, you should
use a plain tEXt chunk with the "Creation Time" keyword.  This is
necessary because the "creation time" of a PNG image is somewhat vague,
depending on whether you mean the PNG file, the time the image was
created in a non-PNG format, a still photo from which the image was
scanned, or possibly the subject matter itself.  In order to facilitate
machine-readable dates, it is recommended that the "Creation Time"
tEXt chunk use RFC 1123 format dates (e.g. "22 May 1997 18:07:10 GMT"),
although this isn't a requirement.  Unlike the tIME chunk, the
"Creation Time" tEXt chunk is not expected to be automatically changed
by the software.  To facilitate the use of RFC 1123 dates, a function
png_convert_to_rfc1123(png_timep) is provided to convert from PNG
time to an RFC 1123 format string.</p>

<h2 id=3D"section-4.4">Writing unknown chunks</h2>

<p>You can use the png_set_unknown_chunks function to queue up chunks
for writing.  You give it a chunk name, raw data, and a size; that's
all there is to it.  The chunks will be written by the next following
png_write_info_before_PLTE, png_write_info, or png_write_end function.
Any chunks previously read into the info structure's unknown-chunk
list will also be written out in a sequence that satisfies the PNG
specification's ordering rules.</p>

<h2 id=3D"section-4.5">The high-level write interface</h2>

<p>At this point there are two ways to proceed; through the high-level
write interface, or through a sequence of low-level write operations.
You can use the high-level interface if your image data is present
in the info structure.  All defined output
transformations are permitted, enabled by the following masks.</p>

<pre>    PNG_TRANSFORM_IDENTITY      No transformation
    PNG_TRANSFORM_PACKING       Pack 1, 2 and 4-bit samples
    PNG_TRANSFORM_PACKSWAP      Change order of packed
                                pixels to LSB first
    PNG_TRANSFORM_INVERT_MONO   Invert monochrome images
    PNG_TRANSFORM_SHIFT         Normalize pixels to the
                                sBIT depth
    PNG_TRANSFORM_BGR           Flip RGB to BGR, RGBA
                                to BGRA
    PNG_TRANSFORM_SWAP_ALPHA    Flip RGBA to ARGB or GA
                                to AG
    PNG_TRANSFORM_INVERT_ALPHA  Change alpha from opacity
                                to transparency
    PNG_TRANSFORM_SWAP_ENDIAN   Byte-swap 16-bit samples
    PNG_TRANSFORM_STRIP_FILLER  Strip out filler bytes.
</pre>

<p>If you have valid image data in the info structure (you can use
png_set_rows() to put image data in the info structure), simply do this:</p=
>

<pre>    png_write_png(png_ptr, info_ptr, png_transforms, NULL)
</pre>

<p>where png_transforms is an integer containing the logical OR of some set=
 of
transformation flags.  This call is equivalent to png_write_info(),
followed the set of transformations indicated by the transform mask,
then png_write_image(), and finally png_write_end().</p>

<p>(The final parameter of this call is not yet used.  Someday it might poi=
nt
to transformation parameters required by some future output transform.)</p>

<h2 id=3D"section-4.6">The low-level write interface</h2>

<p>If you are going the low-level route instead, you are now ready to
write all the file information up to the actual image data.  You do
this with a call to png_write_info().</p>

<pre>    png_write_info(png_ptr, info_ptr);
</pre>

<p>Note that there is one transformation you may need to do before
png_write_info().  In PNG files, the alpha channel in an image is the
level of opacity.  If your data is supplied as a level of
transparency, you can invert the alpha channel before you write it, so
that 0 is fully transparent and 255 (in 8-bit or paletted images) or
65535 (in 16-bit images) is fully opaque, with</p>

<pre>    png_set_invert_alpha(png_ptr);
</pre>

<p>This must appear before png_write_info() instead of later with the
other transformations because in the case of paletted images the tRNS
chunk data has to be inverted before the tRNS chunk is written.  If
your image is not a paletted image, the tRNS data (which in such cases
represents a single color to be rendered as transparent) won't need to
be changed, and you can safely do this transformation after your
png_write_info() call.</p>

<p>If you need to write a private chunk that you want to appear before
the PLTE chunk when PLTE is present, you can write the PNG info in
two steps, and insert code to write your own chunk between them:</p>

<pre>    png_write_info_before_PLTE(png_ptr, info_ptr);
    png_set_unknown_chunks(png_ptr, info_ptr, ...);
    png_write_info(png_ptr, info_ptr);
</pre>

<p>After you've written the file information, you can set up the library
to handle any special transformations of the image data.  The various
ways to transform the data will be described in the order that they
should occur.  This is important, as some of these change the color
type and/or bit depth of the data, and some others only work on
certain color types and bit depths.  Even though each transformation
checks to see if it has data that it can do something with, you should
make sure to only enable a transformation if it will be valid for the
data.  For example, don't swap red and blue on grayscale data.</p>

<p>PNG files store RGB pixels packed into 3 or 6 bytes.  This code tells
the library to strip input data that has 4 or 8 bytes per pixel down
to 3 or 6 bytes (or strip 2 or 4-byte grayscale+filler data to 1 or 2
bytes per pixel).</p>

<pre>    png_set_filler(png_ptr, 0, PNG_FILLER_BEFORE);
</pre>

<p>where the 0 is unused, and the location is either PNG_FILLER_BEFORE or
PNG_FILLER_AFTER, depending upon whether the filler byte in the pixel
is stored XRGB or RGBX.</p>

<p>PNG files pack pixels of bit depths 1, 2, and 4 into bytes as small as
they can, resulting in, for example, 8 pixels per byte for 1 bit files.
If the data is supplied at 1 pixel per byte, use this code, which will
correctly pack the pixels into a single byte:</p>

<pre>    png_set_packing(png_ptr);
</pre>

<p>PNG files reduce possible bit depths to 1, 2, 4, 8, and 16.  If your
data is of another bit depth, you can write an sBIT chunk into the
file so that decoders can recover the original data if desired.</p>

<pre>    /* Set the true bit depth of the image data */
    if (color_type &amp; PNG_COLOR_MASK_COLOR)
    {
        sig_bit.red =3D true_bit_depth;
        sig_bit.green =3D true_bit_depth;
        sig_bit.blue =3D true_bit_depth;
    }
    else
    {
        sig_bit.gray =3D true_bit_depth;
    }
    if (color_type &amp; PNG_COLOR_MASK_ALPHA)
    {
        sig_bit.alpha =3D true_bit_depth;
    }

    png_set_sBIT(png_ptr, info_ptr, &amp;sig_bit);
</pre>

<p>If the data is stored in the row buffer in a bit depth other than
one supported by PNG (e.g. 3 bit data in the range 0-7 for a 4-bit PNG),
this will scale the values to appear to be the correct bit depth as
is required by PNG.</p>

<pre>    png_set_shift(png_ptr, &amp;sig_bit);
</pre>

<p>PNG files store 16 bit pixels in network byte order (big-endian,
ie. most significant bits first).  This code would be used if they are
supplied the other way (little-endian, i.e. least significant bits
first, the way PCs store them):</p>

<pre>    if (bit_depth &gt; 8)
       png_set_swap(png_ptr);
</pre>

<p>If you are using packed-pixel images (1, 2, or 4 bits/pixel), and you
need to change the order the pixels are packed into bytes, you can use:</p>

<pre>    if (bit_depth &lt; 8)
       png_set_packswap(png_ptr);
</pre>

<p>PNG files store 3 color pixels in red, green, blue order.  This code
would be used if they are supplied as blue, green, red:</p>

<pre>    png_set_bgr(png_ptr);
</pre>

<p>PNG files describe monochrome as black being zero and white being
one. This code would be used if the pixels are supplied with this reversed
(black being one and white being zero):</p>

<pre>    png_set_invert_mono(png_ptr);
</pre>

<p>Finally, you can write your own transformation function if none of
the existing ones meets your needs.  This is done by setting a callback
with</p>

<pre>    png_set_write_user_transform_fn(png_ptr,
       write_transform_fn);
</pre>

<p>You must supply the function</p>

<pre>    void write_transform_fn(png_ptr ptr, row_info_ptr
       row_info, png_bytep data)
</pre>

<p>See pngtest.c for a working example.  Your function will be called
before any of the other transformations are processed.</p>

<p>You can also set up a pointer to a user structure for use by your
callback function.</p>

<pre>    png_set_user_transform_info(png_ptr, user_ptr, 0, 0);
</pre>

<p>The user_channels and user_depth parameters of this function are ignored
when writing; you can set them to zero as shown.</p>

<p>You can retrieve the pointer via the function png_get_user_transform_ptr=
().
For example:</p>

<pre>    voidp write_user_transform_ptr =3D
       png_get_user_transform_ptr(png_ptr);
</pre>

<p>It is possible to have libpng flush any pending output, either manually,
or automatically after a certain number of lines have been written.  To
flush the output stream a single time call:</p>

<pre>    png_write_flush(png_ptr);
</pre>

<p>and to have libpng flush the output stream periodically after a certain
number of scanlines have been written, call:</p>

<pre>    png_set_flush(png_ptr, nrows);
</pre>

<p>Note that the distance between rows is from the last time png_write_flus=
h()
was called, or the first row of the image if it has never been called.
So if you write 50 lines, and then png_set_flush 25, it will flush the
output on the next scanline, and every 25 lines thereafter, unless
png_write_flush() is called before 25 more lines have been written.
If nrows is too small (less than about 10 lines for a 640 pixel wide
RGB image) the image compression may decrease noticeably (although this
may be acceptable for real-time applications).  Infrequent flushing will
only degrade the compression performance by a few percent over images
that do not use flushing.</p>

<h2 id=3D"section-4.7">Writing the image data</h2>

<p>That's it for the transformations.  Now you can write the image data.
The simplest way to do this is in one function call.  If you have the
whole image in memory, you can just call png_write_image() and libpng
will write the image.  You will need to pass in an array of pointers to
each row.  This function automatically handles interlacing, so you don't
need to call png_set_interlace_handling() or call this function multiple
times, or any of that other stuff necessary with png_write_rows().</p>

<pre>    png_write_image(png_ptr, row_pointers);
</pre>

<p>where row_pointers is:</p>

<pre>    png_byte *row_pointers[height];
</pre>

<p>You can point to void or char or whatever you use for pixels.</p>

<p>If you don't want to write the whole image at once, you can
use png_write_rows() instead.  If the file is not interlaced,
this is simple:</p>

<pre>    png_write_rows(png_ptr, row_pointers,
       number_of_rows);
</pre>

<p>row_pointers is the same as in the png_write_image() call.</p>

<p>If you are just writing one row at a time, you can do this with
a single row_pointer instead of an array of row_pointers:</p>

<pre>    png_bytep row_pointer =3D row;

    png_write_row(png_ptr, row_pointer);
</pre>

<p>When the file is interlaced, things can get a good deal more
complicated.  The only currently (as of the PNG Specification
version 1.2, dated July 1999) defined interlacing scheme for PNG files
is the "Adam7" interlace scheme, that breaks down an
image into seven smaller images of varying size.  libpng will build
these images for you, or you can do them yourself.  If you want to
build them yourself, see the PNG specification for details of which
pixels to write when.</p>

<p>If you don't want libpng to handle the interlacing details, just
use png_set_interlace_handling() and call png_write_rows() the
correct number of times to write all seven sub-images.</p>

<p>If you want libpng to build the sub-images, call this before you start
writing any rows:</p>

<pre>    number_of_passes =3D
       png_set_interlace_handling(png_ptr);
</pre>

<p>This will return the number of passes needed.  Currently, this
is seven, but may change if another interlace type is added.</p>

<p>Then write the complete image number_of_passes times.</p>

<pre>    png_write_rows(png_ptr, row_pointers,
       number_of_rows);
</pre>

<p>As some of these rows are not used, and thus return immediately,
you may want to read about interlacing in the PNG specification,
and only update the rows that are actually used.</p>

<h2 id=3D"section-4.8">Finishing a sequential write</h2>

<p>After you are finished writing the image, you should finish writing
the file.  If you are interested in writing comments or time, you should
pass an appropriately filled png_info pointer.  If you are not interested,
you can pass NULL.</p>

<pre>    png_write_end(png_ptr, info_ptr);
</pre>

<p>When you are done, you can free all memory used by libpng like this:</p>

<pre>    png_destroy_write_struct(&amp;png_ptr, &amp;info_ptr);
</pre>

<p>It is also possible to individually free the info_ptr members that
point to libpng-allocated storage with the following function:</p>

<pre>    png_free_data(png_ptr, info_ptr, mask, seq)
    mask  - identifies data to be freed, a mask
            containing the logical OR of one or
            more of
              PNG_FREE_PLTE, PNG_FREE_TRNS,
              PNG_FREE_HIST, PNG_FREE_ICCP,
              PNG_FREE_PCAL, PNG_FREE_ROWS,
              PNG_FREE_SCAL, PNG_FREE_SPLT,
              PNG_FREE_TEXT, PNG_FREE_UNKN,
            or simply PNG_FREE_ALL
    seq   - sequence number of item to be freed
            (-1 for all items)
</pre>

<p>This function may be safely called when the relevant storage has
already been freed, or has not yet been allocated, or was allocated
by the user  and not by libpng,  and will in those
cases do nothing.  The "seq" parameter is ignored if only one item
of the selected data type, such as PLTE, is allowed.  If "seq" is not
-1, and multiple items are allowed for the data type identified in
the mask, such as text or sPLT, only the n'th item in the structure
is freed, where n is "seq".</p>

<p>If you allocated data such as a palette that you passed
in to libpng with png_set_*, you must not free it until just before the cal=
l to
png_destroy_write_struct().</p>

<p>The default behavior is only to free data that was allocated internally
by libpng.  This can be changed, so that libpng will not free the data,
or so that it will free data that was allocated by the user with png_malloc=
()
or png_zalloc() and passed in via a png_set_*() function, with</p>

<pre>    png_data_freer(png_ptr, info_ptr, freer, mask)
    mask   - which data elements are affected
             same choices as in png_free_data()
    freer  - one of
               PNG_DESTROY_WILL_FREE_DATA
               PNG_SET_WILL_FREE_DATA
               PNG_USER_WILL_FREE_DATA
</pre>

<p>For example, to transfer responsibility for some data from a read struct=
ure
to a write structure, you could use</p>

<pre>    png_data_freer(read_ptr, read_info_ptr,
       PNG_USER_WILL_FREE_DATA,
       PNG_FREE_PLTE|PNG_FREE_tRNS|PNG_FREE_hIST)
    png_data_freer(write_ptr, write_info_ptr,
       PNG_DESTROY_WILL_FREE_DATA,
       PNG_FREE_PLTE|PNG_FREE_tRNS|PNG_FREE_hIST)
</pre>

<p>thereby briefly reassigning responsibility for freeing to the user but
immediately afterwards reassigning it once more to the write_destroy
function.  Having done this, it would then be safe to destroy the read
structure and continue to use the PLTE, tRNS, and hIST data in the write
structure.</p>

<p>This function only affects data that has already been allocated.
You can call this function before calling after the png_set_*() functions
to control whether the user or png_destroy_*() is supposed to free the data=
.
When the user assumes responsibility for libpng-allocated data, the
application must use
png_free() to free it, and when the user transfers responsibility to libpng
for data that the user has allocated, the user must have used png_malloc()
or png_zalloc() to allocate it.</p>

<p>If you allocated text_ptr.text, text_ptr.lang, and text_ptr.translated_k=
eyword
separately, do not transfer responsibility for freeing text_ptr to libpng,
because when libpng fills a png_text structure it combines these members wi=
th
the key member, and png_free_data() will free only text_ptr.key.  Similarly=
,
if you transfer responsibility for free'ing text_ptr from libpng to your
application, your application must not separately free those members.
For a more compact example of writing a PNG image, see the file example.c.<=
/p>


<h1 id=3D"section-5">V. Modifying/Customizing libpng:</h1>

<p>There are three issues here.  The first is changing how libpng does
standard things like memory allocation, input/output, and error handling.
The second deals with more complicated things like adding new chunks,
adding new transformations, and generally changing how libpng works.
Both of those are compile-time issues; that is, they are generally
determined at the time the code is written, and there is rarely a need
to provide the user with a means of changing them.  The third is a
run-time issue:  choosing between and/or tuning one or more alternate
versions of computationally intensive routines; specifically, optimized
assembly-language (and therefore compiler- and platform-dependent)
versions.</p>

<h2 id=3D"section-5.1">Memory allocation, input/output, and error handling<=
/h2>

<p>All of the memory allocation, input/output, and error handling in libpng
goes through callbacks that are user-settable.  The default routines are
in pngmem.c, pngrio.c, pngwio.c, and pngerror.c, respectively.  To change
these functions, call the appropriate png_set_*_fn() function.</p>

<p>Memory allocation is done through the functions png_malloc()
and png_free().  These currently just call the standard C functions.  If
your pointers can't access more then 64K at a time, you will want to set
MAXSEG_64K in zlib.h.  Since it is unlikely that the method of handling
memory allocation on a platform will change between applications, these
functions must be modified in the library at compile time.  If you prefer
to use a different method of allocating and freeing data, you can use
png_create_read_struct_2() or png_create_write_struct_2() to register
your own functions as described above.</p>

<p>These functions also provide a void pointer that can be retrieved via</p=
>

<pre>    mem_ptr=3Dpng_get_mem_ptr(png_ptr);
</pre>

<p>Your replacement memory functions must have prototypes as follows:</p>

<pre>    png_voidp malloc_fn(png_structp png_ptr,
       png_size_t size);
    void free_fn(png_structp png_ptr, png_voidp ptr);
</pre>

<p>Your malloc_fn() should return NULL in case of failure.  The png_malloc(=
)
function will call png_error() if it receives a NULL from the system
memory allocator or from your replacement malloc_fn().</p>

<p>Input/Output in libpng is done through png_read() and png_write(),
which currently just call fread() and fwrite().  The FILE * is stored in
png_struct and is initialized via png_init_io().  If you wish to change
the method of I/O, the library supplies callbacks that you can set
through the function png_set_read_fn() and png_set_write_fn() at run
time, instead of calling the png_init_io() function.  These functions
also provide a void pointer that can be retrieved via the function
png_get_io_ptr().  For example:</p>

<pre>    png_set_read_fn(png_structp read_ptr,
        voidp read_io_ptr, png_rw_ptr read_data_fn)

    png_set_write_fn(png_structp write_ptr,
        voidp write_io_ptr, png_rw_ptr write_data_fn,
        png_flush_ptr output_flush_fn);

    voidp read_io_ptr =3D png_get_io_ptr(read_ptr);
    voidp write_io_ptr =3D png_get_io_ptr(write_ptr);
</pre>

<p>The replacement I/O functions must have prototypes as follows:</p>

<pre>    void user_read_data(png_structp png_ptr,
        png_bytep data, png_size_t length);
    void user_write_data(png_structp png_ptr,
        png_bytep data, png_size_t length);
    void user_flush_data(png_structp png_ptr);
</pre>

<p>Supplying NULL for the read, write, or flush functions sets them back
to using the default C stream functions.  It is an error to read from
a write stream, and vice versa.</p>

<p>Error handling in libpng is done through png_error() and png_warning().
Errors handled through png_error() are fatal, meaning that png_error()
should never return to its caller.  Currently, this is handled via
setjmp() and longjmp() (unless you have compiled libpng with
PNG_SETJMP_NOT_SUPPORTED, in which case it is handled via PNG_ABORT()),
but you could change this to do things like exit() if you should wish.</p>

<p>On non-fatal errors, png_warning() is called
to print a warning message, and then control returns to the calling code.
By default png_error() and png_warning() print a message on stderr via
fprintf() unless the library is compiled with PNG_NO_CONSOLE_IO defined
(because you don't want the messages) or PNG_NO_STDIO defined (because
fprintf() isn't available).  If you wish to change the behavior of the erro=
r
functions, you will need to set up your own message callbacks.  These
functions are normally supplied at the time that the png_struct is created.
It is also possible to redirect errors and warnings to your own replacement
functions after png_create_*_struct() has been called by calling:</p>

<pre>    png_set_error_fn(png_structp png_ptr,
        png_voidp error_ptr, png_error_ptr error_fn,
        png_error_ptr warning_fn);

    png_voidp error_ptr =3D png_get_error_ptr(png_ptr);
</pre>

<p>If NULL is supplied for either error_fn or warning_fn, then the libpng
default function will be used, calling fprintf() and/or longjmp() if a
problem is encountered.  The replacement error functions should have
parameters as follows:</p>

<pre>    void user_error_fn(png_structp png_ptr,
        png_const_charp error_msg);
    void user_warning_fn(png_structp png_ptr,
        png_const_charp warning_msg);
</pre>

<p>The motivation behind using setjmp() and longjmp() is the C++ throw and
catch exception handling methods.  This makes the code much easier to write=
,
as there is no need to check every return code of every function call.
However, there are some uncertainties about the status of local variables
after a longjmp, so the user may want to be careful about doing anything af=
ter
setjmp returns non-zero besides returning itself.  Consult your compiler
documentation for more details.  For an alternative approach, you may wish
to use the "cexcept" facility (see <a href=3D"http://cexcept.sourceforge.ne=
t/">http://cexcept.sourceforge.net/</a>).</p>

<h2 id=3D"section-5.2">Custom chunks</h2>

<p>If you need to read or write custom chunks, you may need to get deeper
into the libpng code.  The library now has mechanisms for storing
and writing chunks of unknown type; you can even declare callbacks
for custom chunks.  Hoewver, this may not be good enough if the
library code itself needs to know about interactions between your
chunk and existing `intrinsic' chunks.</p>

<p>If you need to write a new intrinsic chunk, first read the PNG
specification. Acquire a first level of
understanding of how it works.  Pay particular attention to the
sections that describe chunk names, and look at how other chunks were
designed, so you can do things similarly.  Second, check out the
sections of libpng that read and write chunks.  Try to find a chunk
that is similar to yours and use it as a template.  More details can
be found in the comments inside the code.  It is best to handle unknown
chunks in a generic method, via callback functions, instead of by
modifying libpng functions.</p>

<p>If you wish to write your own transformation for the data, look through
the part of the code that does the transformations, and check out some of
the simpler ones to get an idea of how they work.  Try to find a similar
transformation to the one you want to add and copy off of it.  More details
can be found in the comments inside the code itself.</p>

<h2 id=3D"section-5.3">Configuring for 16 bit platforms</h2>

<p>You will want to look into zconf.h to tell zlib (and thus libpng) that
it cannot allocate more then 64K at a time.  Even if you can, the memory
won't be accessible.  So limit zlib and libpng to 64K by defining MAXSEG_64=
K.</p>

<h2 id=3D"section-5.4">Configuring for DOS</h2>

<p>For DOS users who only have access to the lower 640K, you will
have to limit zlib's memory usage via a png_set_compression_mem_level()
call.  See zlib.h or zconf.h in the zlib library for more information.</p>

<h2 id=3D"section-5.5">Configuring for Medium Model</h2>

<p>Libpng's support for medium model has been tested on most of the popular
compilers.  Make sure MAXSEG_64K gets defined, USE_FAR_KEYWORD gets
defined, and FAR gets defined to far in pngconf.h, and you should be
all set.  Everything in the library (except for zlib's structure) is
expecting far data.  You must use the typedefs with the p or pp on
the end for pointers (or at least look at them and be careful).  Make
note that the rows of data are defined as png_bytepp, which is an
unsigned char far * far *.</p>

<h2 id=3D"section-5.6">Configuring for gui/windowing platforms:</h2>

<p>You will need to write new error and warning functions that use the GUI
interface, as described previously, and set them to be the error and
warning functions at the time that png_create_*_struct() is called,
in order to have them available during the structure initialization.
They can be changed later via png_set_error_fn().  On some compilers,
you may also have to change the memory allocators (png_malloc, etc.).</p>

<h2 id=3D"section-5.7">Configuring for compiler xxx:</h2>

<p>All includes for libpng are in pngconf.h.  If you need to add/change/del=
ete
an include, this is the place to do it.  The includes that are not
needed outside libpng are protected by the PNG_INTERNAL definition,
which is only defined for those routines inside libpng itself.  The
files in libpng proper only include png.h, which includes pngconf.h.</p>

<h2 id=3D"section-5.8">Configuring zlib:</h2>

<p>There are special functions to configure the compression.  Perhaps the
most useful one changes the compression level, which currently uses
input compression values in the range 0 - 9.  The library normally
uses the default compression level (Z_DEFAULT_COMPRESSION =3D 6).  Tests
have shown that for a large majority of images, compression values in
the range 3-6 compress nearly as well as higher levels, and do so much
faster.  For online applications it may be desirable to have maximum speed
(Z_BEST_SPEED =3D 1).  With versions of zlib after v0.99, you can also
specify no compression (Z_NO_COMPRESSION =3D 0), but this would create
files larger than just storing the raw bitmap.  You can specify the
compression level by calling:</p>

<pre>    png_set_compression_level(png_ptr, level);
</pre>

<p>Another useful one is to reduce the memory level used by the library.
The memory level defaults to 8, but it can be lowered if you are
short on memory (running DOS, for example, where you only have 640K).
Note that the memory level does have an effect on compression; among
other things, lower levels will result in sections of incompressible
data being emitted in smaller stored blocks, with a correspondingly
larger relative overhead of up to 15% in the worst case.</p>

<pre>    png_set_compression_mem_level(png_ptr, level);
</pre>

<p>The other functions are for configuring zlib.  They are not recommended
for normal use and may result in writing an invalid PNG file.  See
zlib.h for more information on what these mean.</p>

<pre>    png_set_compression_strategy(png_ptr,
        strategy);
    png_set_compression_window_bits(png_ptr,
        window_bits);
    png_set_compression_method(png_ptr, method);
    png_set_compression_buffer_size(png_ptr, size);
</pre>

<h2 id=3D"section-5.9">Controlling row filtering</h2>

<p>If you want to control whether libpng uses filtering or not, which
filters are used, and how it goes about picking row filters, you
can call one of these functions.  The selection and configuration
of row filters can have a significant impact on the size and
encoding speed and a somewhat lesser impact on the decoding speed
of an image.  Filtering is enabled by default for RGB and grayscale
images (with and without alpha), but not for paletted images nor
for any images with bit depths less than 8 bits/pixel.</p>

<p>The 'method' parameter sets the main filtering method, which is
currently only '0' in the PNG 1.2 specification.  The 'filters'
parameter sets which filter(s), if any, should be used for each
scanline.  Possible values are PNG_ALL_FILTERS and PNG_NO_FILTERS
to turn filtering on and off, respectively.</p>

<p>Individual filter types are PNG_FILTER_NONE, PNG_FILTER_SUB,
PNG_FILTER_UP, PNG_FILTER_AVG, PNG_FILTER_PAETH, which can be bitwise
ORed together with '|' to specify one or more filters to use.
These filters are described in more detail in the PNG specification.
If you intend to change the filter type during the course of writing
the image, you should start with flags set for all of the filters
you intend to use so that libpng can initialize its internal
structures appropriately for all of the filter types.  (Note that this
means the first row must always be adaptively filtered, because libpng
currently does not allocate the filter buffers until png_write_row()
is called for the first time.)</p>

<pre>    filters =3D PNG_FILTER_NONE | PNG_FILTER_SUB
              PNG_FILTER_UP | PNG_FILTER_AVE |
              PNG_FILTER_PAETH | PNG_ALL_FILTERS;

    png_set_filter(png_ptr, PNG_FILTER_TYPE_BASE,
       filters);
              The second parameter can also be
              PNG_INTRAPIXEL_DIFFERENCING if you are
              writing a PNG to be embedded in a MNG
              datastream.  This parameter must be the
              same as the value of filter_method used
              in png_set_IHDR().
</pre>

<p>It is also possible to influence how libpng chooses from among the
available filters.  This is done in one or both of two ways - by
telling it how important it is to keep the same filter for successive
rows, and by telling it the relative computational costs of the filters.</p=
>

<pre>    double weights[3] =3D {1.5, 1.3, 1.1},
       costs[PNG_FILTER_VALUE_LAST] =3D
       {1.0, 1.3, 1.3, 1.5, 1.7};

    png_set_filter_heuristics(png_ptr,
       PNG_FILTER_HEURISTIC_WEIGHTED, 3,
       weights, costs);
</pre>

<p>The weights are multiplying factors that indicate to libpng that the
row filter should be the same for successive rows unless another row filter
is that many times better than the previous filter.  In the above example,
if the previous 3 filters were SUB, SUB, NONE, the SUB filter could have a
"sum of absolute differences" 1.5 x 1.3 times higher than other filters
and still be chosen, while the NONE filter could have a sum 1.1 times
higher than other filters and still be chosen.  Unspecified weights are
taken to be 1.0, and the specified weights should probably be declining
like those above in order to emphasize recent filters over older filters.</=
p>

<p>The filter costs specify for each filter type a relative decoding cost
to be considered when selecting row filters.  This means that filters
with higher costs are less likely to be chosen over filters with lower
costs, unless their "sum of absolute differences" is that much smaller.
The costs do not necessarily reflect the exact computational speeds of
the various filters, since this would unduly influence the final image
size.</p>

<p>Note that the numbers above were invented purely for this example and
are given only to help explain the function usage.  Little testing has
been done to find optimum values for either the costs or the weights.</p>

<h2 id=3D"section-5.10">Removing unwanted object code</h2>

<p>There are a bunch of #define's in pngconf.h that control what parts of
libpng are compiled.  All the defines end in _SUPPORTED.  If you are
never going to use a capability, you can change the #define to #undef
before recompiling libpng and save yourself code and data space, or
you can turn off individual capabilities with defines that begin with
PNG_NO_.</p>

<p>You can also turn all of the transforms and ancillary chunk capabilities
off en masse with compiler directives that define
PNG_NO_READ[or WRITE]_TRANSFORMS, or PNG_NO_READ[or WRITE]_ANCILLARY_CHUNKS=
,
or all four,
along with directives to turn on any of the capabilities that you do
want.  The PNG_NO_READ[or WRITE]_TRANSFORMS directives disable
the extra transformations but still leave the library fully capable of read=
ing
and writing PNG files with all known public chunks
Use of the PNG_NO_READ[or WRITE]_ANCILLARY_CHUNKS directive
produces a library that is incapable of reading or writing ancillary chunks=
.
If you are not using the progressive reading capability, you can
turn that off with PNG_NO_PROGRESSIVE_READ (don't confuse
this with the INTERLACING capability, which you'll still have).</p>

<p>All the reading and writing specific code are in separate files, so the
linker should only grab the files it needs.  However, if you want to
make sure, or if you are building a stand alone library, all the
reading files start with pngr and all the writing files start with
pngw.  The files that don't match either (like png.c, pngtrans.c, etc.)
are used for both reading and writing, and always need to be included.
The progressive reader is in pngpread.c</p>

<p>If you are creating or distributing a dynamically linked library (a .so
or DLL file), you should not remove or disable any parts of the library,
as this will cause applications linked with different versions of the
library to fail if they call functions not available in your library.
The size of the library itself should not be an issue, because only
those sections that are actually used will be loaded into memory.</p>

<h2 id=3D"section-5.11">Requesting debug printout</h2>

<p>The macro definition PNG_DEBUG can be used to request debugging
printout.  Set it to an integer value in the range 0 to 3.  Higher
numbers result in increasing amounts of debugging information.  The
information is printed to the "stderr" file, unless another file
name is specified in the PNG_DEBUG_FILE macro definition.</p>

<p>When PNG_DEBUG &gt; 0, the following functions (macros) become available=
:</p>

<pre>   png_debug(level, message)
   png_debug1(level, message, p1)
   png_debug2(level, message, p1, p2)
</pre>

<p>in which "level" is compared to PNG_DEBUG to decide whether to print
the message, "message" is the formatted string to be printed,
and p1 and p2 are parameters that are to be embedded in the string
according to printf-style formatting directives.  For example,</p>

<pre>   png_debug1(2, "foo=3D%d\n", foo);
</pre>

<p>is expanded to</p>

<pre>   if(PNG_DEBUG &gt; 2)
     fprintf(PNG_DEBUG_FILE, "foo=3D%d\n", foo);
</pre>

<p>When PNG_DEBUG is defined but is zero, the macros aren't defined, but yo=
u
can still use PNG_DEBUG to control your own debugging:</p>

<pre>   #ifdef PNG_DEBUG
       fprintf(stderr, ...
   #endif
</pre>

<p>When PNG_DEBUG =3D 1, the macros are defined, but only png_debug stateme=
nts
having level =3D 0 will be printed.  There aren't any such statements in
this version of libpng, but if you insert some they will be printed.</p>


<h1 id=3D"section-6">VI.  Runtime optimization</h1>

<p>A new feature in libpng 1.2.0 is the ability to dynamically switch betwe=
en
standard and optimized versions of some routines.  Currently these are
limited to three computationally intensive tasks when reading PNG files:
decoding row filters, expanding interlacing, and combining interlaced or
transparent row data with previous row data.  Currently the optimized
versions are available only for x86 (Intel, AMD, etc.) platforms with
MMX support, though this may change in future versions.  (For example,
the non-MMX assembler optimizations for zlib might become similarly
runtime-selectable in future releases, in which case libpng could be
extended to support them.  Alternatively, the compile-time choice of
floating-point versus integer routines for gamma correction might become
runtime-selectable.)</p>

<p>Because such optimizations tend to be very platform- and compiler-depend=
ent,
both in how they are written and in how they perform, the new runtime code
in libpng has been written to allow programs to query, enable, and disable
either specific optimizations or all such optimizations.  For example, to
enable all possible optimizations (bearing in mind that some "optimizations=
"
may actually run more slowly in rare cases):</p>

<pre>    #if defined(PNG_LIBPNG_VER) &amp;&amp; (PNG_LIBPNG_VER &gt;=3D 102=
00)
       png_uint_32 mask, flags;

       flags =3D png_get_asm_flags(png_ptr);
       mask =3D png_get_asm_flagmask(PNG_SELECT_READ | PNG_SELECT_WRITE);
       png_set_asm_flags(png_ptr, flags | mask);
    #endif
</pre>

<p>To enable only optimizations relevant to reading PNGs, use PNG_SELECT_RE=
AD
by itself when calling png_get_asm_flagmask(); similarly for optimizing
only writing.  To disable all optimizations:</p>

<pre>    #if defined(PNG_LIBPNG_VER) &amp;&amp; (PNG_LIBPNG_VER &gt;=3D 102=
00)
       flags =3D png_get_asm_flags(png_ptr);
       mask =3D png_get_asm_flagmask(PNG_SELECT_READ | PNG_SELECT_WRITE);
       png_set_asm_flags(png_ptr, flags &amp; ~mask);
    #endif
</pre>

<p>To enable or disable only MMX-related features, use png_get_mmx_flagmask=
()
in place of png_get_asm_flagmask().  The mmx version takes one additional
parameter:</p>

<pre>    #if defined(PNG_LIBPNG_VER) &amp;&amp; (PNG_LIBPNG_VER &gt;=3D 102=
00)
       int selection =3D PNG_SELECT_READ | PNG_SELECT_WRITE;
       int compilerID;

       mask =3D png_get_mmx_flagmask(selection, &amp;compilerID);
    #endif
</pre>

<p>On return, compilerID will indicate which version of the MMX assembler
optimizations was compiled.  Currently two flavors exist:  Microsoft
Visual C++ (compilerID =3D=3D 1) and GNU C (a.k.a. gcc/gas, compilerID =3D=
=3D 2).
On non-x86 platforms or on systems compiled without MMX optimizations, a
value of -1 is used.</p>

<p>Note that both png_get_asm_flagmask() and png_get_mmx_flagmask() return
all valid, settable optimization bits for the version of the library that's
currently in use.  In the case of shared (dynamically linked) libraries,
this may include optimizations that did not exist at the time the code was
written and compiled.  It is also possible, of course, to enable only known=
,
specific optimizations; for example:</p>

<pre>    #if defined(PNG_LIBPNG_VER) &amp;&amp; (PNG_LIBPNG_VER &gt;=3D 102=
00)
       flags =3D PNG_ASM_FLAG_MMX_READ_COMBINE_ROW  \
             | PNG_ASM_FLAG_MMX_READ_INTERLACE    \
             | PNG_ASM_FLAG_MMX_READ_FILTER_SUB   \
             | PNG_ASM_FLAG_MMX_READ_FILTER_UP    \
             | PNG_ASM_FLAG_MMX_READ_FILTER_AVG   \
             | PNG_ASM_FLAG_MMX_READ_FILTER_PAETH ;
       png_set_asm_flags(png_ptr, flags);
    #endif
</pre>

<p>This method would enable only the MMX read-optimizations available at th=
e
time of libpng 1.2.0's release, regardless of whether a later version of
the DLL were actually being used.  (Also note that these functions did not
exist in versions older than 1.2.0, so any attempt to run a dynamically
linked app on such an older version would fail.)</p>

<p>To determine whether the processor supports MMX instructions at all, use
the png_mmx_support() function:</p>

<pre>    #if defined(PNG_LIBPNG_VER) &amp;&amp; (PNG_LIBPNG_VER &gt;=3D 102=
00)
       mmxsupport =3D png_mmx_support();
    #endif
</pre>

<p>It returns -1 if MMX support is not compiled into libpng, 0 if MMX code
is compiled but MMX is not supported by the processor, or 1 if MMX support
is fully available.  Note that png_mmx_support(), png_get_mmx_flagmask(),
and png_get_asm_flagmask() all may be called without allocating and ini-
tializing any PNG structures (for example, as part of a usage screen or
"about" box).</p>

<p>The following code can be used to prevent an application from using the
thread_unsafe features, even if libpng was built with PNG_THREAD_UNSAFE_OK
defined:</p>

<pre>#if defined(PNG_USE_PNGGCCRD) &amp;&amp; defined(PNG_ASSEMBLER_CODE_SU=
PPORTED) \
  &amp;&amp; defined(PNG_THREAD_UNSAFE_OK)
    /* Disable thread-unsafe features of pnggccrd */
    if (png_access_version() &gt;=3D 10200)
    {
      png_uint_32 mmx_disable_mask =3D 0;
      png_uint_32 asm_flags;

      mmx_disable_mask |=3D ( PNG_ASM_FLAG_MMX_READ_COMBINE_ROW  \
                          | PNG_ASM_FLAG_MMX_READ_FILTER_SUB   \
                          | PNG_ASM_FLAG_MMX_READ_FILTER_AVG   \
                          | PNG_ASM_FLAG_MMX_READ_FILTER_PAETH );
      asm_flags =3D png_get_asm_flags(png_ptr);
      png_set_asm_flags(png_ptr, asm_flags &amp; ~mmx_disable_mask);
    }
#endif
</pre>

<p>For more extensive examples of runtime querying, enabling and disabling
of optimized features, see contrib/gregbook/readpng2.c in the libpng
source-code distribution.</p>


<h1 id=3D"section-7">VII.  MNG support</h1>

<p>The MNG specification (available at <a href=3D"http://www.libpng.org/pub=
/mng/">http://www.libpng.org/pub/mng/</a>)
allows certain extensions to PNG for PNG images that are embedded in
MNG datastreams.  Libpng can support some of these extensions.  To
enable them, use the png_permit_mng_features() function:</p>

<pre>   feature_set =3D png_permit_mng_features(png_ptr, mask)
   mask is a png_uint_32 containing the logical OR of the
        features you want to enable.  These include
        PNG_FLAG_MNG_EMPTY_PLTE
        PNG_FLAG_MNG_FILTER_64
        PNG_ALL_MNG_FEATURES
   feature_set is a png_32_uint that is the logical AND of
      your mask with the set of MNG features that is
      supported by the version of libpng that you are using.
</pre>

<p>It is an error to use this function when reading or writing a
standalone PNG file with the PNG 8-byte signature.  The PNG datastream
must be wrapped in a MNG datastream.  As a minimum, it must have the
MNG 8-byte signature and the MHDR and MEND chunks.  Libpng does not
provide support for these or any other MNG chunks; your application
must provide its own support for them.  You may wish to consider using
libmng (available at <a href=3D"http://www.libmng.com/">http://www.libmng.c=
om/</a>) instead.</p>


<h1 id=3D"section-8">VIII.  Changes to Libpng from version 0.88</h1>

<p>It should be noted that versions of libpng later than 0.96 are not
distributed by the original libpng author, Guy Schalnat, nor by
Andreas Dilger, who had taken over from Guy during 1996 and 1997, and
distributed versions 0.89 through 0.96, but rather by another member
of the original PNG Group, Glenn Randers-Pehrson.  Guy and Andreas are
still alive and well, but they have moved on to other things.</p>

<p>The old libpng functions png_read_init(), png_write_init(),
png_info_init(), png_read_destroy(), and png_write_destroy() have been
moved to PNG_INTERNAL in version 0.95 to discourage their use.  These
functions will be removed from libpng version 2.0.0.</p>

<p>The preferred method of creating and initializing the libpng structures =
is
via the png_create_read_struct(), png_create_write_struct(), and
png_create_info_struct() because they isolate the size of the structures
from the application, allow version error checking, and also allow the
use of custom error handling routines during the initialization, which
the old functions do not.  The functions png_read_destroy() and
png_write_destroy() do not actually free the memory that libpng
allocated for these structs, but just reset the data structures, so they
can be used instead of png_destroy_read_struct() and
png_destroy_write_struct() if you feel there is too much system overhead
allocating and freeing the png_struct for each image read.</p>

<p>Setting the error callbacks via png_set_message_fn() before
png_read_init() as was suggested in libpng-0.88 is no longer supported
because this caused applications that do not use custom error functions
to fail if the png_ptr was not initialized to zero.  It is still possible
to set the error callbacks AFTER png_read_init(), or to change them with
png_set_error_fn(), which is essentially the same function, but with a new
name to force compilation errors with applications that try to use the old
method.</p>

<p>Starting with version 1.0.7, you can find out which version of the libra=
ry
you are using at run-time:</p>

<pre>   png_uint_32 libpng_vn =3D png_access_version_number();
</pre>

<p>The number libpng_vn is constructed from the major version, minor
version with leading zero, and release number with leading zero,
(e.g., libpng_vn for version 1.0.7 is 10007).</p>

<p>You can also check which version of png.h you used when compiling your
application:</p>

<pre>   png_uint_32 application_vn =3D PNG_LIBPNG_VER;
</pre>

<h1 id=3D"section-9">IX. Y2K Compliance in libpng</h1>

<p>October 2, 2002</p>

<p>Since the PNG Development group is an ad-hoc body, we can't make
an official declaration.</p>

<p>This is your unofficial assurance that libpng from version 0.71 and
upward through 1.2.5 are Y2K compliant.  It is my belief that earlier
versions were also Y2K compliant.</p>

<p>Libpng only has three year fields.  One is a 2-byte unsigned integer tha=
t
will hold years up to 65535.  The other two hold the date in text
format, and will hold years up to 9999.</p>

<p>The integer is</p>
<pre>    "png_uint_16 year" in png_time_struct.
</pre>

<p>The strings are</p>
<pre>    "png_charp time_buffer" in png_struct and
    "near_time_buffer", which is a local character string in png.c.
</pre>

<p>There are seven time-related functions:</p>

<pre>    png_convert_to_rfc_1123() in png.c
      (formerly png_convert_to_rfc_1152() in error)
    png_convert_from_struct_tm() in pngwrite.c, called
      in pngwrite.c
    png_convert_from_time_t() in pngwrite.c
    png_get_tIME() in pngget.c
    png_handle_tIME() in pngrutil.c, called in pngread.c
    png_set_tIME() in pngset.c
    png_write_tIME() in pngwutil.c, called in pngwrite.c
</pre>

<p>All appear to handle dates properly in a Y2K environment.  The
png_convert_from_time_t() function calls gmtime() to convert from system
clock time, which returns (year - 1900), which we properly convert to
the full 4-digit year.  There is a possibility that applications using
libpng are not passing 4-digit years into the png_convert_to_rfc_1123()
function, or that they are incorrectly passing only a 2-digit year
instead of "year - 1900" into the png_convert_from_struct_tm() function,
but this is not under our control.  The libpng documentation has always
stated that it works with 4-digit years, and the APIs have been
documented as such.</p>

<p>The tIME chunk itself is also Y2K compliant.  It uses a 2-byte unsigned
integer to hold the year, and can hold years as large as 65535.</p>

<p>zlib, upon which libpng depends, is also Y2K compliant.  It contains
no date-related code.</p>

<p>Glenn Randers-Pehrson<br>
   libpng maintainer<br>
   PNG Development Group</p>

<h1 id=3D"section-10">X. Copyright Notice, Disclaimer, and License</h1>

<p>This copy of the libpng notices is provided for your convenience.  In ca=
se of
any discrepancy between this copy and the notices in the file png.h that is
included in the libpng distribution, the latter shall prevail.</p>

<pre>COPYRIGHT NOTICE, DISCLAIMER, and LICENSE:

If you modify libpng you may insert additional notices immediately followin=
g
this sentence.

libpng versions 1.0.7, July 1, 2000, through 1.2.5, October 3, 2002, are
Copyright (c) 2000-2002 Glenn Randers-Pehrson, and are
distributed according to the same disclaimer and license as libpng-1.0.6
with the following individuals added to the list of Contributing Authors

   Simon-Pierre Cadieux
   Eric S. Raymond
   Gilles Vollant

and with the following additions to the disclaimer:

   There is no warranty against interference with your enjoyment of the
   library or against infringement.  There is no warranty that our
   efforts or the library will fulfill any of your particular purposes
   or needs.  This library is provided with all faults, and the entire
   risk of satisfactory quality, performance, accuracy, and effort is with
   the user.

libpng versions 0.97, January 1998, through 1.0.6, March 20, 2000, are
Copyright (c) 1998, 1999, 2000 Glenn Randers-Pehrson
Distributed according to the same disclaimer and license as libpng-0.96,
with the following individuals added to the list of Contributing Authors:

   Tom Lane
   Glenn Randers-Pehrson
   Willem van Schaik

libpng versions 0.89, June 1996, through 0.96, May 1997, are
Copyright (c) 1996, 1997 Andreas Dilger
Distributed according to the same disclaimer and license as libpng-0.88,
with the following individuals added to the list of Contributing Authors:

   John Bowler
   Kevin Bracey
   Sam Bushell
   Magnus Holmgren
   Greg Roelofs
   Tom Tanner

libpng versions 0.5, May 1995, through 0.88, January 1996, are
Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.

For the purposes of this copyright and license, "Contributing Authors"
is defined as the following set of individuals:

   Andreas Dilger
   Dave Martindale
   Guy Eric Schalnat
   Paul Schmidt
   Tim Wegner

The PNG Reference Library is supplied "AS IS".  The Contributing Authors
and Group 42, Inc. disclaim all warranties, expressed or implied,
including, without limitation, the warranties of merchantability and of
fitness for any purpose.  The Contributing Authors and Group 42, Inc.
assume no liability for direct, indirect, incidental, special, exemplary,
or consequential damages, which may result from the use of the PNG
Reference Library, even if advised of the possibility of such damage.

Permission is hereby granted to use, copy, modify, and distribute this
source code, or portions hereof, for any purpose, without fee, subject
to the following restrictions:

1. The origin of this source code must not be misrepresented.

2. Altered versions must be plainly marked as such and
   must not be misrepresented as being the original source.

3. This Copyright notice may not be removed or altered from
   any source or altered source distribution.

The Contributing Authors and Group 42, Inc. specifically permit, without
fee, and encourage the use of this source code as a component to
supporting the PNG file format in commercial products.  If you use this
source code in a product, acknowledgment is not required but would be
appreciated.


A "png_get_copyright" function is available, for convenient use in "about"
boxes and the like:

   printf("%s",png_get_copyright(NULL));

Also, the PNG logo (in PNG format, of course) is supplied in the
files "pngbar.png" and "pngbar.jpg (88x31) and "pngnow.png" (98x31).

Libpng is OSI Certified Open Source Software.  OSI Certified Open Source
is a certification mark of the Open Source Initiative.

Glenn Randers-Pehrson
<!-- randeg@alum.rpi.edu -->
glennrp@users.sf.net
October 3, 2002
</pre>



</body></html>
------MultipartBoundary--mmfJMv6VFTPpufsAbXFV99k6lkza06mpzfQx4MhsBg----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gc.kis.v2.scr.kaspersky-labs.com/ADE39B2F-2CD6-644C-A355-ADCCFA4C1459/abn/main.css

@charset "utf-8";

#A9AdsMiddleBoxTop, #A9AdsOutOfStockWidgetTop, #A9AdsServicesWidgetTop, #AD=
-300x250, #AD-300x250-1, #AD-300x250-2, #AD-300x250-3, #AD-HOME-LEFT, #AD00=
1, #AD1line, #AD2line, #AD300Right, #AD300_VAN, #AD300x250, #AD300x600, #AD=
728Top, #ADEXPERT_PUSHDOWN, #ADEXPERT_RECTANGLE, #ADInterest, #ADNETwallBan=
ner1, #ADNETwallBanner2, #ADSLOT_1, #ADSLOT_2, #ADSLOT_3, #ADSLOT_4, #ADSLO=
T_SKYSCRAPER, #ADSPACE02, #ADSPACE03, #ADSPACE04, #ADS_2, #ADSlideshow, #AD=
Spro, #ADV120x90, #ADVERTISE_HERE_ROW, #ADVERTISE_RECTANGLE1, #ADVERTISE_RE=
CTANGLE2, #ADVTG_CONTAINER_pushdown, #ADVTLEFT1, #ADVTLEFT2, #ADVTRIGHT1, #=
ADV_VIDEOBOX_2_CNT, #ADVleaderboard, #AD_160, #AD_300, #AD_468x60, #AD_C, #=
AD_CONTROL_13, #AD_CONTROL_22, #AD_CONTROL_29, #AD_CONTROL_8, #AD_G, #AD_RO=
W, #AD_Zone, #AD_banner_bottom, #AD_gallery, #AD_google, #AD_half, #AD_news=
block, #AD_rectangle, #AD_rr_a, #AD_text, #ADback, #ADbox, #ADgoogle_newsbl=
ock, #ADoverThePlayer, #ADsmallWrapper, #AFF_popup, #AF_kph0, #AF_kph1, #AP=
C_ads_details, #AUI_A9AdsMiddleBoxTop, #AUI_A9AdsWidgetAdsWrapper, #Ad-0-0-=
Slider, #Ad-0-1-Slider, #Ad-1-0-Slider, #Ad-1-1-Slider, #Ad-1-2-Slider, #Ad=
-3-Slider, #Ad-4-Slider, #Ad-5-2-Slider, #Ad-8-0-Slider, #Ad-9-0-Slider, #A=
d-Container, #Ad-Top, #Ad160x600, #Ad160x600_0_adchoice, #Ad300x145, #Ad300=
x250, #Ad300x250_0, #Ad300x600_0_adchoice, #Ad3Left, #Ad3Right, #Ad3TextAd,=
 #Ad728x90, #Ad990, #AdAboveGame, #AdArea, #AdAreaH, #AdAuth1, #AdAuth2, #A=
dAuth3, #AdAuth4, #AdBanner, #AdBannerSmallContainer, #AdBanner_F1, #AdBann=
er_S, #AdBar, #AdBar1, #AdBigBox, #AdBlock, #AdBlockBottomSponsor, #AdBlock=
Dialog, #AdBottomLeader, #AdBottomRight, #AdBox160, #AdBox2, #AdBox300, #Ad=
Box728, #AdBoxMoreGames, #AdButtons, #AdContainerTop, #AdContentModule_F, #=
AdContent_0_0_pnlDiv, #AdControl_TowerAd, #AdDetails_GoogleLinksBottom, #Ad=
Details_InsureWith, #AdDetails_SeeMoreLink, #AdDisclaimer, #AdDisplay_LongL=
ink, #AdDisplay_TallLink, #AdDiv, #AdExtraBlock, #AdFeedbackLinkID_lnkItem,=
 #AdFoxDiv, #AdFrame1, #AdFrame2, #AdFrame4, #AdHouseRectangle, #AdIndexTow=
er, #AdLayer1, #AdLayer2, #AdLeaderboard2RunofSite, #AdLeaderboardBottom, #=
AdLeaderboardTop, #AdLocationMarketPage, #AdMPUHome, #AdMediumRectangle1300=
x250, #AdMediumRectangle2300x250, #AdMediumRectangle3300x250, #AdMiddle, #A=
dMobileLink, #AdPanel, #AdPanelBigBox, #AdPanelLogo, #AdPopUp, #AdPubsPromo=
, #AdRectangle, #AdRectangleBanner, #AdSense-Skyscraper, #AdSense1, #AdSens=
e2, #AdSense3, #AdSenseBottomAds, #AdSenseDiv, #AdSenseMiddleAds, #AdSenseR=
esults1_adSenseSponsorDiv, #AdSenseTopAds, #AdServer, #AdShopSearch, #AdSho=
wcase, #AdShowcase_F, #AdShowcase_F1, #AdSky23, #AdSkyscraper, #AdSlot_AF-R=
ight-Multi, #AdSpaceLeaderboard, #AdSpacing, #AdSponsor_SF, #AdSpotMovie, #=
AdSquare02, #AdSubsectionShowcase_F1, #AdTaily_Widget_Container, #AdTargetC=
ontrol1_iframe, #AdTop, #AdTopBlock, #AdTopLeader, #AdWidgetContainer, #AdZ=
one1, #AdZone2, #Ad_976x105, #Ad_BelowContent, #Ad_Block, #Ad_Center1, #Ad_=
Premier, #Ad_Right1, #Ad_RightBottom, #Ad_RightTop, #Ad_TopLeaderboard, #Ad=
banner, #Adc1_AdContainer, #Adc2_AdContainer, #Adc3_AdContainer, #AdcBB_AdC=
ontainer, #Adlabel, #Adrectangle, #Ads-C, #Ads-D-728x90-hori, #Ads270x510-l=
eft, #Ads470by50, #AdsBannerTop, #AdsBottomContainer, #AdsBottomIframe, #Ad=
sCarouselBoxArea, #AdsContainerTop, #AdsContent, #AdsContent_SearchShortRec=
B_UPSSR, #AdsDiv, #AdsFrame, #AdsHome2, #AdsLeader, #AdsLeft_1, #AdsPlayRig=
ht_1, #AdsRight, #AdsShowCase, #AdsTopContainer, #AdsVideo250, #AdsWrap, #A=
ds_BA_BUT, #Ads_BA_BUT_box, #Ads_BA_CAD, #Ads_BA_CAD2, #Ads_BA_CAD2_Text, #=
Ads_BA_CAD_box, #Ads_BA_FLB, #Ads_BA_SKY, #Ads_CAD, #Ads_OV_BS, #Ads_Specia=
l, #Ads_TFM_BS, #Ads_google_01, #Ads_google_02, #Ads_google_03, #Ads_google=
_04, #Ads_google_05, #Adsense300x250, #AdsenseBottom, #AdsenseTop, #Adtag30=
0x250Bottom, #Adtag300x250Top, #Adv-div, #Adv10, #Adv11, #Adv8, #Adv9, #Adv=
Area, #AdvBody, #AdvContainer, #AdvContainerBottom, #AdvContainerMidCenter,=
 #AdvContainerMiddleRight, #AdvContainerTopCenter, #AdvContainerTopRight, #=
AdvFooter, #AdvFrame1, #AdvHead, #AdvHeader, #Adv_Footer, #Adv_Main_content=
, #Adv_Maxi_Leaderboard_A, #Adv_Maxi_Leaderboard_B, #Adv_Superbox_A, #Adv_S=
uperbox_B, #Adv_Superbox_C, #Adv_Superbox_D, #Advert1, #AdvertMPU23b, #Adve=
rtPanel, #AdvertText, #Advertisement1, #Advertisement2, #AdvertisementRight=
ColumnRectangle, #AdvertisingDiv_0, #AdvertisingLeaderboard, #AdvertismentH=
omeTopRight, #Advertorial, #Advertorials, #AdvertsBottom, #AdvertsBottomR, =
#Adverts_AdDetailsBottom_300x600, #Adverts_AdDetailsMiddle_300x250, #Articl=
eBottomAd, #BANNER_160x600, #BANNER_300x250, #BANNER_728x90, #BBCPH_MCPH_MC=
PH_P_ArticleAd1, #BBCPH_MCPH_MCPH_P_OasAdControl1Panel, #BBCPH_MCPH_MCPH_P_=
OasAdControl2Panel, #BBCPH_MCPH_MCPH_SponsoredLinks1, #BBoxAd, #BDV_fullAd,=
 #BackgroundAdContainer, #Banner300x250Module, #Banner728x90, #BannerAd, #B=
annerAds, #BannerAdvert, #BannerAdvertisement, #BannerXGroup, #BelowFoldAds=
, #BigBoxAd, #BigboxAdUnit, #BillBoardAdd, #BlWrapper > .b-temp_rbc, #BodyA=
d, #BodyTopAds, #Body_Ad8_divAdd, #BotAd, #Bottom468x60AD, #BottomAd0, #Bot=
tomAdSpacer, #BottomPageAds, #BottomRightAdWrapper, #BrokerBox-AdContainer,=
 #ButtonAd, #CONTENTAD, #CSpromo120x90, #ClickPop_LayerPop_Container, #Clic=
kStory_ViewAD1, #ClickStory_ViewRightAD2, #Col2-1-ComboAd-Proxy, #CommonHea=
derAd, #CompanyDetailsNarrowGoogleAdsPresentationControl, #CompanyDetailsWi=
deGoogleAdsPresentationControl, #ContentAd1, #ContentAd2, #ContentAdPlaceHo=
lder1, #ContentAdPlaceHolder2, #ContentAdView, #ContentAdXXL, #ContentAdtag=
Rectangle, #ContentPlaceHolder1_adds, #ContentPlaceHolder1_advertControl1_a=
dvertLink, #ContentPlaceHolder1_advertControl3_advertLink, #ContentPlaceHol=
der1_pnlGoogleAds, #ContentPolepositionAds_Result, #Content_CA_AD_0_BC, #Co=
ntent_CA_AD_1_BC, #ConversationDivAd, #CornerAd, #CountdownAdvert, #DARTad3=
00x250, #DEFAULT_ADV4_SWF, #DFM-adPos-bottomline, #DFPAD_MR, #DFP_in_articl=
e_mpu, #DFP_top_leaderboard, #DartAd300x250, #DartAd990x90, #DealsPageSideA=
d, #DivAd, #DivAd1, #DivAd2, #DivAd3, #DivAdA, #DivAdB, #DivAdC, #DivAdEggH=
eadCafeTopBanner, #DivAdForumSplitBottom, #DivMsnCamara, #DivTopAd, #Divide=
rAd, #DynamicAD, #FFN_imBox_Container, #FIN_300_250_position2_ad, #FIN_300_=
x_250_600_position2_ad, #FIN_300x250_pos1_ad, #FIN_300x80_facebook_ad, #FIN=
_468x60_sponsor_ad, #FIN_640x60_promo_ad, #FIN_728_90_leaderboard_ad, #FIN_=
ad_300x100_pos_1, #FIN_videoplayer_300x250ad, #FRONTADVT2, #FRONTADVT3, #FR=
ONTADVT4, #FRONTADVT5, #FRONTADVT8, #FooterAd, #FooterAdBlock, #FooterAdCon=
tainer, #ForumSponsorBanner, #Freeforums-AdS-footer-728x90, #Freeforums-AdS=
-header-728x90, #FrontPageRectangleAd, #GOOGLEADS_BOT, #GOOGLEADS_CENTER, #=
GOOGLE_ADS_13, #GOOGLE_ADS_151, #GOOGLE_ADS_16, #GOOGLE_ADS_2, #GOOGLE_ADS_=
49, #GOOGLE_ADS_56, #GOOGLE_ADS_94, #GameMediumRectangleAD, #GamePageAdDiv,=
 #GoogleADsense, #GoogleADthree, #GoogleAd, #GoogleAd1, #GoogleAd2, #Google=
Ad3, #GoogleAdExploreMF, #GoogleAdRight, #GoogleAdTop, #GoogleAds250X200, #=
GoogleAdsPlaceHolder, #GoogleAdsPresentationControl, #GoogleAdsense, #Googl=
eAdsenseMerlinWrapper, #GoogleLeaderBoardAdUnit, #GoogleLeaderBoardAdUnitSe=
perator, #GoogleRelatedAds, #GoogleSponsored, #Google_Adsense_Main, #HALExc=
hangeAds, #HALHouseAd, #HB_News-ad, #HEADERAD, #HOME_TOP_RIGHT_BOXAD, #HP_a=
dUnits, #H_Ad_728x90, #H_Ad_Wrap, #HeaderAD, #HeaderAd, #HeaderAdBlock, #He=
aderAdSidebar, #HeaderAdsBlock, #HeaderAdsBlockFront, #HeaderBannerAdSpacer=
, #HeaderTextAd, #HomeAd1, #HomeBannerAd, #Home_AdSpan, #HomepageAdSpace, #=
HorizontalAd, #HouseAd, #HouseAdInsert, #ID_Ad_Sky, #IM_AD, #IN_HOUSE_AD_SW=
ITCHER_0, #IframeAdBannerSmallContainer, #ImageAdSideColumn, #ImageRotaArea=
AD, #InterstitialAD_0_1ckp, #IslandAd_DeferredAdSpacediv, #JobInformer, #Jo=
bsearchResultsAds, #Journal_Ad_125, #Journal_Ad_300, #JuxtapozAds, #KH-cont=
entAd, #LB_Row_Ad, #LM_ad_unit, #LS-google-ad, #LargeRectangleAd, #LeaderTo=
p-ad, #LeaderboardAdvertising, #LeaderboardNav_ad_placeholder, #LeftAd, #Le=
ftAd1, #LeftAdF1, #LeftAdF2, #LeftSideBarAD, #LftAd, #LittleAdvert, #Lounge=
AdsDiv, #LovelabAdoftheDay, #LowerContentAd, #MAIN.ShowTopic > .ad, #MAINAD=
-box, #MPUAdSpace, #MPUadvertising, #MPUadvertisingDetail, #MT_overroll ~ d=
iv[class][style=3D"left:0px;top:0px;height:480px;width:650px;"], #M_AD, #Ma=
inAd, #MainAd1, #MainContent_ucTopRightAdvert, #MainHeader1_FRONTADVT10, #M=
ainHeader1_FRONTADVT11, #MainRightStrip1_RIGHTADVT2, #MainRightStrip1_RIGHT=
ADVT3, #MainRightStrip1_RIGHTADVT4, #MainRightStrip1_RIGHTADVT5, #MainSpons=
oredLinks, #MastheadAd, #MediumRectangleAD, #Meebo\:AdElement\.Root, #MidPa=
geAds, #MiddleRightRadvertisement, #Module-From_Advertisers, #MyAdHeader, #=
MyAdSky, #NavAD, #Nightly_adContainer, #NormalAdModule, #OAS2, #OASMiddleAd=
, #OASRightAd, #OAS_AD_TOPRIGHT, #OAS_Top, #OAS_posBottom, #OAS_posRight, #=
OAS_posTopRight, #OpenXAds, #OverrideAdArea, #PPX_imBox_Container, #PREFOOT=
ER_LEFT_BOXAD, #PREFOOTER_RIGHT_BOXAD, #PageLeaderAd, #PaneAdvertisingConta=
iner, #PartialYahooJSAds-bottom-ads, #PartialYahooJSAds-top-ads, #PhotoAd1,=
 #PopWin[onmousemove], #PostSponsorshipContainer, #PushDownAd, #RHS2Adslot,=
 #RadAdSkyscraper, #RadAd_Skyscraper, #RelevantAds, #RgtAd1, #RhsIsland_Def=
erredAdSpacediv, #RightAd, #RightAdSpace, #RightAdvertisement, #RightBottom=
300x250AD, #RightColumn125x125AD, #RightColumnAdContainer, #RightColumnSkyS=
craperAD, #RightNavTopAdSpot, #RightRailSponsor, #RightSponsoredAd, #RollOu=
tAd970x66, #RollOutAd970x66iframe, #SBAArticle, #SBABottom, #SBAInHouse, #S=
BATier1, #SBATier2, #SBATier3, #SE20-ad-container, #SE_ADLINK_LAY_gd, #SIDE=
MENUAD, #SIM_ad_300x100_homepage_pos1, #SIM_ad_300x250-600_pos1, #SIM_ad_30=
0x250_pos2, #SIM_ad_468x60_homepage_pos1, #SIM_ad_468x60_homepage_pos2, #SI=
M_ad_468x60_homepage_pos3, #SIM_ad_728x90_bottom, #SRPadsContainer, #SR_Pop=
Over, #SR_PopOverModalBackground, #ScoreboardAd, #SearchAd_PlaceHolder, #Se=
archAdsBottom, #SearchAdsTop, #Section-Ads, #SectionAd300-250, #SectionSpon=
sorAd, #ServerAd, #SideAdMpu, #SideBarAdWidget, #SideMpuAdBar, #SidebarAd, =
#SidebarAdContainer, #SitenavAdslot, #SkyAd, #SkyscraperAD, #SlideShow_adv,=
 #SlideShow_adv2, #SpecialAds, #Spons-Link, #SponsorBarWrap, #SponsoredAd, =
#SponsoredAds, #SponsoredLinks, #SponsoredResultsTop, #SponsorsAds, #TDads,=
 #TL_footer_advertisement, #TOPADS, #TOP_ADROW, #TOP_RIGHT_BOXAD, #TPVideoP=
layerAd300x250, #Tadspacecbar, #Tadspacefoot, #Tadspacehead, #Tadspacemrec,=
 #TextLinkAds, #ThemeSection_adbanner2, #ThemeSection_adbanner3, #ThreadAd,=
 #TipTopAdSpace, #TitleAD, #Top-Ad-Container, #Top1AdWrapper, #Top468x60AD,=
 #TopADs, #TopAd0, #TopAdBox, #TopAdContainer, #TopAdDiv, #TopAdPlacement, =
#TopAdPos, #TopAdTable, #TopAdvert, #TopBannerAd, #TopCenterAdUnit, #TopGoo=
gleCustomAd, #TopRightRadvertisement, #TopSideAd, #TopTextAd, #VM-MPU-adspa=
ce, #VM-footer-adspace, #VM-footer-adwrap, #VM-header-adspace, #VM-header-a=
dwrap, #VertAdBox, #VertAdBox0, #WNAd1, #WNAd103, #WNAd17, #WNAd20, #WNAd43=
, #WNAd46, #WNAd47, #WNAd49, #WNAd52, #WNAd63, #WarningCodecBanner, #Welcom=
eAd, #WindowAdHolder, #WordFromSponsorAdvertisement, #XEadLeaderboard, #XEa=
dSkyscraper, #YahooAdParentContainer, #YahooAdsContainer, #YahooAdsContaine=
rPowerSearch, #YahooContentAdsContainerForBrowse, #YahooSponsoredResults, #=
Zergnet, #__admvnlb_modal_container, #__mom_ad_12, #__mom_ad_2, #__nq__hh[s=
tyle=3D"display:block!important"], #_ads, #a4g-floating-ad, #a_ad10Sp, #a_a=
d11Sp, #abHeaderAdStreamer, #abc-AD_topbanner, #about_adsbottom, #above-com=
ments-ad, #above-fold-ad, #above-footer-ads, #aboveAd, #aboveGbAd, #aboveNo=
deAds, #aboveplayerad, #abovepostads, #abp-killer, #acAdContainer, #acm-ad-=
tag-300x250-atf, #acm-ad-tag-300x250-btf, #acm-ad-tag-728x90-atf, #acm-ad-t=
ag-728x90-btf, #ad-0, #ad-1, #ad-1000x90-1, #ad-1050, #ad-109, #ad-118, #ad=
-120-left, #ad-120x600-1, #ad-120x600-other, #ad-120x600-sidebar, #ad-120x6=
0Div, #ad-125x125, #ad-13, #ad-133, #ad-143, #ad-160, #ad-160-long, #ad-160=
x600, #ad-160x600-sidebar, #ad-160x600-wrapper, #ad-162, #ad-17, #ad-170, #=
ad-180x150-1, #ad-19, #ad-197, #ad-2, #ad-2-160x600, #ad-200x200_newsfeed, =
#ad-21, #ad-213, #ad-220x90-1, #ad-230x100-1, #ad-240x400-1, #ad-240x400-2,=
 #ad-250, #ad-250x300, #ad-28, #ad-29, #ad-3, #ad-3-300x250, #ad-300, #ad-3=
00-250, #ad-300-additional, #ad-300-detail, #ad-300-sidebar, #ad-300X250-2,=
 #ad-300a, #ad-300b, #ad-300x-container, #ad-300x250, #ad-300x250-0, #ad-30=
0x250-01, #ad-300x250-02, #ad-300x250-1, #ad-300x250-2, #ad-300x250-b, #ad-=
300x250-mobile-LL_1, #ad-300x250-right, #ad-300x250-right0, #ad-300x250-sid=
ebar, #ad-300x250-wrapper, #ad-300x250Div, #ad-300x250_mid, #ad-300x250_top=
, #ad-300x40-1, #ad-300x40-2, #ad-300x40-5, #ad-300x60-1, #ad-300x600_top, =
#ad-32, #ad-320, #ad-336, #ad-350, #ad-37, #ad-376x280, #ad-4, #ad-4-300x90=
, #ad-5-images, #ad-55, #ad-63, #ad-635x40-1, #ad-655, #ad-7, #ad-728, #ad-=
728-90, #ad-728x90, #ad-728x90-1, #ad-728x90-leaderboard-top, #ad-728x90-to=
p, #ad-728x90-top0, #ad-732, #ad-734, #ad-74, #ad-88, #ad-88-wrap, #ad-970,=
 #ad-98, #ad-a, #ad-a1, #ad-abs-b-0, #ad-abs-b-1, #ad-abs-b-10, #ad-abs-b-2=
, #ad-abs-b-3, #ad-abs-b-4, #ad-abs-b-5, #ad-abs-b-6, #ad-abs-b-7, #ad-abso=
lute-160, #ad-ads, #ad-adsensemedium, #ad-advertorial, #ad-affiliate, #ad-a=
nchor, #ad-around-the-web, #ad-article, #ad-article-in, #ad-aside-1, #ad-at=
f-mid, #ad-atf-top, #ad-ban, #ad-banner, #ad-banner-1, #ad-banner-970, #ad-=
banner-980, #ad-banner-atf, #ad-banner-body-top, #ad-banner-bottom, #ad-ban=
ner-image, #ad-banner-lock, #ad-banner-placement, #ad-banner-top, #ad-banne=
r-wrap, #ad-bar, #ad-base, #ad-beauty, #ad-below-content, #ad-big, #ad-bigb=
ox, #ad-bigsize, #ad-billboard, #ad-billboard-atf, #ad-billboard-bottom, #a=
d-blade, #ad-block, #ad-block-125, #ad-block-bottom, #ad-block-container, #=
ad-border, #ad-bottom-300x250, #ad-bottom-banner, #ad-bottom-right-containe=
r, #ad-bottom-wrapper, #ad-bottomright, #ad-box, #ad-box-1, #ad-box-2, #ad-=
box-bottom, #ad-box-first, #ad-box-halfpage, #ad-box-leaderboard, #ad-box-r=
ectangle, #ad-box-rectangle-2, #ad-box-right, #ad-box-second, #ad-box1, #ad=
-box2, #ad-boxATF, #ad-boxes, #ad-br-container, #ad-bs, #ad-btf-bot, #ad-bt=
m, #ad-campaign, #ad-carousel, #ad-case, #ad-center, #ad-circfooter, #ad-co=
de, #ad-col, #ad-colB-1, #ad-column, #ad-container-1, #ad-container-2, #ad-=
container-adaptive-1, #ad-container-adaptive-3, #ad-container-banner, #ad-c=
ontainer-fullpage, #ad-container-inner, #ad-container-leaderboard, #ad-cont=
ainer-mpu, #ad-container-outer, #ad-container-overlay, #ad-container1, #ad-=
contentad, #ad-cube-Bottom, #ad-cube-Middle, #ad-cube-sec, #ad-cube-top, #a=
d-desktop-wrap, #ad-discover, #ad-display-ad, #ad-div-leaderboard, #ad-doub=
le-spotlight-container, #ad-drawer, #ad-e-container, #ad-ear, #ad-extra-com=
ments, #ad-extra-flat, #ad-f-container, #ad-featured-right, #ad-first-post,=
 #ad-five, #ad-five-75x50s, #ad-flex-first, #ad-flex-top, #ad-flyout, #ad-f=
ooter, #ad-footer-728x90, #ad-footprint-160x600, #ad-for-map, #ad-frame, #a=
d-framework-top, #ad-front-btf, #ad-front-footer, #ad-front-page-160x600-pl=
aceholder, #ad-front-sponsoredlinks, #ad-full-width, #ad-fullbanner-btf, #a=
d-fullbanner-outer, #ad-fullbanner2, #ad-fullbanner2-billboard-outer, #ad-f=
ullwidth, #ad-gamepage-leaderboard, #ad-gamepage-mpu1, #ad-gamepage-mpu2, #=
ad-giftext, #ad-globalleaderboard, #ad-google-chrome-sidebar, #ad-googleAdS=
ense, #ad-gpt-bottomrightrec, #ad-gpt-leftrec, #ad-gpt-rightrec, #ad-gutter=
-left, #ad-gutter-right, #ad-halfpage, #ad-header-left, #ad-header-mad, #ad=
-header-mobile, #ad-header-right, #ad-holder, #ad-homepage-content-well, #a=
d-homepage-top-wrapper, #ad-horizontal, #ad-horizontal-header, #ad-horizont=
al-top, #ad-idreammedia, #ad-img, #ad-in-post, #ad-index, #ad-inner, #ad-in=
side1, #ad-inside2, #ad-interstitial-wrapper, #ad-interstitialBottom, #ad-i=
nterstitialTop, #ad-introtext, #ad-jack, #ad-label, #ad-label2, #ad-large-h=
eader, #ad-lb, #ad-lb-secondary, #ad-ldr-spot, #ad-leader, #ad-leader-atf, =
#ad-leader-container, #ad-leaderboard-1, #ad-leaderboard-1-container, #ad-l=
eaderboard-2, #ad-leaderboard-2-container, #ad-leaderboard-bottom, #ad-lead=
erboard-container, #ad-leaderboard-footer, #ad-leaderboard-spot, #ad-leader=
board-top, #ad-leaderboard-top-container, #ad-leaderboard_bottom, #ad-leade=
rtop, #ad-left, #ad-left-sidebar-ad-1, #ad-left-sidebar-ad-2, #ad-left-side=
bar-ad-3, #ad-left-timeswidget, #ad-links-content, #ad-list-row, #ad-lrec, =
#ad-main-bottom, #ad-main-top, #ad-makeup, #ad-manager, #ad-manager-ad-bott=
om-0, #ad-manager-ad-top-0, #ad-medium, #ad-medium-lower, #ad-medium-rectan=
gle, #ad-medrec, #ad-medrec_premium, #ad-megaban2, #ad-megasky, #ad-mid, #a=
d-mid-rect, #ad-middle, #ad-middlethree, #ad-middletwo, #ad-midpage, #ad-mi=
nibar, #ad-module, #ad-mpu, #ad-mpu-premium-1, #ad-mpu-premium-2 { display:=
 none !important; color: rgb(92, 46, 103) !important; background-color: rgb=
(121, 237, 178) !important; }

#ad-mpu-topRight-container, #ad-mpu-warning, #ad-mpu1-spot, #ad-mpu2, #ad-m=
pu2-spot, #ad-mpu600-right-container, #ad-mrec, #ad-mrec2, #ad-new, #ad-new=
s-sidebar-300x250-placeholder, #ad-north, #ad-north-base, #ad-northeast, #a=
d-one, #ad-other, #ad-output, #ad-overlay, #ad-page-1, #ad-page-sky-300-a1,=
 #ad-page-sky-300-a2, #ad-page-sky-left, #ad-pan3l, #ad-pencil, #ad-placard=
, #ad-placeholder, #ad-placement, #ad-plate, #ad-popup, #ad-popup1, #ad-pos=
ition-a, #ad-position1, #ad-post, #ad-push, #ad-pushdown, #ad-r, #ad-rbkua,=
 #ad-rec-atf, #ad-rec-btf-top, #ad-recommend, #ad-rect, #ad-rectangle, #ad-=
rectangle-flag, #ad-rectangle1, #ad-rectangle1-outer, #ad-rectangle2, #ad-r=
ectangle3, #ad-region-1, #ad-results, #ad-rian, #ad-right-3, #ad-right-cont=
ainer, #ad-right-sidebar, #ad-right-sidebar-ad-1, #ad-right-sidebar-ad-2, #=
ad-right-skyscraper-container, #ad-right-top, #ad-right2, #ad-right3, #ad-r=
ighttop, #ad-ros-atf-300x90, #ad-ros-btf-300x90, #ad-rotate-home, #ad-row, =
#ad-row-1, #ad-s1, #ad-safe, #ad-sb, #ad-secondary-sidebar-1, #ad-section, =
#ad-separator, #ad-shop, #ad-side, #ad-side-text, #ad-sidebar, #ad-sidebar-=
1, #ad-sidebar-2, #ad-sidebar-3, #ad-sidebar-300x80, #ad-sidebar-btf, #ad-s=
idebar-container, #ad-sidebar-mad, #ad-sidebar-mad-wrapper, #ad-sidebar-rig=
ht_300-1, #ad-sidebar-right_300-2, #ad-sidebar-right_300-3, #ad-sidebar-rig=
ht_bitgold, #ad-sidebar-tall, #ad-sidebar1, #ad-sidebar2, #ad-sidebarleft-b=
ottom, #ad-sidebarleft-top, #ad-single-spotlight-container, #ad-skin, #ad-s=
ky, #ad-sky-atf, #ad-sky-btf, #ad-skyscraper, #ad-skyscraper-feedback, #ad-=
skyscraper1-outer, #ad-sla-sidebar300x250, #ad-slot-1, #ad-slot-2, #ad-slot=
-4, #ad-slot-mpu-1-desktop, #ad-slot-right, #ad-slot-top, #ad-slot1, #ad-sl=
ot2, #ad-slot4, #ad-slug-wrapper, #ad-small-banner, #ad-smartboard_1, #ad-s=
martboard_2, #ad-smartboard_3, #ad-software-description-300x250-placeholder=
, #ad-software-sidebar-300x250-placeholder, #ad-space, #ad-space-1, #ad-spa=
ce-2, #ad-space-big, #ad-special, #ad-splash, #ad-sponsored-traffic, #ad-sp=
onsors, #ad-spot, #ad-spot-bottom, #ad-spot-one, #ad-springboard-300x250, #=
ad-squares, #ad-standard-wrap, #ad-stickers, #ad-story-bottom-in, #ad-story=
-bottom-out, #ad-story-right, #ad-story-top, #ad-stripe, #ad-tab, #ad-tail-=
placeholder, #ad-tape, #ad-target-Leaderbord, #ad-teaser, #ad-techwords, #a=
d-textad-single, #ad-three, #ad-tlr-spot, #ad-top-250, #ad-top-300x250, #ad=
-top-728, #ad-top-banner, #ad-top-leader, #ad-top-leaderboard, #ad-top-left=
, #ad-top-lock, #ad-top-right, #ad-top-right-container, #ad-top-text-low, #=
ad-top-wrap, #ad-tower, #ad-tower1, #ad-trailerboard-spot, #ad-tray, #ad-tw=
o, #ad-typ1, #ad-uprrail1, #ad-video, #ad-video-page, #ad-west, #ad-wide-le=
aderboard, #ad-wrap, #ad-wrap-2, #ad-wrap-right, #ad-wrapper-728x90, #ad-wr=
apper-left, #ad-wrapper-right, #ad-wrapper1, #ad-yahoo-simple, #ad-zone-1, =
#ad-zone-2, #ad-zone-article-header-leaderboard, #ad-zone-default-sidebar, =
#ad-zone-inline, #ad001, #ad002, #ad01, #ad02, #ad1-468x400, #ad1-home, #ad=
1-placeholder, #ad1-wrapper, #ad1006, #ad101, #ad10Sp, #ad11, #ad11Sp, #ad1=
20x600, #ad120x600container, #ad120x60_override, #ad125B, #ad125BL, #ad125B=
R, #ad125TL, #ad125TR, #ad125x125, #ad160, #ad160-2, #ad160600, #ad160Conta=
iner, #ad160Wrapper, #ad160a, #ad160x600, #ad160x600right, #ad180, #ad1Sp, =
#ad1_holder, #ad1_top-left, #ad2-home, #ad2-label, #ad2-original-placeholde=
r, #ad250, #ad260x60, #ad2CONT, #ad2Sp, #ad2_footer, #ad2_iframe, #ad2_inli=
ne, #ad2gameslayer, #ad300, #ad300-250, #ad300-title, #ad300250top, #ad300I=
ndexBox, #ad300X250, #ad300_250, #ad300_a, #ad300_x_250, #ad300b, #ad300c, =
#ad300text, #ad300top, #ad300x100Middle, #ad300x150, #ad300x250, #ad300x250=
Module, #ad300x250_336x280_300x600_336x850, #ad300x250_336x280_bottom, #ad3=
00x250_callout, #ad300x250box, #ad300x250box2, #ad300x250c, #ad300x50, #ad3=
00x60, #ad300x600, #ad300x600_callout, #ad300x600pos2, #ad31, #ad32, #ad330=
x240, #ad336, #ad336atf, #ad336iiatf, #ad336x280, #ad375x85, #ad3Article, #=
ad3small, #ad468_hidden, #ad468x60, #ad468x60-story, #ad468x60_top, #ad470,=
 #ad480x60, #ad508x125, #ad520x85, #ad526x250, #ad5_inline, #ad6, #ad600, #=
ad600x90, #ad650, #ad720x90bot, #ad72890, #ad72890foot, #ad728Bottom, #ad72=
8Box, #ad728BoxBtm, #ad728Header, #ad728Mid, #ad728Top, #ad728Wrapper, #ad7=
28X90, #ad728foot, #ad728h, #ad728mid, #ad728top, #ad728x90_1, #ad728x90asm=
e, #ad728x90box, #ad76890topContainer, #ad768top1, #ad90, #ad97090, #adATF3=
00x250, #adAd, #adBTF300x250, #adBTF300x250IC, #adBadges, #adBanner10, #adB=
anner120x600, #adBanner160x600, #adBanner160x610, #adBanner2, #adBanner3, #=
adBanner336x280, #adBanner4, #adBanner728, #adBanner728_bot, #adBanner9, #a=
dBannerBottom, #adBannerBreaking, #adBannerHeader, #adBannerSpacer, #adBann=
erTable, #adBannerTop, #adBannerWrap, #adBannerWrapperFtr, #adBar, #adBlade=
DeskArt, #adBlock01, #adBlock125, #adBlockAlert, #adBlockAlertWrap, #adBloc=
kBanner, #adBlockContainer, #adBlockContent, #adBlockDetect, #adBlockOverla=
y, #adBlockTop, #adBlockerModal, #adBlocks, #adBody01, #adBody02, #adBody03=
, #adBody04, #adBody06, #adBottbanner, #adBottom, #adBox, #adBox11, #adBox1=
6, #adBox350, #adBox390, #adBoxUpperRight, #adBrandDev, #adBrandingStation,=
 #adBreak, #adCENTRAL, #adCTXSp, #adCarousel, #adChannel, #adChoiceFooter, =
#adChoices, #adChoicesIcon, #adChoicesLogo, #adCirc300X200, #adCirc300X250,=
 #adCirc300x300, #adCirc620X100, #adCirc_620_100, #adClickLeft, #adClickMe,=
 #adClickRight, #adCol, #adColumn, #adColumn3, #adCompanionBanner, #adCompa=
nionSubstitute, #adContainerCC, #adContainerForum, #adContainer_1, #adConta=
iner_2, #adContainer_3, #adContent, #adContentHolder, #adContext, #adContro=
l1, #adDailyDeal, #adDiv0, #adDiv1, #adDiv300, #adDiv4, #adDiv728, #adDivCo=
ntainer, #adDivleaderboard, #adDivminimodulebutton1, #adDivminimodulebutton=
2, #adDivminimodulebutton3, #adDivmrec, #adDivmrecadhomepage, #adFiller, #a=
dFixFooter, #adFlashDiv, #adFooter, #adFooterTitel, #adFot, #adFoxBanner, #=
adFps, #adFtofrs, #adGmWidget, #adGoogleText, #adGroup1, #adGroup4, #adHead=
erTop, #adHeaderWrapper, #adHolder1, #adHolder2, #adHolder3, #adHolder300x2=
50, #adHolder4, #adHolder5, #adHolder6, #adIframe, #adInBetweenPosts, #adIn=
Copy, #adInPlayer, #adInhouse, #adInstoryOneWrap, #adInstoryTwoWrap, #adInt=
eractive1, #adInteractive4, #adInteractiveInline, #adIsland, #adLB, #adLCon=
tain, #adLabel, #adLayout, #adLeaderTop, #adLeaderboard, #adLeaderboard-mid=
dle, #adLeaderboardUp, #adLeft, #adLink, #adLink300, #adLocation-1, #adLoca=
tion-2, #adLocation-3, #adLocation-4, #adLounge, #adLrec, #adMOBILETOP, #ad=
MPU, #adMPUHolder, #adMagAd, #adMain, #adMarketplace, #adMed, #adMedRect, #=
adMediaWidget, #adMediumRectangle, #adMeld, #adMessage, #adMid1, #adMid2, #=
adMiddle0Frontpage, #adMiddle_imgAd, #adMiniPremiere, #adMonster1, #adMoveH=
ere, #adMpu, #adMpuBottom, #adNshareWrap, #adOne, #adOuter, #adPLaceHolderT=
op728, #adPUSHDOWNBANNER, #adPageContainer, #adPanelAjaxUpdate, #adPartnerL=
inks, #adPlaceHolder1, #adPlaceHolder2, #adPlaceHolderRight, #adPlaceScript=
rightSidebarFirstBanner, #adPlaceScriptrightSidebarSecondBanner, #adPlaceSc=
ripttopBanner, #adPlacer, #adPopBOTtOM, #adPopover, #adPosOne, #adPosition1=
4, #adPosition5, #adPosition6, #adPosition7, #adPosition9, #adPush, #adRCon=
tain, #adRectangleFooter, #adRectangleHeader, #adRight, #adRight1, #adRight=
2, #adRight3, #adRight4, #adRight5, #adRightColumnHolder, #adSPLITCOLUMNTOP=
RIGHT, #adScraper, #adSection, #adSense, #adSenseBottomDiv, #adSenseBox, #a=
dSenseContentTop, #adSenseLoadingPlaceHolder, #adSenseModule, #adSenseResul=
tAdblock, #adSenseResults, #adSenseSidebarBottom, #adSenseTall, #adSenseWra=
pper, #adServer_marginal, #adSet, #adShortTower, #adSide, #adSideButton, #a=
dSidebar, #adSidebarSq, #adSite, #adSkin, #adSkinBackdrop, #adSkinLeft, #ad=
SkinRight, #adSky, #adSkyPosition, #adSkyscraper, #adSlider, #adSlot-inPage=
-300x250-right, #adSlot01, #adSlot02, #adSlot1, #adSlot2, #adSlot2_grid, #a=
dSlot3, #adSlot3_grid, #adSlot4, #adSlot4_grid, #adSlot_center, #adSlug, #a=
dSpace, #adSpace0, #adSpace1, #adSpace10, #adSpace11, #adSpace12, #adSpace1=
3, #adSpace14, #adSpace15, #adSpace16, #adSpace17, #adSpace18, #adSpace19, =
#adSpace2, #adSpace20, #adSpace21, #adSpace22, #adSpace23, #adSpace24, #adS=
pace25, #adSpace3, #adSpace300_ifrMain, #adSpace4, #adSpace5, #adSpace6, #a=
dSpace7, #adSpace8, #adSpace9, #adSpaceBottom, #adSpace_footer, #adSpace_ri=
ght, #adSpace_top, #adSpacer, #adSpecial, #adSplotlightEm, #adSponsor, #adS=
pot-Leader, #adSpot-banner, #adSpot-island, #adSpot-mrec1, #adSpot-promobox=
1, #adSpot-promobox2, #adSpot-sponsoredlinks, #adSpot-textbox1, #adSpot-twi=
n, #adSpot-widestrip, #adSpotAdvertorial, #adSpotIsland, #adSpotIslandLarge=
, #adSpotSponsoredLinks, #adSpotholder-EGN, #adSpotlightSquare1, #adSqb, #a=
dSquare, #adStaticA, #adStrip, #adSuperAd, #adSuperPremiere, #adSuperSkyscr=
aper, #adSuperbanner, #adTableCell, #adTag, #adTag-genre, #adTag1, #adTag2,=
 #adTakeOverInner, #adTakeOverLeft, #adTakeOverRight, #adTeaser, #adText01,=
 #adText02, #adText2, #adTextCustom, #adTextLink, #adTextRt, #adText_contai=
ner, #adThree, #adTicker, #adTiff, #adTile, #adTop, #adTop1, #adTop2, #adTo=
pBanner-inner, #adTopBanner1, #adTopBig, #adTopBox300x300, #adTopContent, #=
adTopModule, #adTopbanner, #adTopboxright, #adTower, #adTower1, #adTower2, =
#adTwo, #adUn_1, #adUn_2, #adUn_3, #adUnit, #adValue, #adVcss, #adWideSkysc=
raper, #adWrap, #adWrapper, #adWrapper1, #adWrapperLeft, #adWrapperRight, #=
adWrapperSky, #adZoneTop, #ad_0, #ad_02, #ad_03, #ad_04, #ad_120_sidebar, #=
ad_120x600, #ad_120x90, #ad_130x250_inhouse, #ad_160, #ad_160_600, #ad_160_=
600_2, #ad_160_container_left, #ad_160_container_right, #ad_160_sidebar, #a=
d_160x160, #ad_160x600, #ad_175x300, #ad_190x90, #ad_250, #ad_250x250, #ad_=
300, #ad_300_250, #ad_300_250_1, #ad_300_250_inline, #ad_300_container, #ad=
_300_interruptor, #ad_300_wrapper, #ad_300a, #ad_300b, #ad_300c, #ad_300mis=
c, #ad_300x100, #ad_300x100_m_c, #ad_300x250, #ad_300x250Ando, #ad_300x250_=
1, #ad_300x250_2, #ad_300x250_3, #ad_300x250_container, #ad_300x250_content=
_column, #ad_300x250_frame, #ad_300x250_m_c, #ad_300x250_secondary, #ad_300=
x250_startgame, #ad_300x250m, #ad_300x60, #ad_300x600, #ad_300x600_1, #ad_3=
00x90, #ad_336, #ad_336_singlebt, #ad_350_200, #ad_380x35, #ad_45, #ad_450x=
280, #ad_468_60, #ad_468x120, #ad_468x60, #ad_470x60a, #ad_48, #ad_49, #ad_=
500, #ad_500_label, #ad_500x150, #ad_51, #ad_57, #ad_6, #ad_7, #ad_700_90, =
#ad_700x430, #ad_728, #ad_728_foot, #ad_728_holder, #ad_728a, #ad_728b, #ad=
_728h, #ad_728x90, #ad_728x90_container, #ad_728x90_content, #ad_728x90home=
, #ad_728x91, #ad_8, #ad_88x31, #ad_9, #ad_940, #ad_984, #ad_990x90, #ad_A,=
 #ad_B, #ad_B1, #ad_Banner, #ad_Bottom, #ad_C, #ad_C2, #ad_D, #ad_DisplayAd=
1, #ad_DisplayAd2, #ad_E, #ad_Entry_160x600, #ad_Entry_728x90, #ad_F, #ad_F=
eature_Middlebar_468x60, #ad_G, #ad_H, #ad_Header_768x90, #ad_Home_300x250,=
 #ad_I, #ad_J, #ad_K, #ad_L, #ad_LargeRec01, #ad_M, #ad_Middle, #ad_Middle1=
, #ad_N, #ad_NorthBanner, #ad_O, #ad_P, #ad_Position1, #ad_Pushdown, #ad_R1=
, #ad_Right, #ad_Top, #ad_Top2, #ad_TopLongBanner, #ad_Wrap, #ad_YieldManag=
er-160x600, #ad_YieldManager-300x250, #ad_YieldManager-728x90, #ad_above_ga=
me, #ad_ad, #ad_adsense, #ad_after_navbar, #ad_anchor, #ad_and_content_ad_b=
ox, #ad_article_btm, #ad_bannerManage_1, #ad_banner_1, #ad_banner_120x600, =
#ad_banner_125x300, #ad_banner_300x250, #ad_banner_468x60, #ad_banner_728x9=
0, #ad_banner_728x90_bot, #ad_banner_bot, #ad_banner_example, #ad_banner_to=
p, #ad_banners, #ad_banners_content, #ad_bar, #ad_bar_rect, #ad_bellow_post=
, #ad_bg, #ad_bg_image, #ad_big, #ad_bigbox, #ad_bigbox_companion, #ad_bigr=
ectangle, #ad_bigsize, #ad_bigsize_wrapper, #ad_billboard, #ad_billboard2, =
#ad_billboard_ifm, #ad_block, #ad_block_0, #ad_block_1, #ad_block_2, #ad_bl=
ock_300x250, #ad_block_mpu, #ad_board_after_forums, #ad_board_before_forums=
, #ad_body, #ad_bottom, #ad_bottom_1x1, #ad_bottom_728x90, #ad_bottom_anoth=
er, #ad_bottom_article_text, #ad_bottom_footer, #ad_bottombrandtext, #ad_bo=
x, #ad_box02, #ad_box160a, #ad_box300x250, #ad_box_2, #ad_box_ad_0, #ad_box=
_ad_1, #ad_box_colspan, #ad_box_top, #ad_branding, #ad_bs_area, #ad_btmslot=
, #ad_bucket_med_rectangle_1, #ad_bucket_med_rectangle_2, #ad_buttons, #ad_=
category_middle, #ad_cell, #ad_center_monster, #ad_channel, #ad_chitikabann=
er_120x600LH, #ad_choices, #ad_circ300x250, #ad_circ_300_200, #ad_circ_300x=
250, #ad_circ_300x300, #ad_close, #ad_closebtn, #ad_cna2, #ad_comments, #ad=
_companion_banner, #ad_complex, #ad_comps_top, #ad_cont, #ad_cont1, #ad_con=
t2, #ad_container, #ad_container_0, #ad_container_300x250, #ad_container_ma=
rginal, #ad_container_side, #ad_container_sidebar, #ad_container_top, #ad_c=
ontent_before_first_para, #ad_content_fullsize, #ad_content_primary, #ad_co=
ntent_right, #ad_content_top, #ad_content_wrap, #ad_creative_2, #ad_creativ=
e_3, #ad_creative_5, #ad_cyborg, #ad_display_300_250, #ad_display_728_90, #=
ad_div, #ad_div_bottom, #ad_div_top, #ad_embed_300x250, #ad_fb_circ, #ad_fe=
ature, #ad_feedback, #ad_fg, #ad_firstpost, #ad_flyrelax, #ad_foot, #ad_foo=
ter, #ad_footer1, #ad_footerAd, #ad_footer_s, #ad_footer_small, #ad_frame, =
#ad_frame1, #ad_front_three, #ad_fullbanner, #ad_gallery, #ad_gallery_bot, =
#ad_global_300x250, #ad_global_below_navbar, #ad_global_header, #ad_global_=
header1, #ad_global_header2, #ad_google_Link, #ad_google_content336, #ad_go=
oglebanner_160x600LH, #ad_grp1, #ad_grp2, #ad_gutter_top, #ad_h3, #ad_haha_=
1, #ad_haha_4, #ad_halfpage, #ad_hdr_2, #ad_head, #ad_header_1, #ad_header_=
container, #ad_header_logo_placeholder, #ad_headerlarge, #ad_help_link_new,=
 #ad_hf, #ad_hide_for_menu, #ad_holder, #ad_home, #ad_home_middle, #ad_hori=
zontal, #ad_horseshoe_left, #ad_horseshoe_right, #ad_horseshoe_spacer, #ad_=
horseshoe_top, #ad_hotpots, #ad_houseslot1_desktop, #ad_houseslot_a, #ad_ho=
useslot_b, #ad_hy_01, #ad_hy_02, #ad_hy_03, #ad_hy_04, #ad_hy_05, #ad_hy_06=
, #ad_hy_07, #ad_hy_08, #ad_iframe_160_by_600_middle, #ad_iframe_300, #ad_i=
mg, #ad_img_banner, #ad_in_arti, #ad_infoboard_box, #ad_inplace_1, #ad_inte=
restmatch, #ad_interestmatch400, #ad_island, #ad_island2, #ad_island_incont=
ent, #ad_island_incontent2, #ad_keywrods, #ad_kvadrat_under_player, #ad_lab=
el, #ad_large, #ad_large_rectangular, #ad_lastpost, #ad_layer, #ad_layer1, =
#ad_layer2, #ad_ldb, #ad_lead1, #ad_leader, #ad_leaderBoard, #ad_leaderboar=
d2, #ad_leaderboard3, #ad_leaderboard728x90, #ad_leaderboard_1, #ad_leaderb=
oard_flex, #ad_leaderboard_master, #ad_leaderboard_middle, #ad_leaderboard_=
top, #ad_leaderboardtwo, #ad_leaderborder_container1, #ad_left, #ad_left_1,=
 #ad_left_2, #ad_left_3, #ad_left_skyscraper, #ad_left_skyscraper_2, #ad_le=
ft_top, #ad_leftslot, #ad_lft, #ad_link, #ad_links, #ad_links_footer { disp=
lay: none !important; color: rgb(92, 46, 103) !important; background-color:=
 rgb(121, 237, 178) !important; }

#ad_lnk, #ad_lrec, #ad_lwr_square, #ad_main_top, #ad_main_top_01, #ad_main_=
top_05, #ad_main_top_08, #ad_marker, #ad_mast, #ad_med_rect, #ad_medium, #a=
d_medium_rectangle, #ad_medium_rectangular, #ad_mediumrectangle, #ad_megaba=
nner, #ad_menu_header, #ad_message, #ad_messageboard_x10, #ad_middle, #ad_m=
iddle_122, #ad_middle_2, #ad_middle_bottom, #ad_midstrip, #ad_ml, #ad_mobil=
e, #ad_module, #ad_most_pop_234x60_req_wrapper, #ad_mpu, #ad_mpu2, #ad_mpu3=
00x250, #ad_mpu_1, #ad_mpuav, #ad_mpuslot, #ad_mrcontent, #ad_mrec, #ad_mre=
c1, #ad_mrec2, #ad_msgplus-gallery-5, #ad_myFrame, #ad_netpromo, #ad_new, #=
ad_newsletter, #ad_num_1, #ad_num_2, #ad_num_3, #ad_one, #ad_overlay_conten=
t, #ad_overlay_countdown, #ad_overture, #ad_panel, #ad_panel_1, #ad_panel_2=
, #ad_panorama_top, #ad_pencil, #ad_ph_2, #ad_ph_3, #ad_ph_4, #ad_ph_8, #ad=
_place, #ad_placeholder, #ad_play_300, #ad_plugs, #ad_post, #ad_post_300, #=
ad_poster, #ad_pr_info, #ad_primary, #ad_primaryAd, #ad_promoAd, #ad_public=
idad, #ad_pushupbar-closed, #ad_rail, #ad_rect, #ad_rect1, #ad_rect2, #ad_r=
ect3, #ad_rect_body, #ad_rect_bottom, #ad_rect_c, #ad_rectangle, #ad_rectan=
gle_medium, #ad_rectangular, #ad_region1, #ad_region2, #ad_region3, #ad_reg=
ion5, #ad_related_links_div, #ad_related_links_div_program, #ad_replace_div=
_0, #ad_replace_div_1, #ad_report_leaderboard, #ad_report_rectangle, #ad_re=
sults, #ad_right, #ad_right3, #ad_rightSidebarFirstBanner, #ad_rightSidebar=
SecondBanner, #ad_right_1, #ad_right_box, #ad_right_column1_1, #ad_right_co=
lumn2_1, #ad_right_content_article_page, #ad_right_content_home, #ad_right_=
main, #ad_right_out, #ad_right_rail_bottom, #ad_right_rail_flex, #ad_right_=
rail_top, #ad_right_second, #ad_right_skyscraper, #ad_right_skyscraper_2, #=
ad_right_top, #ad_rightslot, #ad_righttop-300x250, #ad_ros_tower, #ad_rotat=
or-2, #ad_rotator-3, #ad_row, #ad_row_home, #ad_rr_1, #ad_rside, #ad_rside_=
link, #ad_script_head, #ad_sec, #ad_sec_div, #ad_secondary, #ad_sense, #ad_=
sense_help, #ad_sgd, #ad_short, #ad_sidebar, #ad_sidebar1, #ad_sidebar2, #a=
d_sidebar3, #ad_sidebar_1, #ad_sidebar_top, #ad_silo, #ad_sitebar, #ad_skin=
, #ad_sky, #ad_sky1, #ad_sky2, #ad_sky3, #ad_skyscraper, #ad_skyscraper1, #=
ad_skyscraper120, #ad_skyscraper160x600, #ad_skyscraper2, #ad_skyscraper_1,=
 #ad_skyscraper_right, #ad_skyscraper_text, #ad_slot, #ad_slot_bottom, #ad_=
slot_leaderboard, #ad_slot_livesky, #ad_slot_right_bottom, #ad_slot_right_t=
op, #ad_slot_sky_top, #ad_small, #ad_space_300_250, #ad_space_728, #ad_spac=
e_top, #ad_sponsored, #ad_sponsorship_2, #ad_spot300x250, #ad_spot_a, #ad_s=
pot_b, #ad_spotlight, #ad_squares, #ad_ss, #ad_stck, #ad_strapad, #ad_strea=
m10, #ad_stream11, #ad_stream12, #ad_stream16, #ad_stream17, #ad_stream19, =
#ad_stream8, #ad_strip, #ad_takeover, #ad_tall, #ad_tbl, #ad_term_bottom_pl=
ace, #ad_text:not(textarea), #ad_thread1_1, #ad_thread_first_post_content, =
#ad_thread_last_post_content, #ad_tile_home, #ad_topBanner, #ad_top_728x90,=
 #ad_top_banner, #ad_top_bar, #ad_top_header_center, #ad_top_holder, #ad_to=
pbanner, #ad_topmob, #ad_topnav, #ad_topslot_b, #ad_tp_banner_1, #ad_tp_ban=
ner_2, #ad_two, #ad_txt, #ad_under_game, #ad_unit2, #ad_unit_slot1, #ad_uni=
t_slot2, #ad_unit_slot3, #ad_unit_slot4, #ad_vertical, #ad_video_abovePlaye=
r, #ad_video_belowPlayer, #ad_video_large, #ad_website_top, #ad_wide, #ad_w=
ide_box, #ad_widget, #ad_widget_1, #ad_window, #ad_wp_base, #ad_wrapper1, #=
ad_wrapper2, #ad_x10, #ad_x20, #ad_xrail_top, #ad_zone, #ad_zone1, #ad_zone=
2, #ad_zone3, #adamazonbox, #adaptvcompanion, #adb-actived, #adb-enabled, #=
adb-enabled3, #adb-warning, #adbForum, #adbanner-home-left, #adbanner-home-=
right, #adbanner-middle, #adbanner-top-left, #adbanner-top-right, #adbanner=
00001, #adbanner00002, #adbanner00003, #adbanner00004, #adbanner00005, #adb=
anner1, #adbanner_abovethefold_300, #adbanner_mobile_top, #adbannerbox, #ad=
bannerdiv, #adbannerleft, #adbannerright, #adbannerwidget, #adbar_ad_1_div,=
 #adbar_ad_2_div, #adbar_ad_3_div, #adbar_ad_4_div, #adbar_ads_container_di=
v, #adbar_main_div, #adbarbox, #adbard, #adbdiv, #adbg_ad_0, #adbg_ad_1, #a=
dbig, #adblade, #adblade-disc, #adbladeSp, #adblade_ad, #adblkad, #adblock-=
300x250, #adblock-alert, #adblock-big, #adblock-box, #adblock-jango, #adblo=
ck-leaderboard, #adblock-modal, #adblock-msg, #adblock-overlay, #adblock-sm=
all, #adblock1, #adblock2, #adblock4, #adblockDetect, #adblockOverlay, #adb=
lock_detected, #adblock_header_ad_1, #adblock_header_ad_1_inner, #adblock_m=
essage, #adblock_screen, #adblock_sidebar_ad_2, #adblock_sidebar_ad_2_inner=
, #adblock_v, #adblockbottom, #adblockerMess, #adblocker_announce, #adblock=
er_message, #adblocker_modal_overlay, #adblockermessage, #adblockerwarnung,=
 #adblockrighta, #adblocks-detected, #adblocktop, #adblocktwo, #adbn, #adbn=
_UMU, #adbnr, #adbnr-l, #adbottom, #adbottomgao, #adbox-indivisual-body-top=
right, #adbox-placeholder-topbanner, #adbox-topbanner, #adbox1, #adbox2, #a=
dbox300600, #adbox300x250_1, #adbox300x250_2, #adbox_right, #adbrite, #adbr=
ite_inline_div, #adbritebottom, #adbutton, #adbuttons, #adcarousel, #adcatf=
ish, #adcell, #adcenter, #adcenter2, #adcenter4, #adchoices-icon, #adchoice=
s_container, #adclear, #adclose, #adcode1, #adcode10, #adcode2, #adcode3, #=
adcode4, #adcolContent, #adcolumn, #adcolumnwrapper, #adcontainer125px, #ad=
container2, #adcontainer250x250, #adcontainer3, #adcontainer5, #adcontainer=
Right, #adcontainer___gelement_adbanner_2_0, #adcontainer_top_ads, #adconta=
insm, #adcontent1, #adcontextlinks, #adcontrolPushSite, #adcontrolhalfbanne=
r, #adcontrolisland, #add-top, #add720, #add_160x600, #add_720bottom, #add_=
block_ad1, #add_block_ad2, #add_ciao2, #add_space_google, #add_space_sideba=
r, #addbottomleft, #addiv-bottom, #addiv-top, #addsDiv, #addspaceleft, #add=
spaceright, #adfactor-label, #adfloat, #adfooter, #adfooter_728x90, #adfoot=
er_hidden, #adframe:not(frameset), #adframetop, #adfreead, #adhalfbanner_wr=
apper, #adhalfpage, #adhead_g, #adheadhubs, #adhesion, #adhesionAdSlot, #ad=
hesionUnit, #adhide, #adholder, #adhome, #adhomepage, #adhzh, #adid10601, #=
adid2161, #adiframe1_iframe, #adiframe2_iframe, #adiframe3_iframe, #adignit=
er, #adimg, #adimg0, #adimg3, #adimg4, #adimg6, #adition_Skyscraper, #aditi=
on_content_ad, #adjacency, #adjacent-list-ad, #adjs_id, #adk2_slider_top_ri=
ght, #adkit_content-block, #adkit_content-foot, #adkit_footer, #adkit_mrec1=
, #adkit_mrec2, #adkit_rectangle, #adkit_rnav-bt, #adkit_rnav-fb, #adl_120x=
600, #adl_250x250, #adl_300x100, #adl_300x120, #adl_300x250, #adl_300x250_t=
d, #adl_728x90, #adl_individual_1, #adl_leaderboard, #adl_medium_rectangle,=
 #adlabel, #adlabelFooter, #adlabelfooter, #adlabelheader, #adlanding, #adl=
andscape, #adlargeverti, #adlargevertimarginauto, #adlayerContainer, #adlay=
er_back, #adlayerad, #adleaderboard, #adleaderboard_flex, #adleaderboardb, =
#adleaderboardb_flex, #adleft, #adlhs, #adlink-13, #adlink-133, #adlink-19,=
 #adlink-197, #adlink-213, #adlink-28, #adlink-55, #adlink-74, #adlink-98, =
#adlinks, #adlinkws, #adlove, #adlrec, #admain, #admanagerResultListBox, #a=
dmanager_leaderboard, #admanager_top_banner, #admaru_reminder, #admid, #adm=
iddle3, #admiddle3center, #admiddle3left, #admiddleCenter, #admod2, #admon-=
300x250, #admon-728x90, #admpufoot, #admputop, #admsg, #admulti520, #adnet,=
 #adnorth, #adops_cube, #adops_leaderboard, #adops_skyscraper, #adoptionsim=
g, #adoverlaysrc, #adpanel-block, #adplace, #adplaceholder_mpu01, #adplacem=
ent, #adplacer_preroll1, #adplate-content, #adpos-top, #adpos1-leaderboard,=
 #adpos_3, #adposition, #adposition-C, #adposition-FPMM, #adposition-REM2, =
#adposition-SHADE, #adposition-TOCSS, #adposition-TVSP, #adposition-inner-R=
EM1, #adposition-inner-REM3, #adposition1, #adposition10, #adposition1_cont=
ainer, #adposition2, #adposition4, #adpositionbottom, #adpostloader, #adpro=
mo, #adprovider-default, #adrect, #adrectangle, #adrectanglea, #adrectangle=
a_flex, #adrectanglea_hidden, #adrectangleb, #adrectangleb_flex, #adrectmar=
ginauto, #adrhs, #adrig, #adright2, #adrightbottom, #adrightgame, #adrighth=
ome, #adrightrail, #adriver_middle, #adriver_top, #adrow, #adrow-house, #ad=
row1, #adrow3, #ads > .dose > .dosesingle, #ads-125, #ads-125-2, #ads-160x6=
00, #ads-200, #ads-200x200-a, #ads-250, #ads-300, #ads-300-250, #ads-300x25=
0-L3-2, #ads-336x280, #ads-468, #ads-5, #ads-728x90, #ads-728x90-I3, #ads-7=
28x90-I4, #ads-A, #ads-B, #ads-B1, #ads-C, #ads-C1, #ads-E, #ads-E1, #ads-F=
, #ads-G, #ads-H, #ads-K, #ads-area, #ads-article-left, #ads-banner, #ads-b=
anner-top, #ads-bigbox-no1, #ads-block, #ads-block-frame, #ads-blog, #ads-b=
ot, #ads-bottom, #ads-box-header-pb, #ads-by-google, #ads-category, #ads-ce=
nter-text, #ads-contain-125, #ads-container-2, #ads-container-anchor, #ads-=
container-top, #ads-content, #ads-dell, #ads-div2, #ads-dw, #ads-footer, #a=
ds-footer-inner, #ads-footer-wrap, #ads-google, #ads-h-left, #ads-h-right, =
#ads-header, #ads-header-728, #ads-home-468, #ads-horizontal, #ads-hoster-2=
, #ads-indextext, #ads-king, #ads-leader, #ads-leaderboard, #ads-leaderboar=
d1, #ads-left-top, #ads-lrec, #ads-main, #ads-main-bottom, #ads-menu, #ads-=
middle, #ads-mn, #ads-mpu, #ads-outer, #ads-panel, #ads-panorama-A1, #ads-p=
ost-468, #ads-post10, #ads-prices, #ads-rhs, #ads-right, #ads-right-bottom,=
 #ads-right-cube, #ads-right-skyscraper, #ads-right-text, #ads-right-top, #=
ads-right-twobottom, #ads-rt, #ads-sidebar, #ads-sidebar-bottom, #ads-sideb=
ar-skyscraper-unit, #ads-sidebar-top, #ads-slot, #ads-sponsored-boxes, #ads=
-sticky, #ads-text, #ads-top, #ads-top-728, #ads-tp, #ads-under-rotator, #a=
ds-vers7, #ads-vertical, #ads-vertical-wrapper, #ads-wrap, #ads100Box, #ads=
100Middlei4, #ads120, #ads120_600-widget-2, #ads125, #ads160_600-widget-3, =
#ads160_600-widget-5, #ads160_600-widget-7, #ads160left, #ads1_box, #ads1_s=
idebar, #ads2_box, #ads300, #ads300-250, #ads300Bottom, #ads300Top, #ads300=
hp, #ads300k, #ads300x200, #ads300x250, #ads300x250_2, #ads300x250_single, =
#ads315, #ads336Box, #ads336x280, #ads340web, #ads468x60, #ads50, #ads7, #a=
ds728, #ads72890top, #ads728bottom, #ads728top, #ads728x90, #ads728x90_2, #=
ads790, #adsBannerFrame, #adsBar, #adsBottom, #adsBox-460_left, #adsBox-dyn=
amic-right, #adsBoxResultsPage, #adsCTN, #adsCombo02_1, #adsCombo02_2, #ads=
Combo02_3, #adsCombo02_4, #adsCombo02_5, #adsCombo02_6, #adsCombo02_7, #ads=
Container, #adsContent, #adsDisplay, #adsDiv0, #adsDiv1, #adsDiv2, #adsDiv3=
, #adsDiv4, #adsDiv5, #adsDiv6, #adsDiv7, #adsGooglePos, #adsHeadLine, #ads=
Heading, #adsID, #adsIfrme1, #adsIfrme2, #adsIfrme3, #adsIfrme4, #adsLREC, =
#adsLeftZone1, #adsLeftZone2, #adsLinkFooter, #adsMpu, #adsNarrow, #adsPane=
l, #adsProdHighlight_wrap, #adsRight, #adsRightDiv, #adsRightVideo, #adsSPR=
Block, #adsSuperCTN, #adsTop, #adsTopLeft, #adsZone, #adsZone1, #adsZone2, =
#adsZone_1, #ads_01, #ads_120x60_block, #ads_160, #ads_2015, #ads_2015_1, #=
ads_3, #ads_300, #ads_300x250, #ads_320_260, #ads_320_260_2, #ads_728, #ads=
_728x90, #ads_absolute_left, #ads_absolute_right, #ads_back, #ads_banner, #=
ads_banner1, #ads_banner_header, #ads_banner_right1, #ads_bar, #ads_belowfo=
rumlist, #ads_belownav, #ads_big, #ads_bigrec1, #ads_bigrec2, #ads_bigrec3,=
 #ads_block, #ads_bottom_inner, #ads_bottom_outer, #ads_box, #ads_box1, #ad=
s_box2, #ads_box_bottom, #ads_box_right, #ads_box_top, #ads_button, #ads_by=
_google, #ads_campaign, #ads_catDiv, #ads_center, #ads_center_banner, #ads_=
central, #ads_combo2, #ads_container, #ads_content, #ads_dynamicShowcase, #=
ads_eo, #ads_expand, #ads_footer, #ads_fullsize, #ads_h, #ads_halfsize, #ad=
s_header, #ads_header_games, #ads_horiz, #ads_horizontal, #ads_horz, #ads_h=
tml1, #ads_html2, #ads_im, #ads_inner, #ads_insert_container, #ads_layout_b=
ottom, #ads_lb, #ads_lb_frame, #ads_leaderbottom, #ads_left, #ads_left_top,=
 #ads_line, #ads_mads_r1, #ads_mads_r2, #ads_medrect, #ads_notice, #ads_pav=
e, #ads_place, #ads_placeholder, #ads_player, #ads_player_audio, #ads_playe=
r_line, #ads_postdownload, #ads_pro_468_60_on_vid, #ads_r_c, #ads_right_sid=
ebar, #ads_right_top, #ads_section_textlinks, #ads_side, #ads_sidebar_bgnd,=
 #ads_sidebar_roadblock, #ads_sky, #ads_slide_div, #ads_space, #ads_space_h=
eader, #ads_special_center, #ads_sponsFeed-headline, #ads_sponsFeed-left, #=
ads_sponsored_link_pixel, #ads_superbanner1, #ads_superbanner2, #ads_superi=
or, #ads_td, #ads_text, #ads_textlinks, #ads_title, #ads_top2, #ads_top_ban=
ner, #ads_top_container, #ads_top_content, #ads_top_right, #ads_top_sec, #a=
ds_topbanner, #ads_tower1, #ads_tower_top, #ads_vert, #ads_video, #ads_watc=
h_top_square, #ads_wide, #ads_zone27, #adsbot, #adsbottom, #adsbottombluesl=
eft, #adsbox, #adsbox-left, #adsbox-right, #adsbox1, #adsbox2, #adsbox3, #a=
dsbox336x280, #adsbox4, #adsbox728x90, #adsbysourcewidget-2, #adscenter, #a=
dscolumn, #adscontainer, #adscontainer_background_back_index1100_all, #adsc=
ontainer_banner_new_bottom_index_1060, #adscontainer_banner_new_second_inde=
x_1060, #adscontainer_banner_new_top_index_1060_2, #adscontent, #adsctl00_A=
dsHome2, #adsd_contentad_r1, #adsd_contentad_r2, #adsd_contentad_r3, #adsd_=
topbanner, #adsd_txt_sky, #adsdaq160600, #adsdaq300250, #adsdaq72890, #adsd=
iv300, #adsdiv468, #adsdiv_close, #adsection, #adsense-2, #adsense-468x60, =
#adsense-area, #adsense-bottom, #adsense-end-300, #adsense-head-spacer, #ad=
sense-header, #adsense-letterbox, #adsense-link, #adsense-middle, #adsense-=
module-bottom, #adsense-new, #adsense-post, #adsense-right, #adsense-sideba=
r, #adsense-tag, #adsense-text, #adsense-top, #adsense-wrap, #adsense03, #a=
dsense04, #adsense05, #adsense1, #adsense160600, #adsense2pos, #adsense300x=
250, #adsense468, #adsense6, #adsense728, #adsenseArea, #adsenseHeader, #ad=
senseLeft, #adsenseOne, #adsenseWrap, #adsense_200_200_article, #adsense_30=
0x250, #adsense_article_bottom, #adsense_article_left, #adsense_banner_top,=
 #adsense_block_238x200, #adsense_block_350x320, #adsense_bottom_ad, #adsen=
se_box, #adsense_box2, #adsense_box_video, #adsense_honeytrap, #adsense_ima=
ge, #adsense_item_detail, #adsense_leaderboard, #adsense_overlay, #adsense_=
placeholder_2, #adsense_sidebar, #adsense_testa, #adsense_top, #adsense_uni=
t5, #adsense_ziel, #adsensebreadcrumbs, #adsenseheader, #adsensehorizontal,=
 #adsensempu, #adsensepo, #adsensepos, #adsensequadr, #adsenseskyscraper, #=
adsensetext, #adsensetopmobile, #adsensetopplay, #adsensewidget-3, #adserv,=
 #adserve-Banner, #adserve-Leaderboard, #adserve-MPU, #adserve-Sky, #adserv=
er_HeaderAd, #adsfundo, #adsground, #adshometop, #adshowbtm, #adshowtop, #a=
dside, #adsideblock1, #adsider, #adsiframe, #adsimage, #adskinleft, #adskin=
link, #adskinright, #adskintop, #adsky, #adskyleftdiv, #adskyrightdiv, #ads=
kyscraper, #adskyscraper_flex, #adsleft1, #adslider, #adslist, #adslistbox,=
 #adslot, #adslot-2-container, #adslot-3-container, #adslot-4-container, #a=
dslot1, #adslot1173, #adslot1189, #adslot1202, #adslot2, #adslot3, #adslot4=
, #adslot5, #adslot6, #adslot7, #adslot_c2, #adslot_m1, #adslot_m2, #adslot=
_m3, #adsmegabanner, #adsmiddle, #adsnews, #adsonar, #adsonarBlock, #adspac=
e-1, #adspace-2, #adspace-300x250, #adspace-728, #adspace-728x90, #adspace-=
bottom, #adspace-leaderboard-top, #adspace-one { display: none !important; =
color: rgb(92, 46, 103) !important; background-color: rgb(121, 237, 178) !i=
mportant; }

#adspace-panorama, #adspace-top, #adspace300x250, #adspaceBox, #adspaceBox3=
00, #adspaceBox300_150, #adspaceBox300white, #adspaceRow, #adspace_header, =
#adspace_leaderboard, #adspacer, #adspan, #adspdl-container, #adspecial_off=
er_box, #adsplace1, #adsplace2, #adsplace4, #adsplash, #adsponsorImg, #adsp=
onsored_links_box, #adspot, #adspot-1, #adspot-149x170, #adspot-1x4, #adspo=
t-2, #adspot-295x60, #adspot-2a, #adspot-2b, #adspot-300x110-pos-1, #adspot=
-300x125, #adspot-300x250-pos1, #adspot-300x250-pos3, #adspot-300x600-pos1,=
 #adspot-468x60-pos-2, #adspot-620x270-pos-1, #adspot-620x45-pos-1, #adspot=
-620x45-pos-2, #adspot-728x90, #adspot-728x90-pos-2, #adspot-728x90-pos1, #=
adspot-a, #adspot-bottom, #adspot-c, #adspot-d, #adspot-top, #adspot300x250=
, #adspot_220x90, #adspot_300x250, #adspot_300x250A_desktop, #adspot_468x60=
, #adspot_728x90, #adspotlight1, #adsquare, #adsquare2, #adsright, #adss, #=
adssidebar2, #adssidebar3, #adsspace, #adstd, #adstext2, #adstory, #adstrip=
, #adstripbottom, #adstripnew, #adstuff, #adswidget1-quick-adsense, #adswid=
get2-quick-adsense, #adswidget2-quick-adsense-reloaded-2, #adswizzBanner, #=
adsxpls2, #adszed-728x90, #adtab, #adtab-feedback2, #adtable_top, #adtag5, =
#adtag8, #adtag_right_side, #adtagfooter, #adtagheader, #adtagrightcol, #ad=
tags_left, #adtaily, #adtaily-widget-light, #adtechWallpaper, #adtech_0, #a=
dtech_1, #adtech_2, #adtech_3, #adtech_728or920_2, #adtech_googleslot_03c, =
#adtech_leaderboard01, #adtech_takeover, #adtechbanner728, #adtext-top-cont=
ent, #adtopDet, #adtopHeader, #adtopPrograma, #adtop_dfp, #adtopbanner, #ad=
topbox, #adtopcenter, #adtophp, #adtrafficright, #adtxt, #adu-sto, #adunder=
game, #adunderpicture, #adunit, #adunit-mpu-atf, #adunit-mpu-atf-feed, #adu=
nit-mpu-atf-sidebar, #adunit-mpu-btf-1, #adunit-mpu-btf-6, #adunit-mpu-btf-=
article, #adunit-mpu-btf-article-2, #adunit-mpu-btf-sidebar, #adunit-mpu-se=
cond, #adunit-pages1x1, #adunit-roadblock, #adunit300x500, #adunit_article_=
center_bottom_computer, #adunit_article_center_middle1_computer, #adunit_ar=
ticle_center_middle4_computer, #adunit_article_center_middle6_computer, #ad=
unit_article_center_top_computer, #adunit_article_right_middle2_computer, #=
adunit_article_right_top_computer, #adunit_main_center_bottom_computer, #ad=
unit_main_right_middle2_computer, #adunit_main_right_top_computer, #adunit_=
video, #adunitl, #adv-01, #adv-300, #adv-Top, #adv-box, #adv-comments-place=
holder, #adv-companion-iframe, #adv-container, #adv-ext-ext-1, #adv-ext-ext=
-2, #adv-fb-container, #adv-google, #adv-gpt-masthead-leaderboard-container=
1, #adv-leaderboard, #adv-left, #adv-middle, #adv-middle1, #adv-midroll, #a=
dv-mpux, #adv-preroll, #adv-right, #adv-right1, #adv-scrollable, #adv-serve=
rs-com-1, #adv-sticky-1, #adv-sticky-2, #adv-strip, #adv-text, #adv-x34, #a=
dv-x35, #adv-x36, #adv-x37, #adv-x38, #adv-x39, #adv-x40, #adv130x195, #adv=
160x600, #adv170, #adv2_ban, #adv300bottom, #adv300top, #adv300x250, #adv30=
0x250container, #adv3_ban, #adv468x90, #adv728, #adv728x90, #adv768x90, #ad=
vCard1, #advCard2, #advCard3, #advCarrousel, #advHome, #advHomevideo, #advM=
egaBanner, #advRectangle, #advRectangle1, #advSidebarDocBox, #advSkin, #adv=
Top, #advTopRight_anchor, #advWrapper, #adv_01, #adv_02, #adv_11, #adv_300,=
 #adv_300_600, #adv_300x250_1, #adv_300x250_2, #adv_300x250_3, #adv_468x60_=
content, #adv_5, #adv_52, #adv_6, #adv_62, #adv_65, #adv_7, #adv_70, #adv_7=
1, #adv_728, #adv_728x90, #adv_73, #adv_94, #adv_96, #adv_97, #adv_98, #adv=
_BoxBottom, #adv_Inread, #adv_IntropageOvl, #adv_LdbMastheadPush, #adv_Relo=
ad, #adv_Skin, #adv_adsense_300_dx, #adv_adsense_300_m, #adv_banner_feature=
d, #adv_banner_sidebar, #adv_bkg_cont, #adv_bootom, #adv_border, #adv_box_a=
, #adv_center, #adv_contents, #adv_contents_tem, #adv_google_300, #adv_goog=
le_728, #adv_halfpage, #adv_halfpage_title, #adv_holder, #adv_id, #adv_kod_=
frame, #adv_leaderboard, #adv_mpu1, #adv_mpu2, #adv_network, #adv_outbrain_=
SB_1_sidebar, #adv_overlay, #adv_overlay_content, #adv_r, #adv_skin, #adv_s=
kin_1, #adv_skin_1_a, #adv_sky, #adv_sponsorRowFooter, #adv_sponsorRowHeade=
r, #adv_sponsor_cat, #adv_textlink, #adv_textual_google_div, #adv_top, #adv=
_top_banner_wrapper, #adv_top_strip, #adv_unisound ~ #ad_module_cont > [id^=
=3D"ad_module"], #adv_unisound ~ #main > #slidercontentContainer, #adv_vide=
o_sidebar, #adv_videobox, #adv_wallpaper, #adv_wallpaper2, #adv_wideleaderb=
oard, #adver, #adver-top, #adver1, #adver2, #adver3, #adver4, #adver5, #adv=
er6, #adver7, #adverFrame, #advert-120, #advert-2, #advert-ahead, #advert-b=
anner, #advert-banner-wrap, #advert-block, #advert-boomer, #advert-box, #ad=
vert-column, #advert-container-top, #advert-display, #advert-footer, #adver=
t-footer-hidden, #advert-header, #advert-hpu, #advert-island, #advert-leade=
rboard, #advert-left, #advert-links-bottom, #advert-mpu, #advert-placeholde=
r-post-content-image-1, #advert-right, #advert-right-not-home, #advert-sky,=
 #advert-skyscaper, #advert-skyscraper, #advert-stickysky, #advert-text, #a=
dvert-top, #advert-top-banner, #advert-wrapper, #advert1hp, #advert234_cont=
ainer, #advert2area, #advert2areasmall, #advert300x260, #advert3area, #adve=
rt3areasmall, #advertBanner, #advertBox, #advertBoxRight, #advertBoxSquare,=
 #advertColumn, #advertControl4_advertLink, #advertCover, #advertDB, #adver=
tIframe, #advertMPUContainer, #advertMarkerHorizontalConatiner, #advertMark=
erVerticalConatiner, #advertOverlay, #advertRight, #advertSection, #advertS=
eparator, #advertTop, #advertTopLarge, #advertTopSmall, #advertTower, #adve=
rtWrapper, #advert_01, #advert_04, #advert_05, #advert_07, #advert_1, #adve=
rt_125x125, #advert_250x250, #advert_300x2502, #advert_300x2503, #advert_56=
1_01, #advert_561_02, #advert_561_03, #advert_561_04_container, #advert_561=
_04_left_end, #advert_561_04_right_end, #advert_561_05, #advert_561_07, #ad=
vert_back_160x600, #advert_back_300x250_1, #advert_back_300x250_2, #advert_=
banner, #advert_belowmenu, #advert_bottom_100x70, #advert_container, #adver=
t_container_300, #advert_header, #advert_home01, #advert_home02, #advert_ho=
me03, #advert_home04, #advert_image1_0, #advert_image2_0, #advert_image3_0,=
 #advert_leaderboard, #advert_lrec_format, #advert_media, #advert_mid, #adv=
ert_mpu, #advert_mpu_1, #advert_mpu_2, #advert_right1, #advert_right_skyscr=
aper, #advert_sky, #advert_top, #advert_yell, #advertblock, #advertblock160=
, #advertblock300, #advertborder, #advertborder160, #advertbox2, #advertbox=
3, #advertbox4, #advertcalc, #adverthome, #adverti, #advertiframebottom, #a=
dvertise-here, #advertise-here-sidebar, #advertise-now, #advertise-sidebar,=
 #advertise1, #advertise2, #advertiseBanner, #advertiseGoogle, #advertiseHe=
re, #advertiseLink, #advertise_top, #advertisediv, #advertiseheretop, #adve=
rtisement-10, #advertisement-13, #advertisement-16, #advertisement-300x250,=
 #advertisement-4, #advertisement-7, #advertisement-728x90, #advertisement-=
content, #advertisement-detail1, #advertisement-detail2, #advertisement-lar=
ge, #advertisement-rightcolumn, #advertisement-text, #advertisement160x600,=
 #advertisement2, #advertisement3, #advertisement728x90, #advertisementArea=
, #advertisementBottomThreadUser, #advertisementBox, #advertisementDIV2, #a=
dvertisementFooterTop, #advertisementHeaderBottom, #advertisementHorizontal=
, #advertisementLigatus, #advertisementPrio2, #advertisementRight, #adverti=
sementRightcolumn0, #advertisementRightcolumn1, #advertisementThread, #adve=
rtisementTop, #advertisement_RightPanel, #advertisement_banner, #advertisem=
ent_block, #advertisement_box, #advertisement_container, #advertisement_lab=
el, #advertisement_notice, #advertisementblock1, #advertisementblock2, #adv=
ertisementblock3, #advertisementjsalert, #advertisements_bottom, #advertise=
ments_sidebar, #advertisements_top, #advertisementsarticle, #advertisements=
xml, #advertiser-container, #advertiserLinks, #advertiserReports, #advertis=
ers-caption, #advertising-160x600, #advertising-300x250, #advertising-728x9=
0, #advertising-banner, #advertising-caption, #advertising-container, #adve=
rtising-control, #advertising-mockup, #advertising-right, #advertising-skys=
craper, #advertising-top, #advertising2, #advertising2-preroll, #advertisin=
g3, #advertising300x250, #advertisingBlocksLeaderboard, #advertisingBottomF=
ull, #advertisingHrefTop, #advertisingLeftLeft, #advertisingLink, #advertis=
ingModule160x600, #advertisingModule728x90, #advertisingRightColumn, #adver=
tisingRightRight, #advertisingTop, #advertisingTopWrapper, #advertising_1, =
#advertising_2, #advertising_300, #advertising_300_under, #advertising_300x=
105, #advertising_320, #advertising_728, #advertising_728_under, #advertisi=
ng_btm, #advertising_column, #advertising_container, #advertising_contentad=
, #advertising_header, #advertising_holder, #advertising_horiz_cont, #adver=
tising_iab, #advertising_top_container, #advertisment-block-1, #advertismen=
t-horizontal, #advertisment1, #advertismentBottom728x90_, #advertismentElem=
entInUniversalbox, #advertisment_content, #advertisment_panel, #advertismen=
tgoogle, #advertistop_td, #advertleft, #advertorial, #advertorial-box, #adv=
ertorial-wrap, #advertorial1, #advertorial_block_3, #advertorial_links, #ad=
vertorial_red_listblock, #adverts-top-container, #adverts-top-left, #advert=
s-top-middle, #adverts-top-right, #adverts_right, #advertscroll, #advertsin=
gle, #advertspace, #advertssection, #adverttext, #adverttext160, #adverttop=
, #advetisement_300x250, #advframe, #advgeoul, #advgoogle, #advideo_adv, #a=
dvideo_adv_main_div, #advm_preload, #advman-2, #advr_mobile, #advsingle, #a=
dvt, #advt-right-skyscraper, #advt_bottom, #advtbar, #advtext, #advtopright=
, #advx3_banner, #adwhitepaperwidget, #adwidget, #adwidget-5, #adwidget-6, =
#adwidget1, #adwidget2, #adwidget2_hidden, #adwidget3_hidden, #adwidget_hid=
den, #adwin, #adwin_rec, #adwith, #adwords-4-container, #adwords-box, #adwr=
ap-295x295, #adwrap-722x90, #adwrap-729x90, #adwrap-966x90, #adxBigAd, #adx=
BigAd2, #adxLeaderboard, #adxMiddle, #adxMiddle5, #adxMiddleRight, #adxSpon=
Link, #adxSponLink2, #adxSponLinkA, #adxToolSponsor, #adx_ad, #adx_ad_botto=
m, #adx_ad_bottom_close, #adxtop, #adxtop2, #adzbanner, #adzerk, #adzerk1, =
#adzerk2, #adzerk_by, #adzone, #adzone-halfpage_1, #adzone-leaderboard_1, #=
adzone-leaderboard_2, #adzone-middle1, #adzone-middle2, #adzone-mpu_1, #adz=
one-mpu_2, #adzone-parallax_1, #adzone-right, #adzone-sidebarSmallPromo1, #=
adzone-sidebarSmallPromo2, #adzone-teads, #adzone-top, #adzone-wallpaper, #=
adzone-weatherbar-logo, #adzoneBANNER, #adzone_content, #adzone_wall, #adzo=
nebanner, #adzoneheader, #aetn_3tier_ad_bar, #af_ad_large, #af_ad_small, #a=
f_adblock, #afc-container, #aff-ad-0, #affiliate_ad, #affinityBannerAd, #af=
ter-content-ad, #after-content-ads, #after-header-ad-left, #after-header-ad=
-right, #after-header-ads, #after_ad, #afterpostad, #agencies_ad, #agi-ad30=
0x250, #agi-ad300x250overlay, #agi-sponsored, #alert_ads, #amazon-ads, #ama=
zon_ad, #amazon_bsa_block, #ami_ad_cntnr, #amsSparkleAdFeedback, #amsSparkl=
eAdWrapper, #amzn-native-ad-0, #amzn-native-ad-1, #amzn-native-ad-2, #amzn_=
assoc_ad_div_adunit0_0, #anAdScGame300x250, #analytics_ad, #analytics_banne=
r, #anchorAd, #annoying_ad, #annoying_extra_ad_wrapper, #anti_adblock, #any=
van-ad, #ap-widget-ad, #ap-widget-ad-label, #ap_adframe, #ap_adtext, #ap_cu=
_overlay, #ap_cu_wrapper, #apiBackgroundAd, #apiTopAdContainer, #apiTopAdWr=
ap, #apmNADiv, #apolload, #app_advertising_pregame_content, #app_advertisin=
g_rectangle, #app_advertising_rectangle_ph, #apt-homebox-ads, #araHealthSpo=
nsorAd, #area-adcenter, #area-left-ad, #area13ads, #area1ads, #article-ad, =
#article-ad-container, #article-advert, #article-advert-dfp, #article-agora=
-ad, #article-billboard-ad-1, #article-bottom-ad, #article-box-ad, #article=
-content-ad, #article-footer-sponsors, #article-island-ad, #article-sidebar=
-ad, #article-sponspred-content, #article-top-728x90-ad-wrapper, #articleAd=
, #articleAdReplacement, #articleBoard-ad, #articleLeftAdColumn, #articleSi=
deAd, #article_LeftAdWords, #article_SponsoredLinks, #article_ad, #article_=
ad_1, #article_ad_3, #article_ad_bottom, #article_ad_bottom_cont, #article_=
ad_container, #article_ad_rt1, #article_ad_top, #article_ad_top_cont, #arti=
cle_ad_w, #article_adholder, #article_ads, #article_advert, #article_banner=
_ad, #article_body_ad1, #article_bottom_ad01, #article_box_ad, #article_gal=
lery_desktop_ad, #article_left_ad01, #article_sidebar_ad, #article_sidebar_=
ad_02, #articlead1, #articlead2, #articlead300x250r, #articleadblock, #arti=
cletop_ad, #articleview_ad, #articleview_ad2, #artist-ad-container, #as24-m=
agazine-rightcol-adtag-1, #asideAd, #aside_ad, #asideads, #asinglead, #asse=
tsListings[style=3D"display: block;"], #atad1, #atad2, #atlasAdDivGame, #at=
wAdFrame0, #atwAdFrame1, #atwAdFrame2, #atwAdFrame3, #atwAdFrame4, #autos_b=
anner_ad, #aw-ad-container, #awds-nt1-ad, #awesome-ad, #awp_advertisements-=
2, #axdsense1, #b-ad-choices, #b-adw, #b5-skyscraper-ad-3, #b5_ad_footer, #=
b5_ad_sidebar1, #b5_ad_top, #b5ad300, #bLinkAdv, #babAdTop, #backad, #backg=
round-ad-head-spacer, #background-adv, #background_ad_left, #background_ad_=
right, #background_ads, #backgroundadvert, #ban_300x250, #ban_728x90, #bann=
er-300x250, #banner-300x250-area, #banner-300x250-north, #banner-300x600-ar=
ea, #banner-336x280-north, #banner-336x280-south, #banner-468x60, #banner-7=
28, #banner-728adtag, #banner-728adtag-bottom, #banner-728x90, #banner-728x=
90-area, #banner-ad-container, #banner-ad-first, #banner-ad-last, #banner-a=
d-loader, #banner-ad-square-first, #banner-ad-square-last, #banner-ads, #ba=
nner-advert, #banner-advert-container, #banner-lg-ad, #banner-skyscraper, #=
banner.b-banner__content, #banner120x600, #banner250x250, #banner300-top-ri=
ght, #banner300x250, #banner468, #banner468x60, #banner600, #banner660x90, =
#banner728, #banner728x90, #banner975_container, #bannerAdContainer1_1, #ba=
nnerAdContainer1_2, #bannerAdContainer1_3, #bannerAdContainer1_4, #bannerAd=
Container1_5, #bannerAdContainer1_6, #bannerAdContainer2_1, #bannerAdContai=
ner2_2, #bannerAdContainer2_3, #bannerAdContainer2_4, #bannerAdContainer2_5=
, #bannerAdContainer2_6, #bannerAdFrame, #bannerAdLInk, #bannerAdRight3, #b=
annerAdTop, #bannerAdWrap, #bannerAd_ctr, #bannerAd_rdr, #bannerAds, #banne=
rAdsense, #bannerAdvert, #bannerGoogle, #banner_280_240, #banner_300_250, #=
banner_300x250_sidebar, #banner_468x60, #banner_ad_Sponsored, #banner_ad_bo=
ttom, #banner_ad_div_fw, #banner_ad_footer, #banner_ad_module, #banner_ad_p=
laceholder, #banner_ad_top, #banner_admicro, #banner_ads, #banner_adsense, =
#banner_adv, #banner_advertisement, #banner_adverts, #banner_content_ad, #b=
anner_mpu1, #banner_mpu3, #banner_sedo, #banner_slot, #banner_spacer, #bann=
er_videoad, #banner_wrapper_top, #bannerad-bottom, #bannerad-top, #bannerad=
2, #banneradrow, #bannerads, #banneradspace, #banneradvert3, #barAdWrapper,=
 #base-advertising-top, #base-board-ad, #baseAdvertising, #baseMedRec, #bas=
eboard-ad, #baseboard-ad-wrapper, #basket-adContainer, #bbContentAds, #bb_a=
d_container, #bbadwrap, #bbccom_leaderboard, #bbccom_leaderboard_container,=
 #bbccom_mpu, #bbccom_sponsor_section, #bbccom_sponsor_section_text, #bbcco=
m_storyprintsponsorship, #bbo_ad1, #bcaster-ad, #bdnads-top-970x90, #before=
-footer-ad, #below-listings-ad, #below-menu-ad-header, #below-post-ad, #bel=
owAd, #belowContactBoxAd, #belowNodeAds, #below_comments_ad_holder, #below_=
content_ad_container, #belowad, #belowheaderad, #bg-custom-ad, #bg-footer-a=
ds, #bg-footer-ads2, #bg_YieldManager-160x600, #bg_YieldManager-300x250, #b=
g_YieldManager-728x90, #bg_banner_120x600, #bg_banner_468x60, #bg_banner_72=
8x90, #bgad, #bh_adFrame_ag_300x250_atf, #bh_adFrame_bh_300x250_atf, #bh_ad=
Frame_bh_300x250_btf, #big-ad-switch, #big-box-ad, #bigAd1, #bigAd2, #bigAd=
Div, #bigBannerAd, #bigBoxAd, #bigBoxAdCont, #big_ad, #big_ad_label, #big_a=
ds, #bigad300outer, #bigadbox, #bigadframe, #bigadspace, #bigadspot, #bigbo=
ard_ad, #bigboard_ad_ini, #bigbox-ad, #bigsidead, #billboard-ad-container, =
#billboard_ad, #bingadcontainer2, #bl11adv, #blancco-ad, #block--ex_dart-ex=
_dart_adblade_article, #block-ad_blocks-0, #block-ad_cube-0, #block-ad_cube=
-1, #block-adsense-0, #block-adsense-2, #block-adsense_managed-0, #block-ad=
tech-middle1_300x250, #block-adtech-middle2_300x250, #block-adtech-top_300x=
250, #block-advert-content, #block-advert-content2, #block-advertisement, #=
block-advertorial, #block-appnexus-x20-oas-ad, #block-appnexus-x70-oas-ad-3=
00x100, #block-bean-artadocean-splitter, #block-bean-artadocean-text-link-1=
, #block-bean-artadocean-text-link-2, #block-bean-artadocean300x250-1, #blo=
ck-bean-artadocean300x250-3, #block-bean-artadocean300x250-6, #block-bean-i=
n-content-ad, #block-boxes-taboola, #block-br-hhog-module-br-hhog-ad-billbo=
ard-front, #block-dart-dart-tag-ad_top_728x90, #block-dart-dart-tag-gfc-ad-=
top-2, #block-dctv-ad-banners-wrapper, #block-dfp-billboard-leaderboard, #b=
lock-dfp-mpu-1, #block-dfp-mpu-2, #block-dfp-mpu-3, #block-dfp-skyscraper_l=
eft_1, #block-dfp-skyscraper_left_2, #block-dfp-top, #block-dfptag-leaderbo=
ard-btf, #block-dfptag-rail-pos-1, #block-dfptag-rail-pos-2, #block-dfptag-=
rail-pos-3, #block-dfptag-rail-pos-4, #block-display-ads-leaderboard, #bloc=
k-ex_dart-ex_dart_adblade_article, #block-ex_dart-ex_dart_sidebar_ad_block_=
bottom, #block-ex_dart-ex_dart_sidebar_ad_block_top, #block-fan-ad-fan-ad-f=
ront-leaderboard-bottom, #block-fan-ad-fan-ad-front-medrec-top, #block-fcc-=
advertising-first-sidebar-ad, #block-gavias-vinor-advrightheader, #block-go=
ogle-ads, #block-ibtimestv-player-companion-ad, #block-localcom-localcom-ad=
s, #block-ltadvertising-ltadvertising, #block-nst-googledfp-site-takeover, =
#block-openads-0, #block-openads-1, #block-openads-13, #block-openads-14, #=
block-openads-2, #block-openads-3, #block-openads-4, #block-openads-5, #blo=
ck-openads-brand, #block-panels-mini-top-ads, #block-sidebarad1, #block-spo=
nsors, #block-spti_ga-spti_ga_adwords, #block-thewrap_ads_250x300-0, #block=
-thewrap_ads_250x300-1, #block-thewrap_ads_250x300-2, #block-thewrap_ads_25=
0x300-3, #block-thewrap_ads_250x300-4, #block-thewrap_ads_250x300-5, #block=
-thewrap_ads_250x300-6, #block-thewrap_ads_250x300-7, #block-views-Advertor=
ial-block_5, #block-views-Advertorial-block_6, #block-views-Advertorial-blo=
ck_7, #block-views-ad-directory-block, #block-views-ads-header-0-block-bloc=
k, #block-views-ads-header-top-block-block, #block-views-ads-sidebar-block-=
block, #block-views-ads-under-the-slider-block, #block-views-advertisement-=
block_1, #block-views-advertisements-block, #block-views-advt-story-bottom-=
block, #block-views-block-detail-page-ads-block-3, #block-views-custom-adve=
rtisement-2-block--2, #block-views-custom-advertisement-block--2 { display:=
 none !important; color: rgb(92, 46, 103) !important; background-color: rgb=
(121, 237, 178) !important; }

#block-views-premium-ad-slideshow-block, #block-views-sidebar-ad, #block-vi=
ews-sponsor-block, #blockAd, #blockAds, #block_ad, #block_ad2, #block_ad_co=
ntainer, #block_advert, #block_advert1, #block_advert2, #block_advertisemen=
t, #block_timeout_sponsored_0, #blog-ad, #blog-advert, #blog-header-ad, #bl=
ogImgSponsor, #blog_ad_area, #blog_ad_content, #blog_ad_opa, #blog_ad_right=
, #blog_ad_top, #blogad, #blogad-wrapper, #blogad_728x90_header, #blogad_ri=
ght_728x91_bottom, #blogad_top_300x250_sidebar, #blogads, #blogads_most_rig=
ht_ad, #blox-big-ad, #blox-big-ad-bottom, #blox-big-ad-top, #blox-halfpage-=
ad, #blox-tile-ad, #blox-tower-ad, #bn_ad, #bnr-300x250, #bnr-468x60, #bnr-=
728x90, #bnrAd, #bnrhd468, #body-ads, #bodyAd1, #bodyAd2, #bodyAd3, #bodyAd=
4, #body_728_ad, #bodymainAd, #bonus-offers-advertisement, #book-ad, #bookm=
arkListDeckAdPlaceholder, #boss_banner_ad-2, #boss_banner_ad-3, #bot_ad, #b=
ot_ads, #botad, #botads2, #bott_ad2, #bott_ad2_300, #bottom-728-ad, #bottom=
-ad, #bottom-ad-1, #bottom-ad-banner, #bottom-ad-container, #bottom-ad-lead=
erboard, #bottom-ad-tray, #bottom-ad-wrapper, #bottom-add, #bottom-ads, #bo=
ttom-ads-container, #bottom-adspot, #bottom-advertising, #bottom-article-ad=
-336x280, #bottom-banner-spc, #bottom-boxad, #bottom-pinned-ad, #bottom-sid=
e-ad, #bottom-sponsor-add, #bottomAd300, #bottomAdBlcok, #bottomAdCCBucket,=
 #bottomAdContainer, #bottomAdSection, #bottomAdSense, #bottomAdSenseDiv, #=
bottomAdWrapper, #bottomAdvBox, #bottomAdvertTab, #bottomBannerAd, #bottomC=
ontentAd, #bottomDDAd, #bottomFullAd, #bottomGoogleAds, #bottomLeftAd, #bot=
tomMPU, #bottomRightAd, #bottomRightAdContainer, #bottomRightAdSpace, #bott=
omRightPanelAdContainer, #bottomSponsorAd, #bottom_ad_area, #bottom_ad_box,=
 #bottom_ad_container, #bottom_ad_left, #bottom_ad_region, #bottom_ad_right=
, #bottom_ad_unit, #bottom_ad_wrapper, #bottom_adbox, #bottom_ads, #bottom_=
ads_container, #bottom_advert_container, #bottom_adwrapper, #bottom_banner_=
ad, #bottom_ex_ad_holder, #bottom_leader_ad, #bottom_overture, #bottom_play=
er_adv, #bottom_sponsor_ads, #bottom_sponsored_links, #bottom_text_ad, #bot=
tomad, #bottomad300, #bottomad_table, #bottomadbanner, #bottomadbar, #botto=
madholder, #bottomads, #bottomadsdiv, #bottomadsense, #bottomadvert, #botto=
madwrapper, #bottomcontentads, #bottomleaderboardad, #bottommpuAdvert, #bot=
tommpuSlot, #bottomsponad, #bottomsponsoredresults, #box-ad, #box-ad-sectio=
n, #box-ad-sidebar, #box-ads-small-1, #box-ads-small-2, #box-ads-tr, #box-a=
ds-x600, #box-ads300-picture-detail, #box-adv-rn_u, #box-content-ad, #box-g=
oogleadsense-1, #box-googleadsense-r, #box1ad, #box2ad, #boxAD, #boxAd, #bo=
xAd300, #boxAdContainer, #boxAdvert, #boxLightImageGalleryAd, #box_ad, #box=
_ad_container, #box_ad_middle, #box_ads, #box_advertisement, #box_advertisi=
ng_info, #box_advertisment, #box_articlead, #box_mod_googleadsense, #box_te=
xt_ads, #boxad, #boxad1, #boxad2, #boxad3, #boxad4, #boxad5, #boxads, #boxe=
s-box-ad300x250set2, #boxes-box-ad300x250set2block, #boxes-box-ad_300x250_1=
, #boxes-box-ad_728x90_1, #boxes-box-ad_mpu, #boxes-box-zergnet_module, #bo=
xtube-ad, #bpAd, #bps-header-ad-container, #bq_homeMiddleAd, #br_ad, #brand=
-box-ad, #brand-box-ad-1-container, #branding_ad_comment, #branding_ad_head=
er, #branding_click, #browse-ad-container, #browse_ads_ego_container, #brow=
sead, #bsaadvert, #bsap_aplink, #btfAdNew, #btm_ads, #btmad, #btmsponsoredc=
ontent, #btn-sponsored-features, #btnAds, #btnads, #btr_horiz_ad, #budget_a=
dDiv, #burn_header_ad, #bus-center-ad, #button-ads, #button-ads-horizontal,=
 #button-ads-vertical, #buttonAdWrapper1, #buttonAdWrapper2, #buttonAds, #b=
uttonAdsContainer, #button_ad_container, #button_ad_wrap, #button_ads, #but=
tonad-widget-3, #buttonad-widget-4, #buy-sell-ads, #buySellAds, #buysellads=
, #buysellads-4x1, #c-adzone, #c4_ad, #c4ad-Middle1, #c4ad-Top-parent, #c_a=
d_sb, #c_ad_sky, #c_sponsoredSquare, #c_upperad, #c_upperad_c, #c_wdt_ads_2=
, #caAdLarger, #carbonads-container, #card-ads-top, #catad, #catalyst-125-a=
ds, #catalyst-ads-2, #category-ad, #category-sponsor, #category_sponsorship=
_ad, #cb-ad, #cb_medrect1_div, #cbs-video-ad-overlay, #cbz-ads-text-link, #=
cbz-comm-advert-1, #cellAd, #center-ad, #center-ad-group, #center-ads-72980=
, #center-three-ad, #centerAdsHeadlines, #centerBelowExtraSponsoredLinks, #=
center_ad-0, #center_col > #_Emc, #center_col > #main > .dfrd > .mnr-c > .c=
._oc._zs, #center_col > #res > #topstuff + #search > div > #ires > #rso > #=
flun, #center_col > #resultStats + #tads, #center_col > #resultStats + #tad=
s + #res + #tads, #center_col > #resultStats + div + #res + #tads, #center_=
col > #resultStats + div[style=3D"border:1px solid #dedede;margin-bottom:11=
px;padding:5px 7px 5px 6px"], #center_col > #taw > #tvcap > .rscontainer, #=
center_col > div[style=3D"font-size:14px;margin-right:0;min-height:5px"] > =
div[style=3D"font-size:14px;margin:0 4px;padding:1px 5px;background:#fff8e7=
"], #central-ads, #cgp-bigbox-ad, #ch-ads, #channel-ads-300-box, #channel-a=
ds-300x600-box, #channel_ad, #channel_ads, #chartAdWrap, #charts_adv, #chat=
Adv2, #chatad, #cherry_ads, #chitikaAdBlock, #ciHomeRHSAdslot, #circ_ad, #c=
irc_ad_300x100, #circ_ad_620x100, #circ_ad_holder, #circad_wrapper, #city_H=
ouse_Ad_300x137, #clickforad, #cliczone-advert-left, #cliczone-advert-right=
, #clientAds, #closeAdsDiv, #closeable-ad, #cltAd, #cmMediaRotatorAdTLConta=
iner, #cmn_ad_box, #cmn_toolbar_ad, #cms_ad_leaderboard, #cms_ad_masterslot=
, #cms_ad_skyscraper, #cnhi_premium_ads, #cnnAboveFoldBelowAd, #cnnBottomAd=
, #cnnCMAd, #cnnRR336ad, #cnnSponsoredPods, #cnnTopAd, #cnnTowerAd, #cnnVPA=
d, #cnn_cnn_adtag-3, #cnt #center_col > #res > #topstuff > .ts, #cnt #cente=
r_col > #taw > #tvcap > .c._oc._Lp, #coAd, #cobalt-ad-1-container, #coda_ad=
_728x90_9, #cokeAd, #col-right-ad, #col3_advertising, #colAd, #colRightAd, =
#collapseobj_adsection, #college_special_ad, #column-ads-bg, #column2-145x1=
45-ad, #column4-google-ads, #columnAd, #columnTwoAdContainer, #column_adver=
ts, #column_extras_ad, #commentAdWrapper, #commentTopAd, #comment_ad_zone, =
#comments-ad-container, #comments-ads, #comments_advert, #commercial-textli=
nks, #commercial_ads, #commercial_ads_footer, #common_right_ad_wrapper, #co=
mmon_right_adspace, #common_right_lower_ad_wrapper, #common_right_lower_ads=
pace, #common_right_lower_player_ad_wrapper, #common_right_lower_player_ads=
pace, #common_right_player_ad_wrapper, #common_right_player_adspace, #commo=
n_right_right_adspace, #common_top_adspace, #community_ads, #compAdvertisem=
ent, #comp_AdsLeaderboardBottom, #comp_AdsLeaderboardTop, #companion-ad, #c=
ompanionAd, #companionAdDiv, #companion_Ad, #companionad, #componentAdRecta=
ngle, #componentAdSkyscraper, #conduitAdPopupWrapper, #container-ad, #conta=
iner-ad-content-rectangle, #container-ad-topright, #container-advMoreAbout,=
 #container-polo-ad, #container-righttopads, #container-topleftads, #contai=
nerAds980, #containerLocalAds, #containerLocalAdsInner, #containerMrecAd, #=
containerSqAd, #container_ad, #container_top_ad, #contener_pginfopop1, #con=
tent > #center > .dose > .dosesingle, #content > #right > .dose > .dosesing=
le, #content-ad, #content-ad-header, #content-ad-side, #content-ads, #conte=
nt-adver, #content-advertising-header, #content-advertising-right, #content=
-adwrapper, #content-area-ad, #content-columns-post-ad-bottom, #content-col=
umns-post-ad-top, #content-left-ad, #content-right-ad, #contentAdBottomRigh=
t, #contentAdHalfpage, #contentAdSense, #contentAdTwo, #contentAds, #conten=
tAds300x200, #contentAds300x250, #contentAds667x100, #contentAdsCatArchive,=
 #contentBottomAdLeaderboard, #contentBoxad, #contentFooterAD, #contentMain=
_sponsoredResultsPanel, #contentTopAds2, #content_0_storyarticlepage_main_0=
_pnlAdSlot, #content_0_storyarticlepage_main_0_pnlAdSlotInner, #content_0_s=
toryarticlepage_sidebar_0_pnlAdSlot, #content_0_storyarticlepage_sidebar_11=
_pnlAdSlot, #content_0_storyarticlepage_sidebar_6_pnlAdSlot, #content_11_pn=
lAdSlot, #content_11_pnlAdSlotInner, #content_16_pnlAdSlot, #content_16_pnl=
AdSlotInner, #content_2_pnlAdSlot, #content_2_pnlAdSlotInner, #content_3_tw=
ocolumnrightfocus_right_bottomright_0_pnlAdSlot, #content_3_twocolumnrightf=
ocus_right_bottomright_1_pnlAdSlot, #content_4_threecolumnallfocus_right_0_=
pnlAdSlot, #content_7_pnlAdSlot, #content_7_pnlAdSlotInner, #content_9_twoc=
olumnleftfocus_b_right_1_pnlAdSlot, #content_Ad, #content_ad, #content_ad_1=
, #content_ad_2, #content_ad_block, #content_ad_container, #content_ad_plac=
eholder, #content_ad_square, #content_ad_top, #content_ads_content, #conten=
t_ads_footer, #content_bottom_ad, #content_bottom_ads, #content_box_300body=
_sponsoredoffers, #content_box_adright300_google, #content_lower_center_rig=
ht_ad, #content_mpu, #content_right_ad, #content_right_advert, #content_rig=
ht_area_ads, #content_right_side_advertisement_on_top_wrapper, #contentad-a=
dsense-getfile-1, #contentad-adsense-getfile-top-1, #contentad-adsense-home=
page-1, #contentad-adsense-homepage-2, #contentad-commercial-1, #contentad-=
content-box-1, #contentad-footer-tfm-1, #contentad-last-medium-rectangle-1,=
 #contentad-lower-medium-rectangle-1, #contentad-sponsoredlinks-1, #content=
ad-story-bottom-1, #contentad-story-middle-1, #contentad-story-top-1, #cont=
entad-superbanner-1, #contentad-superbanner-2, #contentad-top-adsense-1, #c=
ontentad-topbanner-1, #contentad_imtext, #contentad_right, #contentad_urban=
, #contentads, #contentarea-ad, #contentarea-ad-widget-area, #contentinline=
Ad, #contents_post_ad, #contest-ads, #contextad, #contextual-ads, #contextu=
al-ads-block, #contextual-ads-bricklet, #contextual-dummy-ad, #contextualad=
, #corner_ad, #cornerad, #cosponsor, #cosponsorTab, #coverADS, #coverads, #=
cpad_242306, #cph_cph_tlda_pnlAd, #cpsmalladv, #criteoAd, #crowd-ignite, #c=
rowd-ignite-header, #csBotterAd, #csTopAd, #ct-ad-lb, #ctl00_AdPanel1, #ctl=
00_AdPanelISRect2, #ctl00_AdWords, #ctl00_Adspace_Top_Height, #ctl00_Bottom=
Ad, #ctl00_BottomAd2_AdArea, #ctl00_BottomAdPanel, #ctl00_ContentMain_BanMa=
nAd468_BanManAd, #ctl00_ContentPlaceHolder1_AdRotator3, #ctl00_ContentPlace=
Holder1_BannerAd_TABLE1, #ctl00_ContentPlaceHolder1_DrillDown1_trBannerAd, =
#ctl00_ContentPlaceHolder1_TextAd_Pulse360AdPanel, #ctl00_ContentPlaceHolde=
r1_ad12_adRotator_divAd, #ctl00_ContentPlaceHolder1_blockAdd_divAdvert, #ct=
l00_ContentPlaceHolder1_ctl00_ContentPlaceHolder1_pnlGoogleAdsPanel, #ctl00=
_ContentPlaceHolder1_ctl00_StoryContainer1_ImageHouseAd, #ctl00_ContentPlac=
eHolder1_toplead_news1_dvFlashAd, #ctl00_ContentPlaceHolder1_ucAdHomeRightF=
O_divAdvertisement, #ctl00_ContentPlaceHolder1_ucAdHomeRight_divAdvertiseme=
nt, #ctl00_ContentPlaceHolder_PageHeading_Special_divGoogleAd2, #ctl00_Cont=
entRightColumn_RightColumn_Ad1_BanManAd, #ctl00_ContentRightColumn_RightCol=
umn_Ad1_googlePublisherAd, #ctl00_ContentRightColumn_RightColumn_Ad2_BanMan=
Ad, #ctl00_ContentRightColumn_RightColumn_Ad2_googlePublisherAd, #ctl00_Con=
tentRightColumn_RightColumn_PremiumAd1_ucBanMan_BanManAd, #ctl00_Content_Sq=
uareAd_AdBox, #ctl00_Content_skyAd, #ctl00_Footer1_v5footerad, #ctl00_Foote=
rHome1_AdFooter1_AdRotatorFooter, #ctl00_GoogleAd1, #ctl00_GoogleAd3, #ctl0=
0_GoogleSkyscraper, #ctl00_Header1_AdHeader1_LabelHeaderScript, #ctl00_Hype=
rLinkHouseAd, #ctl00_ImageHouseAd, #ctl00_LHTowerAd, #ctl00_LeftHandAd, #ct=
l00_MainContent_adDiv1, #ctl00_MainContent_adDiv2, #ctl00_MasterHolder_IBan=
ner_adHolder, #ctl00_RightBanner_AdvertisementText, #ctl00_SiteHeader1_TopA=
d1_AdArea, #ctl00_TopAd, #ctl00_TowerAd, #ctl00_VBanner_adHolder, #ctl00__C=
ontent__RepeaterReplies_ctl03__AdReply, #ctl00_adCar, #ctl00_adFooter, #ctl=
00_advert_LargeMPU_div_AdPlaceHolder, #ctl00_advert_WideSky_Right_divOther,=
 #ctl00_bottom_advert_728x90, #ctl00_cphMainContent_lblPartnerAds, #ctl00_c=
phMain_adView_dlAds_ctl01_advert_AboveAds_divOther, #ctl00_cphMain_hlAd1, #=
ctl00_cphMain_hlAd2, #ctl00_cphMain_hlAd3, #ctl00_cphMain_phMain_ctl00_ctl0=
3_ctl00_topAd, #ctl00_cphRoblox_boxAdPanel, #ctl00_ctl00_MainPlaceHolder_it=
vAdSkyscraper, #ctl00_ctl00_RightColumn1_ctl04_csc300x250Ad1, #ctl00_ctl00_=
RightColumn1_ctl04_pnlAdBlock300x250Ad1, #ctl00_ctl00_RightPanePlaceHolder_=
pnlAdv, #ctl00_ctl00_ctl00_Main_Main_PlaceHolderGoogleTopBanner_MPTopBanner=
Ad, #ctl00_ctl00_ctl00_Main_Main_SideBar_MPSideAd, #ctl00_ctl00_ctl00_divAd=
sTop, #ctl00_ctl00_ctl00_tableAdsTop, #ctl00_ctl00_ctl00_tdBannerAd, #ctl00=
_ctl00_pnlAdBottom, #ctl00_ctl00_pnlAdTop, #ctl00_ctl01_ctl00_tdBannerAd, #=
ctl00_ctl05_ctl00_tableAdsTop, #ctl00_ctl05_ctl00_tdBannerAd, #ctl00_ctl08_=
ctl00_tableAdsTop, #ctl00_ctl11_AdvertisementText, #ctl00_ctrlAdvert6_ifram=
eAdvert, #ctl00_ctrlAdvert7_iframeAdvert, #ctl00_ctrlAdvert8_iframeAdvert, =
#ctl00_divAdSuper, #ctl00_dlTilesAds, #ctl00_fc_ctl02_AdControl, #ctl00_fc_=
ctl03_AdControl, #ctl00_fc_ctl04_AdControl, #ctl00_fc_ctl06_AdControl, #ctl=
00_headerAdd, #ctl00_leaderboardAdvertContainer, #ctl00_m_skinTracker_m_adL=
BL, #ctl00_mainContent_lblSponsor, #ctl00_phContents_ctlNewsPanel_rptMainCo=
lumn_ctl02_ctlLigatusAds_pnlContainer, #ctl00_phContents_ctlNewsPanel_rptMa=
inColumn_ctl02_pnlLigatusAds, #ctl00_phCrackerMain_ucAffiliateAdvertDisplay=
Middle_pnlAffiliateAdvert, #ctl00_phCrackerMain_ucAffiliateAdvertDisplayRig=
ht_pnlAffiliateAdvert, #ctl00_pnlAdTop, #ctl00_siteHeader_bannerAd, #ctl00_=
skyscraperAdvertContainer, #ctl00_tc_ctl03_AdControl, #ctl00_tc_ctl04_AdCon=
trol, #ctl00_tc_ctl05_AdControl, #ctl00_tc_ctl06_AdControl, #ctl00_tc_ctl14=
_AdControl, #ctl00_tc_ctl15_AdControl, #ctl00_tc_ctl16_AdControl, #ctl00_tc=
_ctl18_AdControl, #ctl00_tc_ctl19_AdControl, #ctl00_topAd, #ctl00_ucAffilia=
teAdvertDisplay_pnlAffiliateAdvert, #ctl00_ucFooter_ucFooterBanner_divAdver=
tisement, #ctl08_ad1, #ctl_bottom_ad, #ctl_bottom_ad1, #ctr-ad, #ctr_adtech=
2, #ctr_adtech_mpu_bot, #ctr_adtech_mpu_top, #ctrlsponsored, #ctx_listing_a=
ds, #ctx_listing_ads2, #cubeAd, #cube_ad, #cube_ads, #cube_ads_inner, #cube=
ad, #cubead-2, #cubead2, #currencies-sponsored-by, #custom-advert-leadboard=
-spacer, #custom-small-ad, #customAd, #cxnAdrail, #cyberinfrm_18, #d-adCont=
543x90, #d-adCont728x90Inner, #d4_ad_google02, #dAdverts, #dItemBox_ads, #d=
_AdLink, #dap300x250, #dart-300x250, #dart_160x600, #dart_300x250, #dart_ad=
_block, #dart_ad_island, #dartad11, #dartad13, #dartad16, #dartad17, #darta=
d19, #dartad25, #dartad28, #dartad8, #dartad9, #db_ad, #dc-display-right-ad=
-1, #dc_ad_data_1, #dc_ad_data_2, #dc_ad_data_4, #dc_advertisement, #dcadSp=
ot-Leader, #dcadSpot-LeaderFooter, #dclinkad, #dcol-sponsored, #dcomad_728x=
90_0, #dcomad_ad_728x90_1, #dcomad_top_300x250_0, #dcomad_top_300x250_1, #d=
comad_top_300x251_2, #ddAd, #ddAdZone2, #defer-adright, #desktop-ad-btf, #d=
esktop-aside-ad-container, #desktop-atf_sidebar_sticky, #desktop-unrec-ad, =
#detail_page_vid_topads, #detectadblock, #devil-ad, #dfp-ad-1, #dfp-ad-2, #=
dfp-ad-billboard_leaderboard, #dfp-ad-billboard_leaderboard-wrapper, #dfp-a=
d-boombox, #dfp-ad-boombox-wrapper, #dfp-ad-boombox_2, #dfp-ad-boombox_2-wr=
apper, #dfp-ad-boombox_3, #dfp-ad-boombox_3-wrapper, #dfp-ad-boombox_4, #df=
p-ad-boombox_4-wrapper, #dfp-ad-boombox_5, #dfp-ad-boombox_5-wrapper, #dfp-=
ad-clone_of_sidebar_top, #dfp-ad-content_1-wrapper, #dfp-ad-content_2-wrapp=
er, #dfp-ad-content_3-wrapper, #dfp-ad-content_4-wrapper, #dfp-ad-dfp_ad_at=
f_728x90, #dfp-ad-dfp_ad_atf_728x90-wrapper, #dfp-ad-floating, #dfp-ad-fm_3=
00x250-wrapper, #dfp-ad-half_page-wrapper, #dfp-ad-half_page_sidebar-wrappe=
r, #dfp-ad-home_1-wrapper, #dfp-ad-home_2-wrapper, #dfp-ad-home_3-wrapper, =
#dfp-ad-homepage_300x250-wrapper, #dfp-ad-homepage_728x90, #dfp-ad-homepage=
_728x90-wrapper, #dfp-ad-kids_300x250-wrapper, #dfp-ad-large_rectangle, #df=
p-ad-large_rectangle-wrapper, #dfp-ad-leaderboard, #dfp-ad-leaderboard-wrap=
per, #dfp-ad-local_300x250-wrapper, #dfp-ad-medium_rectangle, #dfp-ad-mediu=
mrect-wrapper, #dfp-ad-mediumrectangle-wrapper, #dfp-ad-mediumrectangle2-wr=
apper, #dfp-ad-mosad_1, #dfp-ad-mosad_1-wrapper, #dfp-ad-mpu1, #dfp-ad-mpu2=
, #dfp-ad-mpu_1, #dfp-ad-mpu_1-wrapper, #dfp-ad-mpu_2, #dfp-ad-mpu_2-wrappe=
r, #dfp-ad-mpu_3, #dfp-ad-mpu_3-wrapper, #dfp-ad-ne_carousel_300x250, #dfp-=
ad-ne_carousel_300x250-wrapper, #dfp-ad-ne_column3a_300x250, #dfp-ad-ne_col=
umn3a_300x250-wrapper, #dfp-ad-ne_news2_468x60, #dfp-ad-ne_news2_468x60-wra=
pper, #dfp-ad-pencil_pushdown, #dfp-ad-pencil_pushdown-wrapper, #dfp-ad-rig=
ht1, #dfp-ad-right2, #dfp-ad-right3, #dfp-ad-schedule_300x250-wrapper, #dfp=
-ad-slot2, #dfp-ad-slot3, #dfp-ad-slot3-wrapper, #dfp-ad-slot4-wrapper, #df=
p-ad-slot5, #dfp-ad-slot5-wrapper, #dfp-ad-slot6, #dfp-ad-slot6-wrapper, #d=
fp-ad-slot7, #dfp-ad-slot7-wrapper, #dfp-ad-stamp_1, #dfp-ad-stamp_1-wrappe=
r, #dfp-ad-stamp_2, #dfp-ad-stamp_2-wrapper, #dfp-ad-stamp_3, #dfp-ad-stamp=
_3-wrapper, #dfp-ad-stamp_4, #dfp-ad-stamp_4-wrapper, #dfp-ad-top, #dfp-ad-=
tower_1, #dfp-ad-tower_1-wrapper, #dfp-ad-tower_2, #dfp-ad-tower_2-wrapper,=
 #dfp-ad-tower_half_page, #dfp-ad-tower_half_page-wrapper, #dfp-ad-tv_300x2=
50-wrapper, #dfp-ad-wallpaper, #dfp-ad-wallpaper-wrapper, #dfp-article-mpu,=
 #dfp-article-related-mpu, #dfp-global_top, #dfp-home_after-headline_leader=
board, #dfp-middle, #dfp-middle1, #dfp-srp-leaderboard, #dfp-srp-mobile-top=
, #dfp-tlb, #dfp-wallpaper-wrapper, #dfpAd, #dfp_ad_1, #dfp_ad_16, #dfp_ad_=
2, #dfp_ad_20, #dfp_ad_21, #dfp_ad_3, #dfp_ad_7, #dfp_ad_DictHome_300x250, =
#dfp_ad_DictHome_728x90, #dfp_ad_Entry_160x600, #dfp_ad_Entry_180x150, #dfp=
_ad_Entry_300x250, #dfp_ad_Entry_Btm_300x250, #dfp_ad_Entry_EntrySetA_300x2=
50, #dfp_ad_Entry_EntrySetA_728x90, #dfp_ad_Entry_EntrySetB_300x250, #dfp_a=
d_Entry_EntrySetB_728x90, #dfp_ad_Entry_EntrySetC_728x90, #dfp_ad_Home_300x=
250, #dfp_ad_Home_Btm_300x250, #dfp_ad_IC_728x90, #dfp_ad_InternalAdX_300x2=
50_right, #dfp_ad_Internal_EntryBr_300x250, #dfp_ad_Internal_Home_250x262, =
#dfp_ad_Result_728x90, #dfp_ad_SecContent_300x250, #dfp_ad_Thesaurus_728x90=
, #dfp_ad_mpu, #dfp_container, #dfp_unit_Desktop_MPU_BTF_1, #dfp_unit_Deskt=
op_MPU_BTF_2, #dfpad-0, #dfrads-widget-6, #dfrads-widget-7, #dhm-bar, #dict=
-adv, #direct-ad, #disable-ads-container, #displayAd, #displayAdSet, #displ=
ay_ad, #display_ads_footer, #display_ads_footer_last, #displayad_bottom-pag=
e, #div-ad-1x1, #div-ad-1x1_3, #div-ad-2, #div-ad-bottom, #div-ad-coupon_1,=
 #div-ad-coupon_10, #div-ad-coupon_11, #div-ad-coupon_12, #div-ad-coupon_2,=
 #div-ad-coupon_3, #div-ad-coupon_4, #div-ad-coupon_5, #div-ad-coupon_6, #d=
iv-ad-coupon_7, #div-ad-coupon_8, #div-ad-coupon_9, #div-ad-flex, #div-ad-i=
nread, #div-ad-leaderboard, #div-ad-r, #div-ad-r1, #div-ad-top, #div-adcent=
er1, #div-adcenter2, #div-adid-4000, #div-dfp-BelowContnet, #div-dfp-bottom=
_leaderboard, #div-gpt-ad-lr-cube1, #div-gpt-ad-mrec-5, #div-gpt-ad-spotlig=
ht, #div-gpt-ad-top_banner, #div-id-for-interstitial-ad, #div-insticator-ad=
-1, #div-insticator-ad-2, #div-social-ads, #div-vip-ad-banner, #div-web-ad-=
billboard, #div-web-ad-content-article, #div-web-ad-content-ressort, #div-w=
eb-ad-marginale-1, #div-web-ad-marginale-2, #div-web-ad-marginale-3, #div-w=
eb-ad-marginale-4, #div-web-ad-marginale-5, #div-web-ad-performance, #divAd=
Box, #divAdDetail, #divAdHere, #divAdHorizontal, #divAdLeft, #divAdMain, #d=
ivAdRight, #divAdSpecial, #divAdWrapper, #divAdd728x90, #divAdd_Right, #div=
Add_Top, #divAds, #divAdsTop, #divAdv300x250, #divAdvertisement, #divAdvert=
isingSection, #divArticleInnerAd, #divBannerSlider, #divBannerTopAds, #divB=
ottomad1, #divBottomad2, #divDoubleAd, #divFoldersAd, #divFooterAd, #divFoo=
terAds, #divLeftAd12, #divLeftRecAd, #divMenuAds, #divReklamaTop, #divRight=
NavAdsLoader, #divSponAds + *, #divSponsoredLinks, #divTopAd, #divTopAds, #=
divWNAdHeader, #divWNAdUnitLanding, #divWrapper_Ad, #div_ad_TopRight, #div_=
ad_float, #div_ad_holder, #div_ad_leaderboard, #div_content_mid_lft_ads, #d=
iv_googlead, #div_header_sponsors, #div_side_big_ad, #div_video_ads, #divad=
float, #divadsensex, #divmiddlerightad, #divuppercenterad, #divupperrightad=
, #dlads, #dni-advertising-skyscraper-wrapper, #dni-header-ad, #dnn_AdBanne=
rPane, #dnn_Advertisement, #dnn_adSky, #dnn_adTop, #dnn_ad_banner, #dnn_ad_=
island1, #dnn_ad_skyscraper, #dnn_ad_sponsored_links, #dnn_banner_120x600, =
#dnn_banner_486x60, #dnn_ctl00_Ad2Pane, #dnn_dnn_dartBanner, #dnn_googleAds=
ense_a, #dnn_playerAd, #dnn_sponsoredLinks, #docmainad, #dogear_promo, #dot=
nAd_300x250_c20, #double-card-ad, #double-inline-ads, #doubleClickAds3, #do=
ubleClickAds_bottom_big_box, #doubleClickAds_bottom_skyscraper, #doubleClic=
kAds_top_banner, #doubleclick-dfp, #doubleclick-island, #download-leaderboa=
rd-ad-bottom, #download-leaderboard-ad-top, #downloadAd, #download_ad-box, =
#download_ads, #download_slide_ad, #dp_ad_1, #dp_ads1, #ds-mpu, #dsStoryAd,=
 #ds_ad_north_leaderboard, #dvAd1Data, #dvAd1main, #dvAd2Center, #dvAd5Data=
, #dvAd5Main, #dvAdHead, #dvCenterAd, #dvad2, #dvad2main, #dvad5, #dvad6cnt=
nr, #dvad6main, #dvadfirst, #dvadfirstmain, #dvadscnd, #dvadsecondmain, #dv=
smladlft, #dvsmladrgt, #dynamicAdDiv, #dynamicAdWinDiv, #ear_ad, #eastAds, =
#ebsponsoredads, #editorsmpu, #elections-ad-container, #elite-ads, #em_ad_s=
uperbanner, #embedAD, #embedADS, #embed__pre[style^=3D"width: 612px; height=
: 300px;"], #embedded-ad, #embeded_ad_content_container, #entrylist_ad, #ep=
mads-holder, #ero_fade_banner, #eropromo_icq, #eshopad-728x90, #eventAd, #e=
vent_ads, #events-adv-side1, #events-adv-side2, #events-adv-side3, #events-=
adv-side4, #events-adv-side5, #events-adv-side6, #evotopTen_advert, #ex-lig=
atus, #ex_dart--ex_dart_header_ad, #exads, #exoAd, #expandableAd, #expandab=
le_welcome_ad, #expanderadblock, #export_test_inboobs, #external-floater-ad=
-wrap, #external-links-column-ad { display: none !important; color: rgb(92,=
 46, 103) !important; background-color: rgb(121, 237, 178) !important; }

#externalAd, #extra-search-ads, #extraAd, #extraAdsBlock, #ezadswidget-2, #=
ezmob_footer, #f2p-ad-cnt, #f_ad, #f_adsky, #facebook-ad, #fav-advert, #fav=
-advertwrap, #fb_adbox, #fb_rightadpanel, #fearless_responsive_image_ad-2, =
#featAds, #featureAd, #featureAdSpace, #featureAds, #feature_ad, #feature_a=
dlinks, #featured-ad-left, #featured-ad-right, #featured-advertisements, #f=
eaturedAdContainer2, #featuredAdWidget, #featuredSponsors, #featured_ad_lin=
ks, #featured_ad_widget_area, #featured_sponsor_cnt, #feedjiti-footerTR, #f=
fsponsors, #file_sponsored_link, #fin_ad_728x90_bottom, #fin_advertorial_fe=
atures, #fin_dc_ad_300x100_pos_1, #fin_ds_homepage_adtag_468x60, #first-300=
-ad, #first-adframe, #first-adlayer, #firstAdUnit, #first_ad, #first_ad_uni=
t, #firstad, #fixed-mob-ad, #fixedAd, #flAdData6, #fl_hdrAd, #flash_ads_1, =
#flashad, #flex_sponsored_links, #flexiad, #flipbookAd, #floatAD_l, #floatA=
D_r, #floatAd-left, #floatAd-right, #floatAdv, #floatads, #floating-ad-spac=
er, #floating-ads, #floating-advert, #floatingAd, #floatingAdContainer, #fl=
oatingAds, #floating_ad, #floating_ad_container, #floatyContent, #flowplaye=
r > div[style=3D"position: absolute; width: 300px; height: 275px; left: 222=
.5px; top: 85px; z-index: 999;"], #flowplayer > div[style=3D"z-index: 208; =
position: absolute; width: 300px; height: 275px; left: 222.5px; top: 85px;"=
], #flyingBottomAd, #fnAdblockingOverlay, #foot-ad-1, #foot-add, #footAd, #=
footAdArea, #footAds, #footad, #footer-ad, #footer-ad-728, #footer-ad-block=
, #footer-ad-box, #footer-ad-col, #footer-ad-google, #footer-ad-large, #foo=
ter-ad-loader, #footer-ad-shadow, #footer-ad-unit, #footer-ad-wrapper, #foo=
ter-adspace, #footer-adv, #footer-advert, #footer-advert-area, #footer-adve=
rtisement, #footer-adverts, #footer-adwrapper, #footer-affl, #footer-banner=
-ad, #footer-im-ad, #footer-leaderboard-ad, #footer-sponsored, #footerAd, #=
footerAdBg, #footerAdBottom, #footerAdBox, #footerAdDiv, #footerAdLink, #fo=
oterAdSpecial, #footerAdd, #footerAds, #footerAdsPlacement, #footerAdvert, =
#footerAdvertisement, #footerAdverts, #footerGoogleAd, #footer_AdArea, #foo=
ter_ad_01, #footer_ad_block, #footer_ad_cloud, #footer_ad_container, #foote=
r_ad_frame, #footer_ad_holder, #footer_ad_inventory, #footer_ad_modules, #f=
ooter_adcode, #footer_add, #footer_addvertise, #footer_ads_holder, #footer_=
adsense_ad, #footer_adspace, #footer_adv, #footer_advertising, #footer_lead=
erboard_ad, #footer_text_ad, #footerad, #footerad728, #footerads, #footerad=
sbox, #footeradvert, #form_bottomad, #forum_top_ad, #forumlist-ad, #four_ad=
s, #fp_adv, #fp_banner, #fp_rh_ad, #fpad1, #fpad2, #fpv_companionad, #fr_ad=
_center, #fr_adtop, #frameAd, #frameTextAd2, #frame_admain, #free_ad, #frmR=
ightnavAd, #frnAdSky, #frnBannerAd, #frnContentAd, #front-ad-cont, #front-p=
age-advert, #frontPageAd, #front_ad728, #front_adtop_content, #front_advert=
, #front_mpu, #front_mpu_content, #frontlowerad, #frontpage_ad1, #frontpage=
_ad2, #ft-ad, #ft-ad-1, #ft-ad-container, #ft-ads, #ft_mpu, #ftad1, #ftad2,=
 #full_banner_ad, #fulldown_ads_box, #fulldown_ads_frame, #fullsizebanner_4=
68x60, #fullstory-google-textad, #fusionad, #fw-advertisement, #fwAdBox, #g=
-adblock2, #gAds, #gBnrAd, #gBottomRightAd, #g_ad, #g_ads_left_top_banner_a=
ds, #g_ads_right_top_banner_ads, #g_adsense, #ga_300x250, #gad300x250, #gad=
728x90, #gads-pub, #gads300x250, #gads_middle, #galactic_sponsors_sidebar, =
#galleries-tower-ad, #gallery-ad, #gallery-ad-container, #gallery-ad-m0, #g=
allery-advert, #gallery-below-line-advert, #gallery-page-ad-bigbox, #galler=
y-random-ad, #gallery-sidebar-advert, #gallery-slideshow-interstitial-ad, #=
gallery_ad, #gallery_ads, #gallery_header_ad, #galleryad1, #game-info-ad, #=
gameAdMiddle, #gameAdTopMiddle, #gameSquareAd, #game_header_ad, #game_profi=
le_ad_300_250, #gamead, #gameads, #gamepage_ad, #gameplay_ad, #games-mpu-co=
ntainer, #games_ad_container, #gaminator, #gasense, #gbl_topmost_ad, #gcomm=
onad, #genad, #geoAd, #getUnderplayerIDAd, #gf-mrecs-ads, #gft-adChoicesCop=
y, #gg_ad, #ggl-ad, #gglads, #gglads213A, #gglads213B, #ggogle_AD, #girlsBa=
r, #gl_ad_300, #glamads, #glinkswrapper, #global-banner-ad, #globalHeader_d=
ivAd, #globalLeftNavAd, #globalTopNavAd, #global_header_ad, #global_header_=
ad_area, #gm-ad-lrec, #gmi-ResourcePageAd, #gmi-ResourcePageLowerAd, #gnadw=
w, #go-ads-double-2, #go-ads-double-3, #goad1, #goads, #gog_ad, #gold_spons=
ors_sidebar, #gooadtop, #google-ad, #google-ad-art, #google-ad-table-right,=
 #google-ad-tower, #google-ads, #google-ads-5, #google-ads-bottom, #google-=
ads-bottom-container, #google-ads-container, #google-ads-container1, #googl=
e-ads-header, #google-ads-left-side, #google-adsense, #google-adsense-for-c=
ontent, #google-adsense-mpusize, #google-adv-728x90, #google-adwords, #goog=
le-afc, #google-post-ad, #google-post-adbottom, #google-top-ads, #google336=
x280, #google468x60, #googleAd, #googleAdArea, #googleAdBottom, #googleAdBo=
x, #googleAdMid, #googleAdSenseAdRR, #googleAdTop, #googleAdView, #googleAd=
Yarrp, #googleAd_words, #googleAds, #googleAdsFrame, #googleAdsSml, #google=
Adsense, #googleAdsenseAdverts, #googleAdsenseBanner, #googleAdsenseBannerB=
log, #googleAdwordsModule, #googleAfcContainer, #googleSearchAds, #googleSh=
oppingAdsRight, #googleShoppingAdsTop, #googleSubAds, #googleTxtAD, #google=
_ad, #google_ad_468x60_contnr, #google_ad_EIRU_newsblock, #google_ad_below_=
stry, #google_ad_container, #google_ad_container_right_side_bar, #google_ad=
_inline, #google_ad_test, #google_ad_top, #google_ads, #google_ads_1, #goog=
le_ads_aCol, #google_ads_box, #google_ads_div_Blog_300, #google_ads_div_Fro=
nt-160x600, #google_ads_div_Raw_Override, #google_ads_div_Second_160, #goog=
le_ads_div_header1, #google_ads_div_header2, #google_ads_div_video_wallpape=
r_ad_container, #google_ads_frame, #google_ads_frame1_anchor, #google_ads_f=
rame2_anchor, #google_ads_frame3_anchor, #google_ads_frame4_anchor, #google=
_ads_frame5_anchor, #google_ads_frame6_anchor, #google_ads_frame_quad, #goo=
gle_ads_frame_vert, #google_ads_test, #google_ads_top, #google_ads_wide, #g=
oogle_adsense, #google_adsense_ad, #google_adsense_home_468x60_1, #google_t=
extlinks, #googlead-leaderboard, #googlead-left, #googlead-post-mpu, #googl=
ead-sidebar-middle, #googlead-sidebar-top, #googlead01, #googlead1, #google=
ad2, #googlead_outside, #googleadbig, #googleadds, #googleadleft, #googlead=
s, #googleads1, #googleads_h_injection, #googleads_mpu_injection, #googlead=
sense, #googleadsense300x250, #googleadsrc, #googleadstop, #googlebanner, #=
googleblock300, #googlesponsor, #googletextads, #googtxtad, #gpt-ad-1, #gpt=
-ad-halfpage, #gpt-ad-rectangle1, #gpt-ad-rectangle2, #gpt-ad-skyscraper, #=
gpt-ad-story_rectangle3, #gpt-adsene-article-bottom, #gpt-mpu, #gpt2_ads_wi=
dget-10, #gpt2_ads_widget-6, #gpt2_ads_widget-7, #gpt2_ads_widget-8, #gpt2_=
ads_widget-9, #gpt_ad_panorama_top, #gpt_ad_small_insider_1, #gpt_unit_vide=
oAdSlot1_0, #grdAds, #gridAdSidebarRight, #grid_ad, #grouponAdContainer, #g=
syadrectangleload, #gsyadrightload, #gsyadtop, #gsyadtopload, #gtAD, #gtopa=
dvts, #gtv_tabSponsor, #gwt-debug-ad, #h-ads, #hAd, #hAdv, #h_24x4, #h_ads0=
, #h_ads1, #half-page-ad, #halfPageAd, #halfe-page-ad-box, #hb-header-ad, #=
hcf-ad-wrapper, #hd-ads, #hd-banner-ad, #hd_ad, #hd_ad_wp, #hdr-ad, #hdr-ba=
nner-ad, #hdrAdBanner, #hdrAds, #hdtv_ad_ss, #head-ad-1, #head-ads, #head-a=
dvertisement, #head-banner468, #head1ad, #headAd, #headAds, #headAdv, #head=
GoogleAffiliateLinkblock, #head_ad, #head_ad0, #head_ad_area, #head_ads, #h=
ead_advert, #headad, #headadvert, #header + #content > #left > #rlblock_lef=
t, #header-ad, #header-ad-1, #header-ad-background, #header-ad-block, #head=
er-ad-bottom, #header-ad-container, #header-ad-holder, #header-ad-label, #h=
eader-ad-left, #header-ad-placeholder, #header-ad-rectangle-container, #hea=
der-ad-right, #header-ad-wrap, #header-ad-wrapper, #header-ad2, #header-ad2=
010, #header-ads-wrapper, #header-adsense, #header-adspace, #header-adv, #h=
eader-advert, #header-advert-panel, #header-advertisement, #header-advertis=
ing, #header-adverts, #header-advrt, #header-banner-728-90, #header-banner-=
ad, #header-banner-spc, #header-block-ads, #header-box-ads, #header-google,=
 #header-house-ad, #header-lb-ad, #header-leader-ad, #header-leader-ad-2, #=
header-menu-horizontal-ad-superbanner, #header-top-ads-text, #headerAdBackg=
round, #headerAdButton, #headerAdSpace, #headerAdUnit, #headerAdWrap, #head=
erAds, #headerAds4, #headerAdsWrapper, #headerAdv, #headerAdvert, #headerBa=
nnerAdNew, #headerNewAdsContainer, #headerNewAdsContainerB, #headerTopAd, #=
headerTopAdWide, #header_1_adv, #header_ad_167, #header_ad_728, #header_ad_=
728_90, #header_ad_banner, #header_ad_block, #header_ad_container, #header_=
ad_leaderboard, #header_ad_units, #header_ad_widget, #header_ad_wrap, #head=
er_adbox, #header_adcode, #header_ads, #header_ads2, #header_ads_2, #header=
_ads_p, #header_adsense, #header_adv, #header_advert, #header_advertisement=
, #header_advertisement_top, #header_advertising, #header_adverts, #header_=
bottom_ad, #header_flag_ad, #header_leaderboard_ad_container, #header_publi=
cidad, #header_right_ad, #header_sponsors, #header_top_ad, #headerad, #head=
eradbox, #headeradcontainer, #headerads, #headeradsbox, #headeradsense, #he=
aderadspace, #headeradvert1div, #headeradvertholder, #headeradwrap, #header=
googlead, #headerprimaryad, #headersponsors, #headingAd, #headline-sponsor,=
 #headline_ad, #headlinesAdBlock, #hi5-ad-1, #hidadvnet, #hiddenadAC, #hide=
_ad_section_v2, #hideads, #hideads1, #hl-sponsored-links, #hl-sponsored-res=
ults, #hl-top-ad, #hldhdAds, #hly_ad_side_bar_tower_left, #hly_inner_page_g=
oogle_ad, #hm_rht_adcontainer, #hmt-widget-ad-unit-3, #holder-storyad, #hol=
dunderad, #home-ad, #home-ad-block, #home-ad-slot, #home-adv-300x250, #home=
-advert-module, #home-advertise, #home-banner-ad, #home-delivery-ad, #home-=
left-ad, #home-page-listing-ad, #home-pgtop-adv, #home-rectangle-ad, #home-=
right-col-ad, #home-side-ad, #home-top-ads, #homeAd, #homeAdLeft, #homeAds,=
 #homeArticlesAd, #homeBottomAdWrapperInner, #homeMPU, #homePageBotAd, #hom=
eSideAd, #homeTopRightAd, #home_ad, #home_ad_sub_spotlight, #home_ads_top_h=
old, #home_ads_vert, #home_bottom_ad, #home_contentad, #home_feature_ad, #h=
ome_lower_center_right_ad, #home_mpu, #home_sec2_adverts, #home_sidebar_ad,=
 #home_spensoredlinks, #home_top_right_ad, #homegoogletextad, #homeheaderad=
, #homepage-ad, #homepage-adbar, #homepage-footer-ad, #homepage-header-ad, =
#homepage-right-rail-ad, #homepage-sidebar-ad, #homepage-sidebar-ads, #home=
pageAd, #homepageAdsTop, #homepageFooterAd, #homepageGoogleAds, #homepage__=
desktop-lead-ad-wrap, #homepage__lead-ad-slot, #homepage_ad, #homepage_ad_l=
isting, #homepage_middle_ads, #homepage_middle_ads_2, #homepage_middle_ads_=
3, #homepage_rectangle_ad, #homepage_right_ad, #homepage_right_ad_container=
, #homepage_top_ad, #homepage_top_ads, #homepagead_300x250, #homepageadvert=
, #homestream-advert3, #hometop_234x60ad, #hometopads, #horAd, #hor_ad, #ho=
radslot, #horizad, #horizads728, #horizontal-ad, #horizontal-adspace, #hori=
zontal-banner-ad, #horizontal-banner-ad-container, #horizontalAd, #horizont=
alAdvertisement, #horizontal_ad, #horizontal_ad2, #horizontal_ad_top, #hori=
zontalad, #horizontalads, #hot-deals-ad, #hottopics-advert, #hours_ad, #hou=
seAd, #hovered_sponsored, #hp-header-ad, #hp-mpu, #hp-right-ad, #hp-store-a=
d, #hpSponsor, #hpV2_300x250Ad, #hpV2_googAds, #hp_ad300x250, #hp_right_ad_=
300, #i9lsdads, #i_ads_table, #iaa_ad, #ibt_local_ad728, #icePage_SearchLin=
ks_AdRightDiv, #icePage_SearchLinks_DownloadToolbarAdRightDiv, #icePage_Sea=
rchResults_ads0_SponsoredLink, #icePage_SearchResults_ads1_SponsoredLink, #=
icePage_SearchResults_ads2_SponsoredLink, #icePage_SearchResults_ads3_Spons=
oredLink, #icePage_SearchResults_ads4_SponsoredLink, #icom-ad-top, #idDivAd=
, #idMapAdvertising, #idRightAdArea, #idSponsoredresultend, #idSponsoredres=
ultstart, #id_SearchAds, #ifmSocAd, #iframe-ad, #iframe-ad-container-Top3, =
#iframeAd_2, #iframeRightAd, #iframeTopAd, #iframe_ad_2, #iframe_ad_300, #i=
frame_ad_728, #iframe_container300x250, #iframead-300x250, #ignad_medrec, #=
ii_banner_ads, #imPopup, #im_papupFixed, #im_popupDiv, #im_popupFixed, #ima=
_ads-2, #ima_ads-3, #ima_ads-4, #imageGalleryAd, #imageGalleryAdHeadLine, #=
imageGalleryAdPlaceholder, #image_ad_short, #image_selector_ad, #imageadsbo=
x, #imgCollContentAdIFrame, #imgad1, #imu_ad_module, #in-article-ad, #in-co=
ntent-ad, #in-story-ad-wrapper, #in-video-ad-center-main, #inVideoAd, #in_a=
d_col_a, #in_post_ad_middle_1, #in_serp_ad, #inadspace, #inarticlead, #inc-=
ads-bigbox, #index-ad, #index-bottom-advert, #indexSquareAd, #index_ad, #in=
dexad, #indexad300x250l, #indexsmallads, #indiv_adsense, #infinite-adslot-1=
, #influads_block, #infoBottomAd, #inhousead, #initializeAd, #injectableTop=
Ad, #inline-ad, #inline-ad-label, #inline-advert, #inline-story-ad, #inline=
-story-ad2, #inlineAd, #inlineAdCont, #inlineAdtop, #inlineAdvertisement, #=
inlineBottomAd, #inline_ad, #inline_ad_section, #inline_search_ad, #inlinea=
d, #inlineads, #inlinegoogleads, #inlist-ad-block, #inner-ad, #inner-deals-=
ads, #inner-top-ads, #innerad, #innerpage-ad, #innovativeadspan, #inside-pa=
ge-ad, #insideCubeAd, #insidearticleBodyAd, #insider_ad_wrapper, #insticato=
r-container, #instoryad, #instoryadtext, #instoryadwrap, #insurance-ad-1-co=
ntainer, #int-ad, #intAdUnit, #int_ad, #interads, #internalAdvert, #interna=
lads, #interstitialAd, #interstitialAdContainer, #interstitialAdUnit, #inte=
rstitial_ad, #interstitial_ad_container, #interstitial_ad_wrapper, #interst=
itial_ads, #interviews-ad, #introAds, #invid_ad, #ip-ad-leaderboard, #ip-ad=
-skyscraper, #ipadv, #iq-AdSkin, #iqadcontainer, #iqadoverlay, #iqadtile1, =
#iqadtile11, #iqadtile14, #iqadtile15, #iqadtile2, #iqadtile3, #iqadtile4, =
#iqadtile5, #iqadtile8, #iqadtile9, #iqd_align_Ad, #iqd_mainAd, #iqd_rightA=
d, #iqd_topAd, #ir-sidebar-ad, #irgoogleadsense, #islandAd, #islandAdPan, #=
islandAdPane, #islandAdPane2, #islandAdPaneGoogle, #islandAdSponsored, #isl=
and_ad_top, #islandad, #isliveContainer, #issue-sidebar-ad, #item-detail-fe=
ature-ad, #itemGroupAd2, #iv160ad, #iv728ad, #iwad, #j_ad, #j_special_ad, #=
jetso-ad, #ji_medShowAdBox, #jmp-ad-buttons, #job_ads_container, #jobs-ad, =
#jobsAdBox, #joead, #joead2, #js-ad-leaderboard, #js-adslot-300x250-storyre=
c, #js-image-ad-mpu, #js-outbrain-ads-module, #js-outbrain-rightrail-ads-mo=
dule, #js-page-ad-top, #js-site-nav-ad-wrap, #js-story__ad-storyrec, #js-wi=
de-ad, #js_adsense, #jt-advert, #jupiter-ads, #ka_adFullBanner, #ka_adMediu=
mRectangle, #ka_adsense_container, #ka_samplead, #kads-main, #kamidarticle-=
adnotice, #kamidarticle-middle-content, #karmaAds, #kaufDA-widget, #kb-ad-b=
anner, #kbbAdsMainCenterAd, #kdz_ad1, #kdz_ad2, #keen_overlay_ad_display, #=
keyadvertcontainer, #khAdSpace, #ksperAD, #l_home-keen_ad_mask, #landing-ad=
serve, #landing-adserver, #lapho-top-ad-1, #large-ads, #large-rectange-ad, =
#large-rectange-ad-2, #large-screen-ads, #large-skyscraper-ad, #largeAd, #l=
argeAds, #large_rec_ad1, #largead, #lateAd, #lateralAdWrapper, #launchpad-a=
ds-2, #layerAds_layerDiv, #layerTLDADSERV, #layer_ad, #layer_ad_content, #l=
ayer_ad_main, #layer_adv1, #layerad, #layeradsense, #layout-header-ad-wrapp=
er, #layout_topad, #lb-ad, #lb-sponsor-left, #lb-sponsor-right, #lbAdBar, #=
lbAdBarBtm, #lblAds, #lead-ads, #lead_ad, #leadad_1, #leadad_2, #leader-ad,=
 #leader-board-ad, #leaderAdContainer, #leaderAdContainerOuter, #leader_ad,=
 #leader_board_ad, #leaderad, #leaderad_section, #leaderadvert, #leaderboar=
d-ad-1, #leaderboard-ad-1-container, #leaderboard-ad-1_iframe, #leaderboard=
-ad-2, #leaderboard-ad-2_iframe, #leaderboard-ad-3, #leaderboard-ad-3_ifram=
e, #leaderboard-ad-4, #leaderboard-ad-4_iframe, #leaderboard-ad-5, #leaderb=
oard-ad-5_iframe, #leaderboard-ad-bottom, #leaderboard-ad-bottom-container,=
 #leaderboard-ad-container, #leaderboard-ad-container-1, #leaderboard-botto=
m-ad, #leaderboardAd, #leaderboardAdArea, #leaderboardAdArea2, #leaderboard=
AdLabel, #leaderboardAdSibling, #leaderboardAdTop, #leaderboardAds, #leader=
boardAdvert, #leaderboardAdvertFooter, #leaderboardBottomAd, #leaderboard_7=
28x90, #leaderboard_Ad, #leaderboard__advertising, #leaderboard_ad, #leader=
board_ad_gam, #leaderboard_ad_main, #leaderboard_ad_unit, #leaderboard_ads,=
 #leaderboard_bottom_ad, #leaderboard_top_ad, #leaderboardadtagwidget-2, #l=
earad, #leatherboardad, #left-ad-1, #left-ad-2, #left-ad-col, #left-ad-skin=
, #left-bottom-ad, #left-col-ads-1, #left-content-ad, #left-lower-adverts, =
#left-lower-adverts-container, #left-rail-ad, #leftAD, #leftAdAboveSideBar,=
 #leftAdCol, #leftAdContainer, #leftAdMessage, #leftAdSpace, #leftAd_fmt, #=
leftAd_rdr, #leftAds, #leftAdsSmall, #leftAdvert, #leftBanner-ad, #leftColu=
mnAdContainer, #leftGoogleAds, #leftSectionAd300-100, #leftTopAdWrapper, #l=
eft_ad, #left_adsense, #left_adspace, #left_adv, #left_advertisement, #left=
_bg_ad, #left_block_ads, #left_float_ad, #left_global_adspace, #left_side_a=
ds, #left_sidebar_ads, #left_skyscraper_ad, #left_top_ad, #left_ws_ad_conta=
iner, #leftadg, #leftcolAd, #leftcolumnad, #leftforumad, #leftframeAD, #lg-=
banner-ad, #lgfRightBarAd, #lhsBottomAd, #li-right-geobooster-oas, #ligatus=
, #ligatus_adv, #ligatusdiv, #lightboxAd, #lilo_imageAd, #limonads_body, #l=
inebreak-ads, #linkAdSingle, #linkAds, #link_ads, #linkads, #links-ads-deta=
ilnews, #listadholder, #liste_top_ads_wrapper, #listing-ad, #live-ad, #lj_a=
d_row, #load-adslargerect, #localAds, #logethy_iframe, #logoAd2, #long-ad {=
 display: none !important; color: rgb(92, 46, 103) !important; background-c=
olor: rgb(121, 237, 178) !important; }

#long-ad-box, #long-ad-space, #long-bottom-ad-wrapper, #longAdSpace, #longA=
dWrap, #long_advert_header, #long_advertisement, #loopme-interscroller-ad-c=
ontainer, #lower-ad-banner, #lower-advertising, #lowerAdvertisement, #lower=
AdvertisementImg, #lower_ad, #lowerads, #lowerthirdad, #lowertop-adverts, #=
lowertop-adverts-container, #lpAdPanel, #lrec_ad, #lrecad, #lsadvert-left_m=
enu_1, #lsadvert-left_menu_2, #lsadvert-top, #mBannerAd, #m_top_adblock, #m=
adison_ad_248_100, #madskills-ad-manager-0, #madskills-ad-manager-1, #madsk=
ills-ad-manager-2, #madskills-ad-manager-3, #magnaInformer, #magnify_player=
_continuous_ad, #magnify_widget_playlist_item_companion, #main-ad, #main-ad=
160x600, #main-ad160x600-img, #main-ad728x90, #main-advert, #main-advert1, =
#main-advert2, #main-advert3, #main-bottom-ad, #main-bottom-ad-tray, #main-=
content > [style=3D"padding:10px 0 0 0 !important;"], #main-content-ad1, #m=
ain-content-adcontent1, #main-header-ad-wrap, #main-header-ad-wrap-home, #m=
ain-header-advertisement, #main-middle-ad, #main-right-ad-tray, #main-tj-ad=
, #mainAd1, #mainAdUnit, #mainAdvert, #mainAdvertismentP, #mainHeaderAdvert=
isment, #mainMenu_divTopAd, #mainPageAds, #mainPlaceHolder_coreContentPlace=
Holder_rightColumnAdvert_divControl, #main_AD, #main_ads, #main_col > #cent=
er_col div[style=3D"font-size:14px;margin:0 4px;padding:1px 5px;background:=
#fff7ed"], #main_content_ad, #main_left_side_ads, #main_rec_ad, #main_right=
_side_ads, #main_right_side_ads_130_01, #main_top_ad, #main_top_ad_containe=
r, #major_ad, #maker-rect-ad, #mapAdvert, #marcoad, #marketgid, #marketing-=
promo, #marketingRotator, #marketplace-ad-1, #marketplace-ad-2, #marketplac=
eAds, #marquee_ad, #masSearchAd, #mason_adv_bp_1, #mason_adv_bp_2, #mason_a=
dv_bp_3, #mason_adv_bp_4, #mason_adv_rn_2, #mastAd, #mastAdvert, #mast_ad_w=
rap, #mast_ad_wrap_btm, #mast_logo_advertisement, #mastad, #masterTopAds, #=
masterad, #mastercardAd, #masthead-ad, #masthead_ad, #masthead_ads_containe=
r, #masthead_topad, #matchFooterAd, #mbEnd[cellspacing=3D"0"][cellpadding=
=3D"0"], #mbbs-ad-in-content-shortcode, #mc-videoads-overlay, #mc_ad, #mcli=
p_container:last-child, #md-sidebar-video-companion-ad-loaded, #md_adLoader=
, #md_topad, #me-adspace-002, #med-rect-ad, #med-rectangle-ad, #medRecAd, #=
medReqAd, #media-ad, #media-ad-thumbs, #media-temple-ad, #mediaAdLeaderboar=
d, #media_ad, #mediaget_box, #mediagoogleadsense, #mediaplayer_adburner, #m=
edium-ad, #medium-rectangle-ad1, #mediumAd1, #mediumAdContainer, #mediumAdv=
ertisement, #mediumRectangleAd, #mediumrectangle_300x250, #medrec_bottom_ad=
, #medrec_middle_ad, #medrec_top_ad, #medrectad, #medrectangle_banner, #mee=
-ad-wrapper, #memberad, #mens-journal-feature-ad, #menu-ads, #menuAds, #men=
uad, #menubanner-ad-content, #message_adblock, #mgid-container, #mhheader_a=
d, #mi_story_assets_ad, #microAdDiv, #microsoft_ad, #mid-ad300x250, #mid-ta=
ble-ad, #midAD, #midRightAds, #midRightTextAds, #mid_ad, #mid_ad_div, #mid_=
ad_title, #mid_left_ads, #mid_mpu, #mid_roll_ad_holder, #midadd, #midadspac=
e, #midadvert, #midbarad, #midbnrad, #midcolumn_ad, #middle-ad, #middle-ad-=
destin, #middle-story-ad-container, #middleRightColumnAdvert, #middle_ad, #=
middle_ads, #middle_bannerad, #middle_bannerad_section, #middle_body_advert=
ising, #middle_mpu, #middle_sponsor_ads, #middlead, #middleads, #middleads2=
, #midpost_ad, #midrect_ad, #midstrip_ad, #mini-ad, #mini-panel-dart_stamp_=
ads, #mini-panel-dfp_stamp_ads, #mini-panel-top_ads, #mini-panel-two_column=
_ads, #miniAdsAd, #mini_ads_inset, #mkto_mid_ad, #mmmBanner, #mn #center_co=
l > div > h2.spon:first-child, #mn #center_col > div > h2.spon:first-child =
+ ol:last-child, #mn div[style=3D"position:relative"] > #center_col > ._Ak,=
 #mn div[style=3D"position:relative"] > #center_col > div > ._dPg, #mn_ads,=
 #moa-ads-long, #mobile-ad-container, #mobile-ads-link, #mobile-swipe-banne=
r, #mobileAd_holder, #mobile_ad_spot_header, #mochila-column-right-ad-300x2=
50, #mochila-column-right-ad-300x250-1, #mod-ad-msu-1, #mod-ad-msu-2, #mod-=
partner-center, #mod_ad, #mod_ad_top, #modal-ad, #modal_videoAd_wrapper, #m=
odule-ad-300x250, #module-ad-728x90, #module-google_ads, #module_ad, #modul=
e_box_ad, #module_sky_scraper, #monsterAd, #moogleAd, #mordern_adbar_wrap, =
#more_ad, #moreads, #morefooterads, #mos-adCarouselContainer, #mosBannerAd,=
 #mosTileAds, #most_popular_ad, #motionAd, #movads10, #movieads, #mozo-ad, =
#mph-rightad, #mpl_adv_text, #mpr-ad-leader, #mpr-ad-wrapper-1, #mpr-ad-wra=
pper-2, #mpu-ad, #mpu-advert, #mpu-cont, #mpu-content, #mpu-sidebar, #mpu30=
0250, #mpuAd, #mpuAdvert, #mpuAdvertMob, #mpuContainer, #mpuDiv, #mpuInCont=
ent, #mpuSecondary, #mpuSlot, #mpuWrapper, #mpuWrapper600, #mpuWrapperAd, #=
mpuWrapperAd2, #mpu_300x250, #mpu_ad, #mpu_ad2, #mpu_adv, #mpu_banner, #mpu=
_box, #mpu_div, #mpu_firstpost, #mpu_holder, #mpu_text_ad, #mpuad, #mpubox,=
 #mpuholder, #mpuholder01, #mpusLeftAd, #mr_banner_topad, #mrec-advertiseme=
nt, #mrecAdContainer, #mrecPlacement, #mrt-node-Col2-1-AdBlockPromo, #mrt-n=
ode-Col2-1-ComboAd, #mrt-node-Lead-2-AdBlockPromo, #mrt-node-tgtm-Col2-4-Co=
mboAd, #msAds, #ms_ad, #msnAds_inner, #msn_header_ad, #msnau_ad_medium_rect=
angle, #mtSponsor, #mt_adv, #mts_ad_widget, #mu_2_ad, #multiLinkAdContainer=
, #multi_ad, #multibar-ads, #mvp-foot-ad-wrap, #mvp-post-bot-ad, #mvp_160_a=
d, #my-ads, #my-adsFPL, #my-adsFPT, #my-adsLDR, #my-adsLDRB, #my-adsLREC, #=
my-adsLREC2, #my-adsLREC4-base, #my-adsMAST, #my-medium-rectangle-ad-1-cont=
ainer, #my-medium-rectangle-ad-2-container, #myElementAd, #my_ad_mpu, #myad=
s_HeaderButton, #mydfpad, #n_sponsor_ads, #na_adblock, #name-advert, #namec=
om_ad_hosting_main, #narrow-ad, #narrow_ad_unit, #nat-ad-300x250, #natadad3=
00x250, #nationalAd_secondary_btm, #nationalAd_secondary_top, #national_ad,=
 #national_microlink_ads, #nationalad, #native_ad2, #nativeadsteaser, #navA=
dBanner, #nav_ad, #nav_ad_728_mid, #navads-container, #navbar_ads, #navi_ba=
nner_ad_780, #navigation-ad, #nba160PromoAd, #nba300Ad, #nbaGI300ad, #nbaHe=
aderAds, #nbaHouseAnd600Ad, #nbaLeft600Ad, #nbaMidAds, #nbaVid300Ad, #nbabo=
t728ad, #nbcAd300x250, #nbcShowcaseAds, #nc-header-ads, #netBoard-ad, #netw=
ork_header_ad_1, #new-ad-footer, #new-ad-leaderboard, #new-ad-sidebottom, #=
new-ad-sidetop, #newAd, #newPostProfileAd, #newPostProfileVerticalAd, #newT=
opAds, #new_ad_728_90, #new_ad_header, #new_topad, #newadmpu, #newads, #new=
s-adocs, #news_advertorial_content, #news_advertorial_top, #news_article_ad=
_mrec, #news_article_ad_mrec_right, #news_left_ad, #news_right_ad, #newstre=
am_first_ad, #newuser_ad, #ng_rtcol_ad, #nia_ad, #nib-ad, #nlrightsponsorad=
, #nor_wrap, #noresults_ad_container, #noresultsads, #northad, #northbanner=
-advert, #northbanner-advert-container, #noticeAd_pc_wrap, #notify_ad, #nov=
em_billboard, #np_content_ads_module, #nrAds, #nrcAd_Top, #ns_ad1, #ns_ad2,=
 #ns_ad3, #ntvAdZone, #ntvads, #nuevo_ad, #oanda_ads, #oas_Middle, #oas_Mid=
dle1, #oas_Middle2, #oas_Right, #oas_Right1, #oas_Right2, #oas_Section1, #o=
as_Takeover, #oas_Top, #oas_Top1, #oas_asponsor, #oas_wide_skyscraper, #oas=
_x70, #ob_sponsoredcontent, #oba_message, #objadscript, #oem_ad, #ofie_ad, =
#omnibar_ad, #onPauseAdOverlayDesktop, #onespot-ads, #online_ad, #onpageads=
, #onpageadstext, #onscroll-ad-holder-mpu2, #openx-slc, #openx-text-ad, #op=
enx-widget, #openx_iframe, #origami-ad-container, #osDirAd2Post, #osads_300=
, #outbrain-paid, #outbrainAdWrapper, #outbrain_dual_ad_fs_0_dual, #outbrai=
n_vertical, #outerAd300, #outerTwrAd, #outer_div_top_ad, #outsideAds, #ovAd=
, #ovAdWrap, #ovadsense, #overlay-ad-bg, #overlay-advertising, #overlay_ad,=
 #overlayad, #overlayadd, #overlayvideo[style^=3D"position: fixed; top: 0px=
; left: 0px; background: rgba"][style*=3D" z-index"], #overtureSponsoredLin=
ks, #p-advert, #p-googlead, #p-googleadsense, #p-googleadsense-portletlabel=
, #p2HeaderAd, #p2squaread, #p360_ad_unit, #p_lt_zoneContent_SubContent_p_l=
t_zoneRight_IFrameAd_panelAd, #page-ad-container-TopLeft, #page-ad-top, #pa=
ge-advert-3rdrail, #page-advertising, #page-header-ad, #page-top-ad, #pageA=
dDiv, #pageAdds, #pageAds, #pageAdsDiv, #pageAdvert, #pageBannerAd, #pageLe=
ftAd, #pageOwnershipAd_side, #pageRightAd, #page_ad, #page_ad_top, #page_co=
ntent_top_ad, #page_top_ad, #pageads_top, #pagebottomAd, #pagelet_adbox, #p=
agelet_netego_ads, #pagelet_search_ads2, #pagelet_side_ads, #pagination-adv=
ert, #paidlistingAds, #panel-ad, #panelAd, #panel_ad1, #panoAdBlock, #parad=
e_300ad, #parade_300ad2, #partner-ad, #partnerAd, #partnerMedRec, #partnerS=
itesBannerAd, #partner_ads, #pause-ad, #pauseAd, #pb_adbanner, #pb_report_a=
d, #pc-billboard-ad, #pcworldAdBottom, #pcworldAdTop, #pencil-ad, #pencil-a=
d-container, #perm_ad, #permads, #persistentAd, #personalization_ads, #pf-d=
ialog-ads, #pg-ad-160x600, #pg-ad-item-160x600, #pgAdWrapper, #pgFooterAd, =
#pgHeaderAd, #pgSquareAd, #pgad_Bottom3, #pgeldiz, #phContent_CommentsAjax_=
divAdTop, #photoAdvert, #photoAndAdBox, #photo_ad_google, #picad_div, #pinb=
all_ad, #pixAd, #plAds, #plat_sponsors_sidebar, #player-ads, #player-advert=
, #player-advertising, #player-banner, #player-below-advert, #player-midrol=
lAd, #playerAd, #playerAdsRight, #player_ad, #player_middle_ad, #player_top=
_ad, #playerad, #playerads, #playvideotopad, #plrAd, #pmad-in1, #pnAd2, #pn=
lADS, #pnlRedesignAdvert, #pnl_BannerAdServed, #pod-ad-video-page, #pof_ads=
_Wrapper, #polar-sidebar-sponsored, #pop_ad, #popadwrap, #popback-ad, #popo=
verAd, #popular-column-ad, #populate_ad_bottom, #populate_ad_left, #populat=
e_ad_textupper, #populate_ad_textupper_textlink, #popupAd, #popupBottomAd, =
#popup_domination_lightbox_wrapper, #popupadunit, #portlet-advertisement-le=
ft, #portlet-advertisement-right, #pos_ContentAd2, #post-ad, #post-ad-01, #=
post-ad-02, #post-ad-hd, #post-ad-layer, #post-ads, #post-adsense-top-banne=
r, #post-bottom-ads, #post-content-ad, #post-main-banner-ad, #post-page-ad,=
 #post-promo-ad, #post5_adbox, #postAd, #postNavigationAd, #post_ad, #post_=
addsense, #post_adsense, #post_adspace, #post_advert, #post_id_ad_bot, #pos=
tads0, #postpageaddiv, #ppcAdverts, #pr_ad, #pr_advertising, #pre-adv, #pre=
-footer-ad, #pre-main-banner-ad, #pregame_header_ad, #preloaded-ad-frame, #=
premSpons, #premier-ad-space, #preminumAD, #premiumAdBottom, #premiumAdTop,=
 #premium_ad, #premium_ad_inside, #premiumad, #premiumads, #premiumsponsorb=
ox, #preroll_compainion_ad, #priceGrabberAd, #primary_mpu_placeholder, #pri=
me-ad-space, #print-advertisement, #print-header-ad, #print_ads, #printads,=
 #privateadbox, #privateads, #pro_ads_custom_widgets-2, #pro_ads_custom_wid=
gets-3, #pro_ads_custom_widgets-5, #pro_ads_custom_widgets-7, #pro_ads_cust=
om_widgets-8, #product-adsense, #profileAdHeader, #proj-bottom-ad, #promoAd=
s, #promoFloatAd, #promo_ads, #ps-ad-iframe, #ps-top-ads-sponsored, #ps-ver=
tical-ads, #psmpopup, #pswp_advert, #pub-right-bottom-ads, #pub-right-top-a=
ds, #pub468x60, #pub728x90, #publicGoogleAd, #publicidad-video, #publicidad=
_120, #publicidadeLREC, #pulse360_1, #pushAd, #pushDownAd, #pushdown-ad, #p=
ushdownAd, #pushdownAdWrapper, #pushdown_ad, #pusher-ad, #pvadscontainer, #=
qaSideAd, #qadserve_728x90_StayOn_div, #qm-ad-big-box, #qm-ad-sky, #qm-dvda=
d, #qpon_big_ad-teaser, #qtopAd-graybg, #quads-ad1_widget, #quads-ad2, #qua=
ds-ad2_widget, #quads-ad4, #quick_ads_frame_bottom, #quidgetad, #quigo, #qu=
igo-ad, #quigo_ad, #quinAdLeaderboard, #r-ad-tag, #r-ads-listings, #r-ads-p=
review-top, #r1SoftAd, #r_ad3_ad, #r_adver, #ra-taboola-bottom, #radeant, #=
radioProfileAds, #rafael_side_ads_widget-5, #rail-ad-wrap, #rail-bottom-ad,=
 #railAd, #rail_ad, #rail_ad1, #rail_ad2, #raw-search-desktop-advertising-t=
ower-1, #rbAdWrapperRt, #rbAdWrapperTop, #rc-row-container, #rc_edu_span5Ad=
Div, #rd_banner_ad, #reader-ad-container, #realEstateAds, #rearad, #recomme=
ndedAdContainer, #rect-ad, #rectAd, #rect_ad, #rectad, #rectangle-ad, #rect=
angleAd, #rectangleAdSpace, #rectangleAdTeaser1, #rectangle_ad, #rectangle_=
ad_smallgame, #redirect-ad, #redirect-ad-modal, #redirect_ad_1_div, #redire=
ct_ad_2_div, #reference-ad, #refine-300-ad, #refine-ad, #refreshable_ad5, #=
region-node-advert, #region-regions-ad-top, #region-top-ad, #reklam-728x90,=
 #reklam_buton, #reklam_center, #reklama_big, #reklama_left_body, #reklama_=
left_up, #reklama_right_up, #related-ads, #related-projects-sponsor, #relat=
ed_ad, #related_ads, #related_ads_box, #relatedvideosads2, #relocation_ad_c=
ontainer, #remove_ads_button1, #remove_ads_button2, #removeadlink, #respons=
ive-ad, #resultSponLinks, #resultsAdsBottom, #resultsAdsSB, #resultsAdsTop,=
 #resultspanel > #topads, #rg_right_ad, #rh-ad-container, #rh_tower_ad, #rh=
apsodyAd, #rhc_ads, #rhsBottomAd, #rhs_ads, #rhs_adverts, #rhs_block .mod >=
 .gws-local-hotels__booking-module, #rhs_block .mod > .luhb-div > div[data-=
async-type=3D"updateHotelBookingModule"], #rhs_block .xpdopen > ._OKe > div=
 > .mod > ._yYf, #rhs_block > #mbEnd, #rhs_block > .ts[cellspacing=3D"0"][c=
ellpadding=3D"0"][style=3D"padding:0"], #rhs_block > ol > .rhsvw > .kp-blk =
> .xpdopen > ._OKe > ol > ._DJe > .luhb-div, #rhs_block > script + .c._oc._=
Ve.rhsvw, #rhs_whistleout_widget, #rhsads, #rhsadvert, #rhswrapper > #rhsse=
ction[border=3D"0"][bgcolor=3D"#ffffff"], #richad, #right-ad, #right-ad-1, =
#right-ad-block, #right-ad-col, #right-ad-skin, #right-ad-title, #right-ad1=
, #right-adds, #right-ads, #right-ads-3, #right-ads-4, #right-advert, #righ=
t-bar-ad, #right-box-ad, #right-col-ad-600, #right-content-ad, #right-featu=
red-ad, #right-mpu-1-ad-container, #right-uppder-adverts, #right-uppder-adv=
erts-container, #right1-ad, #right160x600ads_part, #right2Ad_Iframe, #right=
AD, #rightAd, #rightAd1, #rightAd160x600, #rightAd160x600two, #rightAd300x2=
50, #rightAd300x250Lower, #rightAdBar, #rightAdColumn, #rightAdContainer, #=
rightAdDiv1, #rightAdDiv2, #rightAdDiv3, #rightAdHideLinkContainer, #rightA=
dHolder, #rightAd_Iframe, #rightAd_rdr, #rightAds, #rightAdsDiv, #rightBann=
er-ad, #rightBlockAd, #rightBottomAd, #rightBoxAdvertisement, #rightBoxAdve=
rtisementLast, #rightColAd, #rightColumnAds, #rightColumnMpuAd, #rightColum=
nSkyAd, #rightDoubleClick, #rightMortgageAd, #rightSideAd, #rightSideAdvert=
, #rightSideSquareAdverts, #right_Ads2, #right_ad_2, #right_ad_box, #right_=
ad_container, #right_ad_top, #right_ad_wrapper, #right_ads_box, #right_adv1=
-v2, #right_advert, #right_advertisement, #right_advertising, #right_advert=
s, #right_bg_ad, #right_block_ads, #right_bottom_ad, #right_column_ad, #rig=
ht_column_ad_container, #right_column_ads, #right_column_adverts, #right_co=
lumn_internal_ad_container, #right_column_top_ad_unit, #right_gallery_ad, #=
right_global_adspace, #right_mini_ad, #right_panel_ads, #right_player_ad, #=
right_rail-zergnet, #right_rail_ad_header, #right_side_bar_ami_ad, #right_s=
idebar_ads, #right_top_ad, #right_top_gad, #rightad, #rightad1, #rightad2, =
#rightadBorder, #rightadBorder1, #rightadBorder2, #rightadContainer, #right=
adcell, #rightadd300, #rightadg, #rightadhome, #rightadpat, #rightads, #rig=
htads300x250, #rightadsarea, #rightadvertbar-doubleclickads, #rightbar-ad, =
#rightbar_ad, #rightcol_mgid, #rightcol_sponsorad, #rightcolhouseads, #righ=
tcollongad, #rightcolumn_300x250ad, #rightcolumn_ad_gam, #rightforumad, #ri=
ghtgoogleads, #rightinfoad, #rightrail-ad, #rightrail-ad-1, #rightrail_ad-0=
, #rightside-ads, #rightside_ad, #rightsideadstop, #rightskyad, #righttop-a=
dverts, #righttop-adverts-container, #ringtone-ad-bottom, #ringtone-ad-top,=
 #rladvt, #rm_ad_text, #rmx-ad-cta-box, #roadsheet-advertising, #rockmelt-a=
d-top, #rolldown-ad, #ros_ad, #rotate_textads_1, #rotating-ad-display, #rot=
ating-ads-wrap, #rotating_ad, #rotatingads, #row-ad, #row2AdContainer, #row=
Adv, #rprightHeaderAd, #rpuAdUnit-0, #rrAdWrapper, #rr_MSads, #rr_ad, #rr_g=
allery_ad, #rside_ad, #rside_adbox, #rt-ad, #rt-ad-top, #rt-ad468, #rtAdver=
tisement, #rtMod_ad, #rt_side_top_google_ad, #rtcol_advert_1, #rtcol_advert=
_2, #rtm_div_562, #rtm_html_226, #rtm_html_920, #rtmm_right_ad, #rtmod_ad, =
#rtn_ad_160x600, #rubicsTextAd, #rxgcontent, #rxgfooter, #rxgheader, #rxgle=
ftbar, #rxgrightbar, #sAdsBox, #s_ads_header, #say-center-contentad, #sb-ad=
-sq, #sb_ad_links, #sb_advert, #sbads-top, #scoreAD, #script_ad_0, #scroll-=
ad, #scroll_ad, #scroll_banner_ad, #scrollingads, #sct_side_ads, #sdac_bott=
om_ad_widget-3, #sdac_footer_ads_widget-3, #sdac_skyscraper_ad_widget-3, #s=
dac_top_ad_widget-3, #sdbr_ad_cnt, #search-ad, #search-ads1, #search-google=
-ads, #search-results-sponsored, #search-sponsored-links, #search-sponsored=
-links-top, #searchAdFrame, #searchAdSenseBox, #searchAdSenseBoxAd, #search=
AdSkyscraperBox, #searchAds, #searchGoogleAdBottom, #searchPaneGoogleAd, #s=
earch_ad, #search_result_ad, #searchresult_advert_right, #searchsponsor, #s=
ec_adspace, #second-adframe, #second-adlayer, #second-right-ad-tray, #secon=
d-story-ad, #secondAD, #secondBoxAd, #secondBoxAdContainer, #second_ad_div,=
 #secondad, #secondary_ad_inventory, #secondaryad, #secondrowads, #sect-ad-=
300x100, #sect-ad-300x250, #sect-ad-300x250-2, #section-ad, #section-ad-1-7=
28, #section-ad-300-250, #section-ad-4-160, #section-ad-bottom, #section-bl=
og-ad, #section-container-ddc_ads, #section-footer-ribbonad, #section-paget=
op-ad, #section-sub-ad, #section_ad, #section_advertisements, #section_adve=
rtorial_feature, #sector-widget__tiny-ad, #self-ad, #self_serve_ads, #sensi=
s_island_ad_1, #sensis_island_ad_1_column, #sensis_island_ad_2, #sensis_isl=
and_ad_2_column, #sensis_island_ad_3, #sensis_island_ad_3_column, #serveAd1=
, #serveAd2, #serveAd3, #servfail-ads, #sew-ad1, #sew_advertbody, #sfif-wra=
pper-keywordad-0, #sgAdHeader, #sgAdScGp160x600, #shell-ad_bnr_atf_01, #she=
ll-ad_bnr_btf_01, #shell-ad_rect_atf_02, #shell-ad_rect_btf_01 { display: n=
one !important; color: rgb(92, 46, 103) !important; background-color: rgb(1=
21, 237, 178) !important; }

#shellnavAd, #shoppingads, #shortads, #shortnews_advert, #show-ad, #show-pl=
ayer-right-ad, #showAd, #show_ads, #show_ads1, #show_right_ad, #show_top_ad=
1, #showads, #showcaseAd, #sic_superBannerAd-loader, #sic_superBannerAdTop,=
 #side-ad, #side-ad-container, #side-ads, #side-ads-box, #side-banner-ad, #=
side-big-ad-bottom, #side-big-ad-middle, #side-boxad, #side-content-ad-1, #=
side-content-ad-2, #side-halfpage-ad, #side-skyscraper-ad, #sideABlock, #si=
deABlockHeader, #sideAD, #sideAd1, #sideAd2, #sideAdArea, #sideAdLarge, #si=
deAdSmall, #sideAdSub, #sideAds, #sideAdsBis, #sideBannerAd, #sideBar-ads, =
#sideBarAd, #sideBySideAds, #sideSponsors, #side_ad, #side_ad_call, #side_a=
d_container_A, #side_ad_module, #side_ad_wrapper, #side_adkit, #side_ads_by=
_google, #side_adv_2, #side_adverts, #side_longads, #side_sky_ad, #side_sky=
scraper_ad, #side_sponsors, #sidead, #sidead1, #sidead1mask, #sideadbox, #s=
ideads, #sideads_container, #sideadscol, #sideadtop-to, #sideadvert, #sidea=
dzone, #sidebar-125x125-ads, #sidebar-125x125-ads-below-index, #sidebar-ad,=
 #sidebar-ad-300, #sidebar-ad-block, #sidebar-ad-boxes, #sidebar-ad-holdd, =
#sidebar-ad-holdd-middle, #sidebar-ad-loader, #sidebar-ad-middle, #sidebar-=
ad-space, #sidebar-ad-wrap, #sidebar-ad1, #sidebar-ad2, #sidebar-ad3, #side=
bar-ad_dbl, #sidebar-ads-content, #sidebar-ads-narrow, #sidebar-ads-wide, #=
sidebar-ads-wrapper, #sidebar-adspace, #sidebar-adv, #sidebar-advertise-tex=
t, #sidebar-advertisement, #sidebar-banner300, #sidebar-corner-ad, #sidebar=
-feed-ad, #sidebar-left-ad, #sidebar-long-advertise, #sidebar-main-ad, #sid=
ebar-post-120x120-banner, #sidebar-post-300x250-banner, #sidebar-scroll-ad-=
container, #sidebar-sponsor-link, #sidebar-sponsors, #sidebar-top-ad, #side=
bar-top-ads, #sidebar2-ads, #sidebar2ads, #sidebarAd, #sidebarAd1, #sidebar=
Ad2, #sidebarAdSense, #sidebarAdSpace, #sidebarAdUnitWidget, #sidebarAds, #=
sidebarAdvert, #sidebarSponsors, #sidebarTextAds, #sidebarTowerAds, #sideba=
r_ad_1, #sidebar_ad_2, #sidebar_ad_3, #sidebar_ad_adam, #sidebar_ad_contain=
er, #sidebar_ad_top, #sidebar_ad_widget, #sidebar_ad_wrapper, #sidebar_adbl=
ock, #sidebar_ads_180, #sidebar_box_add, #sidebar_mini_ads, #sidebar_sponso=
redresult_body, #sidebar_topad, #sidebar_txt_ad_links, #sidebarad, #sidebar=
ad_300x600-33, #sidebarad_300x600-4, #sidebaradpane, #sidebaradsense, #side=
baradver_advertistxt, #sidebaradverts, #sidebard-ads-wrapper, #sidebargoogl=
ead, #sidebargoogleads, #sidebarrectad, #sideline-ad, #sidepad-ad, #silver_=
sponsors_sidebar, #simple_ads_manager_ad_widget-2, #simple_ads_manager_widg=
et-3, #simple_ads_manager_widget-4, #simplyhired_job_widget, #single-ad, #s=
ingle-ad-2, #single-adblade, #single-mpu, #singleADS, #singleADS3, #singleA=
d, #singleAdsContainer, #single_ad_above_content, #singlead, #site-ad-conta=
iner, #site-ads, #site-header__ads, #site-leaderboard-ads, #site-sponsor-ad=
, #site-sponsors, #siteAdHeader, #site_body_header_banner_ad, #site_bottom_=
ad_div, #site_content_ad_div, #site_top_ad, #site_wrap_ad, #sitead, #sitema=
p_ad_left, #skcolAdSky, #skin-ad, #skin-ad-left-rail-container, #skin-ad-ri=
ght-rail-container, #skinTopAd, #skin_ADV_DIV, #skin_adv, #skinad-left, #sk=
inad-right, #skinmid-ad, #skinmid-ad_iframe, #skinningads, #sky-ad, #sky-ad=
s, #sky-left, #sky-right, #sky-top-ad, #skyAd, #skyAdContainer, #skyAdNewsl=
etter, #skyScraperAd, #skyScrapperAd, #skyWrapperAds, #sky_ad, #sky_advert,=
 #skyads, #skyadwrap, #skyline_ad, #skyscrapeAd, #skyscraper-ad, #skyscrape=
r-ad-1, #skyscraper-ad-2, #skyscraperAd, #skyscraperAdContainer, #skyscrape=
rAdWrap, #skyscraperAds, #skyscraperWrapperAd, #skyscraper_ad, #skyscraper_=
advert, #skyscraperadblock, #skyscrapper-ad, #slcontent3_6_sbottom_0_pnlAdS=
lot, #slide_ad, #slidead, #slideboxad, #slider-ad, #sliderAdHolder, #slider=
_ad, #slideshow-middle-ad, #slideshowAd, #slideshow_ad_300x250, #sm-banner-=
ad, #smallAd, #smallBannerAdboard, #small_ad, #small_ad_banners_vertical, #=
small_ads, #smallad, #smallads, #smallerAd, #smoozed-ad, #smxTextAd, #socia=
lAD, #socialBarAd, #socialBarAdMini, #some-ads, #some-ads-holder, #some-mor=
e-ads, #sortsite1-bottom-ad, #source-ad-native-sticky-wrapper, #source_ad, =
#source_content_ad, #spec_offer_ad2, #special-deals-ad, #specialAd_one, #sp=
ecialAd_two, #special_ads, #specialadfeatures, #specialadvertisingreport_co=
ntainer, #specials_ads, #speed_ads, #speeds_ads, #speeds_ads_fstitem, #spee=
dtest_mrec_ad, #sphereAd, #sphereAd-wrap, #spl_ad, #spnAds, #spnslink, #spo=
nBox, #sponLinkDiv_1, #sponLinkDiv_2, #spon_links, #sponlink, #sponlinks, #=
sponsAds, #sponsLinks, #spons_links, #sponseredlinks, #sponsor-flyout-wrap,=
 #sponsor-links, #sponsor-sidebar-container, #sponsorAd, #sponsorAd1, #spon=
sorAd2, #sponsorBanners32, #sponsorBar, #sponsorBorder, #sponsorContainer0,=
 #sponsorFooter, #sponsorLinkDiv, #sponsorLinks, #sponsorResults, #sponsorS=
pot, #sponsorTab, #sponsorTextLink, #sponsor_300x250, #sponsor_ads, #sponso=
r_banderole, #sponsor_bar, #sponsor_bottom, #sponsor_box, #sponsor_deals, #=
sponsor_div, #sponsor_footer, #sponsor_header, #sponsor_link, #sponsor_no, =
#sponsor_partner_single, #sponsor_posts, #sponsor_right, #sponsored-ads, #s=
ponsored-bucket, #sponsored-features, #sponsored-footer, #sponsored-inline,=
 #sponsored-links, #sponsored-links-container, #sponsored-links-list, #spon=
sored-links-media-ads, #sponsored-listings, #sponsored-message, #sponsored-=
not, #sponsored-products-dp_feature_div, #sponsored-recommendations, #spons=
ored-resources, #sponsored-text-links, #sponsored-widget, #sponsored1, #spo=
nsoredAd, #sponsoredAdvertisement, #sponsoredBottom, #sponsoredBox1, #spons=
oredBox2, #sponsoredContentTile_midCol, #sponsoredContentTile_rightCol, #sp=
onsoredFeaturedHoz, #sponsoredHoz, #sponsoredLinks, #sponsoredLinksBox, #sp=
onsoredLinks_Bottom, #sponsoredLinks_Top, #sponsoredList, #sponsoredProduct=
s2_feature_div, #sponsoredProducts_feature_div, #sponsoredResults, #sponsor=
edResultsWide, #sponsoredSiteMainline, #sponsoredSiteSidebar, #sponsoredTop=
, #sponsoredWd, #sponsored_ads, #sponsored_ads_v4, #sponsored_container, #s=
ponsored_content, #sponsored_game_row_listing, #sponsored_head, #sponsored_=
label, #sponsored_link, #sponsored_link_bottom, #sponsored_links, #sponsore=
d_native_ad, #sponsored_news, #sponsored_option, #sponsored_v12, #sponsored=
ads, #sponsoredlinks, #sponsoredlinks_cntr, #sponsoredlinks_left_wrapper, #=
sponsoredlinkslabel, #sponsoredresultsBottom_body, #sponsoredresults_top, #=
sponsorlink, #sponsors-article, #sponsors-block, #sponsorsBox, #sponsorsCon=
tainer, #sponsors_right_container, #sponsors_top_container, #sponsorsads1, =
#sponsorsads2, #sponsorship-box, #sponsorshipBadge, #sporsored-results, #sp=
orts_only_ads, #spotXAd, #spotadvert, #spotadvert1, #spotadvert2, #spotadve=
rt3, #spotadvert5, #spotlight-ad-container-block, #spotlight-ad_iframe, #sp=
otlight-ads, #spotlightAds, #spotlight_ad, #spotlightad, #spr_ad_bg, #sprea=
dly-advertisement-container, #sprint_ad, #sqAd, #sq_ads, #square-ad, #squar=
e-ad-box, #square-ad-slider-wrapper, #square-ad-space, #square-ad-space_btm=
, #square-ads, #square-sponsors, #squareAd, #squareAdBottom, #squareAdSpace=
, #squareAdTop, #squareAdWrap, #squareAds, #squareGoogleAd, #square_ad, #sq=
uare_lat_adv, #squaread, #squareadAdvertiseHere, #squareadvert, #squared_ad=
, #srp_adsense-top, #ss-ad-container, #ss-ad-overlay, #ss-ads-container, #s=
smiwdiv[jsdisplay], #st_topads, #stageAds, #starad, #start_middle_container=
_advertisment, #static_textads_1, #stationad, #sticky-ad, #sticky-ad-contai=
ner, #sticky-top-ad-spacer, #sticky-top-ad-wrap, #stickyAd, #stickyAdBlock,=
 #stickyBottomAd, #stickySkyAd, #sticky_ad_bar, #sticky_adv_container, #sti=
ckyad, #stickyads, #stickyleftad, #stickyrightad, #stopAdv, #stopAdvt, #sto=
ry-90-728-area, #story-ad, #story-ad-1-wrapper, #story-ad-2-wrapper, #story=
-ad-4-wrapper, #story-ad-a, #story-ad-b, #story-ad-top, #story-ad-wrap, #st=
ory-bottom-ad, #story-leaderboard-ad, #story-page-embedded-after2-ad, #stor=
y-page-leaderboard-ad, #story-separator-ads, #story-sponsoredlinks, #storyA=
d, #storyAdWrap, #story_ad, #story_ads, #story_main_mpu, #story_unseen_ad, =
#storyad2, #storyblock-ad, #strip_adv, #stripadv, #style_ad_bottom, #subAds=
Footer, #subbgad, #subheaderAd, #submenu-ads, #subpage-ad-right, #subpage-a=
d-top, #subpageAd, #subpage_234x60ad, #sugarad-stitial-overlay, #super_ad, =
#supp-ad1, #supp-ad1-player, #svp-ad, #swads, #sway-banner-ad, #sway-banner=
-ad-container, #sway-banner-ad1, #sweep_right_ad, #sweep_top_ad, #swfAd1, #=
swfAd5, #syn_headerad_zone, #synced-ad, #synch-ad, #systemad_background, #t=
7ad, #tabAdvertising, #table_ads, #taboola-above-article-thumbnails-title, =
#taboola-ad, #taboola-adverts, #taboola-below, #taboola-below-article-thumb=
nails-3rd, #taboola-below-home-thumbnails-homepage, #taboola-content, #tabo=
ola-footer-ad, #taboola-right-rail-stream-2nd, #taboola-right-rail-thumbnai=
ls-1st, #taboola-top-banner-abp, #taboola_related, #tads + div + .c, #tads.=
c, #tadsb.c, #tadsto.c, #tailResultAd, #takeover-ad, #takeoverad, #targetWe=
eklyAd, #targetWeeklyAdLogo, #targeted-ads, #tblAd, #tblReklama2, #tbl_goog=
lead, #tbo_headerads, #tcHeaderMobileLeaderBoard-advertisement-desktop, #tc=
wAd, #td-GblHdrAds, #td-applet-ads_2_container, #td-applet-ads_container, #=
tdAds, #tdBannerTopAds, #tdGoogleAds, #td_adunit1, #td_adunit1_wrapper, #td=
_adunit2, #td_sponsorAd, #teaser-adtag-left, #teaser-adtag-right, #temp-ads=
, #template_ad_leaderboard, #template_affiliates, #tertiary_advertising, #t=
est_adunit_160_article, #text-ad, #text-link-ads, #text-linkAD, #textAd, #t=
extAd1, #textAds, #textAdsTop, #text_ad, #text_ads, #text_advert, #textad, =
#textad3, #textad_block, #textads_right_container, #textlink-advertisement,=
 #textlink_ads_placeholder, #textsponsor, #tf_page_ad_content_bottom, #tgAD=
_imu_2, #tgAD_imu_3, #tgAD_imu_4, #tgt1-Bottom-0-AdBlockPromo-Proxy, #tgt1-=
Col2-0-ComboAd-Proxy, #tgt1-Col2-1-ComboAd-Proxy, #tgt1-Col2-2-AdBlockPromo=
-Proxy, #the-last-ad-standing, #theadsADT3, #thefooterad, #thelistBottomAd,=
 #themis-ads, #thheaderadcontainer, #thirdPartySponsorLinkAds, #third_party=
_ads, #thisisnotanad, #thistad, #thread-ad, #ti-sway-ad, #tile-ad, #tileAds=
, #tilia_ad, #tippytop-ad, #title-sponsor-banner, #title-wide-sponsored-by,=
 #tmcomp_ad, #tmgAd_div_mpu_1, #tmglBannerAd, #tmn_ad_1, #tmn_ad_2, #tmn_ad=
_3, #tmp2_promo_ad, #tnt_ad_column, #toaster_ad, #tobsideAd, #today_ad_bott=
om, #toolbarSlideUpAd, #top-ad-970x250, #top-ad-banner, #top-ad-container, =
#top-ad-desktop, #top-ad-google, #top-ad-left-spot, #top-ad-menu, #top-ad-p=
osition-inner, #top-ad-rect, #top-ad-right-spot, #top-ad-unit, #top-ad-wrap=
per, #top-adblock, #top-adds, #top-ads, #top-ads-1, #top-ads-contain, #top-=
ads-tabs, #top-adspot, #top-advert, #top-advertisement, #top-advertisements=
, #top-banner-ad, #top-dfp, #top-leaderboard-ad, #top-left-ad, #top-middle-=
add, #top-not-ads, #top-right-ad, #top-search-ad-wrapper, #top-sidebar-ad-3=
00x250, #top-sponsor-ad, #top-story-ad, #top100_ad300right, #top100_ad300ri=
ghtbottom, #top2_ads, #top300x250ad, #top3_ads, #top728ad, #topAD, #topAd30=
0x250_, #topAd728x90, #topAdArea, #topAdBanner, #topAdBar, #topAdBox, #topA=
dContainer, #topAdDiv, #topAdDropdown, #topAdHolder, #topAdSenseDiv, #topAd=
Show, #topAdWrapper, #topAdcontainer, #topAds1, #topAds2, #topAdsContainer,=
 #topAdsDiv, #topAdsG, #topAdv, #topAdvBox, #topAdvert-09, #topBanner-ad, #=
topBannerAdContainer, #topBannerAdv, #topContentAdTeaser, #topImgAd, #topLB=
Ad, #topLeaderAdAreaPageSkin, #topLeaderboardAd, #topMPU, #topMpuContainer,=
 #topNavLeaderboardAdHolder, #topOpenXAdSlot, #topOverallAdArea, #topRightB=
lockAdSense, #topSponsoredLinks, #top_AD, #top_ad-sense, #top_ad_area, #top=
_ad_banner, #top_ad_block, #top_ad_box, #top_ad_container, #top_ad_game, #t=
op_ad_inventory, #top_ad_parent, #top_ad_strip, #top_ad_td, #top_ad_unit, #=
top_ad_widget_area, #top_ad_wrapper, #top_ad_zone, #top_adblock_fix, #top_a=
dd, #top_ads_container, #top_ads_region, #top_ads_wrap, #top_adsense_cont, =
#top_adspace, #top_adv, #top_adv-v2, #top_adv_220, #top_adv_728, #top_adver=
t, #top_advert_box, #top_advertise, #top_advertising, #top_banner, #top_ban=
ner_ads, #top_container_ad, #top_content_ad_inner_container, #top_google_ad=
_container, #top_google_ads, #top_header_ad_wrapper, #top_mpu, #top_mpu_ad,=
 #top_rectangle_ad, #top_right_ad, #top_span_ad, #top_sponsor_ads, #top_spo=
nsor_text, #top_wide_ad, #topad-728x90, #topad-wrap, #topad1, #topad2, #top=
ad728, #topad_holder, #topad_left, #topad_right, #topad_table, #topadbanner=
, #topadbanner2, #topadbar, #topadblock, #topadcell, #topadcontainer, #topa=
ddwide, #topadh, #topadone, #topads-spacer, #topads-wrapper, #topadsblock, =
#topadsdiv, #topadsense, #topadspace, #topadvertisements, #topadvertisement=
wrapper, #topadwrap, #topadz, #topadzone, #topbanner_ad, #topbanner_sponsor=
, #topbanneradtitle, #topbar-ad, #topbarAd, #topbar_Adc1_AdContainer, #topb=
arads, #topcustomad, #topheader_ads, #topicPageAdsense, #topleaderAd, #topl=
eaderboardad, #topnav-ad-shell, #topnavad, #toppannonse, #topright-ad, #top=
rightAdvert, #toprightad, #toprow-ad, #topsidebar-ad, #topsponad, #topspons=
orads, #topsponsored, #topstuff > #tads, #toptextad, #tor-footer-ad, #tour3=
00Ad, #tour728Ad, #tourSponsoredLinksContainer, #tower1ad, #towerAdContaine=
r, #towerad, #tr-ad, #tr-ad-mpu01, #tr-ad-mpu02, #tr-adv-banner, #trafficre=
venue2, #transparentad, #travel_ad, #trc_google_ad, #trendex-sponsor-ad, #t=
rib2-footer-ad-back, #trib2-leaderboard-ad-back, #tripleAdInner, #tripleAdO=
uter, #ts-ad_module, #tsad1, #tsad2, #ttp_ad_slot1, #ttp_ad_slot2, #tube_ad=
, #turnAD, #tut_ads, #tvd-ad-top, #tvplayer_main_adwrap, #twenty_seventeen_=
advert_slider, #twogamesAd, #txfPageMediaAdvertVideo, #txtAdcontainer2, #tx=
tTextAd, #txt_link_ads, #txtads, #ucfooterad, #ugly-ad, #ui-about-these-ads=
-img, #ulBannerSlider, #ultraWideAdContainer, #underPlayerAd, #under_conten=
t_ad, #undergameAd, #universalAdContainer, #uploadMrecAd, #upper-ads, #uppe=
rAdvertisementImg, #upperMpu, #upperRightAds, #upper_adbox, #upper_advertis=
ing, #upper_small_ad, #upperad, #urban_contentad_1, #urban_contentad_2, #ur=
ban_contentad_article, #usa_ad_728x90, #usenetAdsTable, #uvp_ad_container, =
#uzcrsite, #vListAds, #v_ad, #vap_adsense-top, #variant_adsLazyLoad, #vc_si=
de_ad, #vdiAd, #vdls-adv, #vdls-advs, #vert-ads, #vertAd2, #vert_ad, #vert_=
ad_placeholder, #vertad1, #verticalAds, #vertical_ad, #vertical_ads, #vhDiv=
AdSlot300x250, #vid-left-ad, #vid-right-ad, #vidAdBottom, #vidAdRight, #vid=
AdTop, #video-ad, #video-ad-companion-rectangle, #video-adv-300, #video-adv=
-wrapper, #video-advert, #video-coverage-ad-300x250, #video-embed-ads, #vid=
eo-header-advert, #video-in-player-ad, #video-in-player-ad-container, #vide=
o-side-adv, #video-under-player-ad, #videoAdvert, #videoCompanionAd, #video=
PauseAd, #videoPlayerAdLayer, #video_ads_background, #video_ads_bot_overlay=
, #video_ads_overdiv, #video_adv, #video_advert, #video_advert2, #video_adv=
ert3, #video_advert_top, #video_cnv_ad, #video_embed_ads, #video_hor_bottom=
_ads, #video_overlay_ad, #video_reklamy, #video_vert_right_ads, #videoadlog=
o, #videopageadblock, #view-photo-ad, #viewAd1, #view_ads_bottom_bg, #view_=
ads_bottom_bg_middle, #view_ads_content_bg, #view_ads_top_bg, #view_ads_top=
_bg_middle, #view_adtop, #viewer-ad-bottom, #viewer-ad-top, #viewer_ads_wra=
pper, #viewportAds, #viewvid_ad300x250, #visual-ad, #votvAds_inner, #vsw-ad=
s, #vsw_ad, #vuukle_ads_square2, #vz_im_ad, #wTopAd, #wXcds12-ad, #wallAd, =
#wall_advert, #wallpaper-ad-link, #wallpaperAd_left, #wallpaperAd_left3, #w=
allpaperAd_right, #wallpaperAd_right2, #wallpaperAd_right2_1, #wallpaper_fl=
ash_ad, #wallpaper_header_ad, #walltopad, #watch-now-ad, #watch7-sidebar-ad=
s, #watch_sponsored, #wb-ad-grid, #wd_ads, #weather-ad, #weather_sponsor, #=
weatherad, #weblink_ads_container, #websearchAdvert, #welcomeAdsContainer, =
#welcome_ad, #welcome_ad_mrec, #welcome_advertisement, #welcomeadMask, #wf_=
ContentAd, #wf_FrontSingleAd, #wf_SingleAd, #wf_bottomContentAd, #wg_ads, #=
wgtAd, #wh_ad_4, #whatsnews_footer_ad, #whatsnews_top_ad, #whitepaper-ad, #=
whoisRightAdContainer, #whoisRightAdContainerBottom, #whoisRightAdContainer=
Top, #wibiyaAdRotation, #wibiyaToolbarAdUnitFlash, #wide-ad, #wideAdd, #wid=
e_ad_unit, #wide_ad_unit2, #wide_ad_unit_2, #wide_ad_unit_top, #wide_ad_uni=
t_up, #wide_adv, #wide_right_ad, #wideskyscraper_160x600_left, #wideskyscra=
per_160x600_right, #widget-ads-3, #widget-ads-4, #widget-adv-12, #widget-bo=
x-ad-1, #widget-box-ad-2, #widget-style-ad, #widgetADT3, #widget_Adverts, #=
widget_ad, #widget_advertisement, #widget_thrive_ad_default-2, #widget_thri=
ve_ad_default-4, #widgetwidget_adserve2, #windowads, #winvideoPlayer, #wl-p=
encil-ad, #wo-widget-wrap, #wog-300x250-ads, #wow-ads, #wp-insert-ad-widget=
-1, #wp-topAds, #wp125adwrap_2c, #wp_ad_marker, #wp_ads_gpt_widget-16, #wp_=
ads_gpt_widget-17, #wp_ads_gpt_widget-18, #wp_ads_gpt_widget-19, #wp_ads_gp=
t_widget-21, #wp_ads_gpt_widget-4, #wp_ads_gpt_widget-5, #wp_pro_ad_system_=
ad_zone, #wpladbox1, #wpladbox2, #wrapAd, #wrapAdRight, #wrapAdTop, #wrapCo=
mmentAd, #wrap_ad_main { display: none !important; color: rgb(92, 46, 103) =
!important; background-color: rgb(121, 237, 178) !important; }

#wrapperAdsTopLeft, #wrapperAdsTopRight, #wrapperRightAds, #wrapper_ad_Top,=
 #wrapper_ad_island2, #wrapper_sponsoredlinks, #wrapper_topad, #wsAdWrapper=
, #x-ad-item-themed-skyscraper-placekeeper, #x-houseads, #x01-ad, #x300_ad,=
 #xColAds, #xadtop, #xlAd, #xybrad, #y-ad-units, #y708-ad-expedia, #y708-ad=
-lrec, #y708-ad-partners, #y708-ad-ysm, #y708-advertorial-competitions, #y7=
08-advertorial-marketplace, #yahoo-ads, #yahoo-ads-content, #yahoo-sponsors=
, #yahooAdsBottom, #yahooSponsored, #yahoo_ad, #yahoo_ad_contanr, #yahoo_ad=
s, #yahoo_sponsor_links, #yahoo_sponsor_links_title, #yahoo_text_ad, #yahoo=
ad-tbl, #yahooads, #yan-advert-north, #yan-advert-nt1, #yan-question-advert=
, #yan-sponsored, #yandex_ad, #yatadsky, #ybf-ads, #yfi-sponsor, #yfi_ads_4=
x4, #yfi_fp_ad_fx, #yfi_fp_ad_mort, #yfi_fp_ad_nns, #yfi_pf_ad_mort, #ygrp-=
sponsored-links, #yieldaddiv, #ylf-lrec, #ylf-lrec2, #ymap_adbanner, #yn-gm=
y-ad-lrec, #yom-ad-tbs-as, #ypaAdWrapper-BottomAds, #ypaAdWrapper-TopAds, #=
ypaAdWrapper-cclass, #yrail_ads, #yreSponsoredLinks, #ysm_ad_iframe, #yt-ad=
sfull-widget-2, #yt-adsfull-widget-3, #yw-sponsoredad, #zMSplacement1, #zMS=
placement2, #zMSplacement3, #zMSplacement4, #zMSplacement5, #zMSplacement6,=
 #zag_square_ad, #zergnet, #zergnet-wrapper, #zhlobam_net_informer_console,=
 #zoneAdserverMrec, #zoneAdserverSuper, #zoneAdvertisment, #zone_a_ad, #zon=
e_b_ad, #zone_c_ads, #zztextad, .AD-POST, .AD-RC-300x250, .AD-Rotate, .AD-l=
abel300x250, .AD300, .AD300Block, .AD300x250, .AD300x250A, .AD300x600-wrapp=
er, .AD355125, .AD728, .AD728x90L, .ADBnrArea, .ADBox, .ADCLOUD, .ADFooter,=
 .ADITION, .ADInfo, .ADLeader, .ADMiddle1, .ADPod, .ADS-Content-Sidebar, .A=
DS-MainContent, .ADServer, .ADStyle, .ADTextSingle, .ADTop, .ADV-Space, .AD=
_2, .AD_300x100, .AD_300x250, .AD_300x265, .AD_302x252, .AD_336_120, .AD_33=
6_280, .AD_970_90, .AD_ALBUM_ITEMLIST, .AD_Leaderboard, .AD_MOVIE_ITEM, .AD=
_MOVIE_ITEMLIST, .AD_MOVIE_ITEMROW, .AD_area, .AD_mid300, .AD_textinfo, .AD=
_underpost, .ADbox, .ADmid, .ADouter_div, .ADwidget, .A__smallSuperbannerAd=
vert-main, .AcceptableTextAds, .Accordion_ad, .Ad--header, .Ad--sidebar, .A=
d-300x100, .Ad-Container, .Ad-Container-976x166, .Ad-Header, .Ad-IframeWrap=
, .Ad-MPU, .Ad-Wrapper-300x100, .Ad-label, .Ad-leaderboard, .Ad120x600, .Ad=
160x600, .Ad160x600left, .Ad160x600right, .Ad247x90, .Ad300, .Ad300x, .Ad30=
0x250, .Ad300x250L, .Ad300x250_top, .Ad728x90, .AdBorder, .AdBox160, .AdBox=
7, .AdBox728, .AdBoxStyle, .AdBoxStyleHome, .AdCaption, .AdCommercial, .AdC=
ontainer-Banner, .AdContainer160x600, .AdContainerBottom, .AdContainerBox30=
8, .AdContainerModule, .AdFrameLB, .AdGraph, .AdGrayBox, .AdHeader, .AdHere=
, .AdHolder, .AdIndicator, .AdInjectContainer, .AdInline_left, .AdLeft1, .A=
dLeft2, .AdLeftbarBorderStyle, .AdMedium, .AdMessage, .AdModule, .AdModule_=
Content, .AdModule_ContentLarge, .AdModule_Hdr, .AdMultiPage, .AdPanel, .Ad=
PlaceHolder, .AdProS728x90Container, .AdProduct, .AdRight1, .AdRight2, .AdR=
ingtone, .AdScriptBox, .AdSectionHeader, .AdSense, .AdSenseLeft, .AdSense_H=
eader, .AdSense_Sidebar, .AdSlot, .AdSlotHeader, .AdSlot__Commercial, .AdSp=
ace, .AdTextSmallFont, .AdTop, .AdUnit, .AdUnit300, .AdUnit300x250, .AdUnit=
300x600, .AdUnitBox, .AdWidget_ImageWidget, .AdZone120, .AdZone316, .Ad_120=
x600, .Ad_120x600_holder, .Ad_160x600_holder, .Ad_160x600_inner, .Ad_300x25=
0, .Ad_300x250_holder, .Ad_468x60, .Ad_728x90, .Ad_728x90_holder, .Ad_C, .A=
d_D, .Ad_D_Wrapper, .Ad_E_Wrapper, .Ad_Label, .Ad_Label_foursquare, .Ad_Rig=
ht, .Ad_Tit, .Ad_container, .AdblockMessage, .AdblockMessage_msg, .Adbutton=
s, .Adbuttons-sidebar, .AdnetBox, .Ads-768x90, .Ads-leaderboard, .Ads-slot,=
 .Ads2x1000, .AdsBottom, .AdsBottom336X280, .AdsBoxBottom, .AdsBoxSection, =
.AdsBoxTop, .AdsLeft_list, .AdsLinks1, .AdsLinks2, .AdsPlayRight_list, .Ads=
Rec, .Ads_3, .Ads_4, .Ads_forum, .Adsense, .AdsenseBox, .AdsenseBoxCenter, =
.AdsenseDivFooter, .AdsenseDownload, .AdsenseForum, .AdsenseLarge, .Adsense=
Techsupport, .Adspottop, .Adtext, .Adv300x250, .Adv300x250Box, .Adv468, .Ad=
vBoxSidebar, .Adv_Left, .Advert-label, .Advert300x250, .AdvertMidPage, .Adv=
ertiseWithUs, .Advertisehere2, .AdvertisementText, .AdvertisementTextTag, .=
AdvertisementTop, .Advertisment, .AdvertorialTeaser, .Advman_Widget, .Advrt=
, .Advrt_desktop, .AdvtNews, .AdvtSample, .AdvtSample2, .AdvtSample4, .AffA=
D, .AffiliateAds, .AmazonSimpleAdmin_widget, .ArticleAd, .ArticleInlineAd, =
.ArticleLayout-nativeAdLabel, .ArticleLeaderboard_ad, .ArticlePage-ad, .BCA=
_Advertisement, .BGoogleAds300, .BOT-ADS, .Banner300x250, .Banner468X60, .B=
annerAD728, .BannerAd, .Banner_Group, .Banner_Group_Ad_Label, .BigBoxAd, .B=
igBoxAdLabel, .BlockAd, .BlueTxtAdvert, .BottomAdContainer, .BottomAffiliat=
e, .BottomGoogleAds, .BoxAd, .BoxAdWrap, .BoxSponsorBottom, .BtmAd, .BtmSpo=
nsAd, .ButtonAd, .CG_adkit_leaderboard, .CG_details_ad_dropzone, .CWReviews=
ProdInfoAd, .Cheat__footer-ad-container, .Cheat__outbrain, .CollisionAdMark=
er, .ComAread, .CommentAd, .CommentGoogleAd, .ContentAd, .ContentAd2, .Cont=
entAds, .DAWRadvertisement, .DartAdvert, .DeptAd, .DetachedAd, .DetailAds, =
.DisplayAd, .DomAdsDiv, .DoubleClickRefreshable, .EzAdsLUPro, .EzAdsSearchP=
ro, .EzAdsWidget, .FT_Ad, .FeaturedAdIndexAd, .FlatAds, .FlowersAdContainer=
, .FooterAdContainer, .FooterAds, .FooterTileAdOuter_Div, .Footer_AD_Links_=
DIV, .Footer_Default_AD_Message_DIV, .GAME_Ad160x600, .GB3L-QEDGY .GB3L-QED=
F- > .GB3L-QEDE-, .GFYY1SVD2 > .GFYY1SVC2 > .GFYY1SVF5, .GFYY1SVE2 > .GFYY1=
SVD2 > .GFYY1SVG5, .GHOFUQ5BG2 > .GHOFUQ5BF2 > .GHOFUQ5BG5, .GJJKPX2N1 > .G=
JJKPX2M1 > .GJJKPX2P4, .GKJYXHBF2 > .GKJYXHBE2 > .GKJYXHBH5, .GOOGLE_AD, .G=
PMV2XEDA2 > .GPMV2XEDP1 > .GPMV2XEDJBB, .G_ads, .G_ads_m, .GalleryViewerAdS=
uppress, .GetRightAds, .Google-Ad-728x90, .GoogleAd, .GoogleAdInfo, .Google=
AdSencePanel, .GoogleAdSenseBottomModule, .GoogleAdSenseRightModule, .Googl=
eAdWords_container, .GoogleAdsBox, .GoogleAdsItem, .GoogleAdv, .GoogleDfpAd=
, .GoogleDfpAdModule-advertisementLabel, .Googleads728, .GreenHomeAd, .Grid=
HouseAdRight, .HGLoneAdTitleFrame, .HPG_Ad_B, .HPNewAdsBannerDiv, .HPRounde=
dAd, .HeaderAd, .HeaderAds, .HeaderBannerAd, .HeaderLeaderAd, .HeadingAdSpa=
ce, .Hero-Ad, .HomeAd1Label, .HomeContentAd, .HomePageAD, .HomeSidebarAd, .=
Hotels-Results-InlineAd, .IABAdSpace, .InArticleAd, .IndexRightAd, .Interna=
lAdPanel1, .JobListMidAd, .LL_Widget_Advertorial, .LN_Related_Posts_bottom_=
adv, .LargeOuterBoxAdsense, .LargeRightAd, .LastAd, .LeaderAd, .LeaderAdver=
tisement, .LeaderBoardAd, .LeaderboardAdTagWidget, .LeftAd, .LeftButtonAdSl=
ot, .LeftTowerAd, .LeftWideSkyscraperAdPanel, .Left_Content_Google_Ad, .Lig=
atus, .Loge_AD, .LoungeAdsBottomLinks, .M2Advertisement, .MBoxAdM, .MBoxAdR=
, .MBoxAdRight, .MDCadSummary, .MD_adZone, .MIXADVERT_NET, .MOS-ad-hack, .M=
PUHolder, .MPUTitleWrapperClass, .MPUad, .MREC_ads, .M__leaderboardAdvert-i=
mage, .MadClose, .MainAdCont, .Main_right_Adv_incl, .MarketGid_container, .=
MasterLeftContentColumnThreeColumnAdLeft, .MbanAd, .MedRecAD-border, .Mediu=
mRectangleAdPanel, .MiddleAd, .MiddleAdContainer, .MiddleAdvert, .MiddleRig=
htRadvertisement, .Mpopup + #Mad > #MadZone, .MspAd, .NAPmarketAdvert, .NGO=
LocalFooterAd, .NavBarAd, .NewsAds, .OAS_position_TopLeft, .OSOasAdModule, =
.OSProfileAdSenseModule, .OpaqueAdBanner, .OpenXad, .OuterAdvertisingContai=
ner, .PERFORMANCE_AD_COMPLETE, .PERFORMANCE_AD_RELATED, .PU_DoubleClickAdsC=
ontent, .PartialProgrammaticAd, .PartialProgrammaticAd-ads, .PencilAd, .Pos=
t-All-Advertment, .Post5ad, .Post8ad, .Post9ad, .PostSidebarAd, .PremiumObi=
tAdBar, .PrintAd-Slider, .ProductAd, .PushDownAdPane, .PushdownAd, .RBboxAd=
, .RC-AD, .RGAdBoxMainDiv, .RHR-ADS, .RR_ad, .RW_ad300, .RectangleAd, .Resp=
onsiveAd, .Right-Column-AD-Container, .Right300x250AD, .RightAd, .RightAd1,=
 .RightAd2, .RightAdvertiseArea, .RightAdvertisement, .RightGoogleAFC, .Rig=
htGoogleAd, .RightRailAd, .RightRailAdbg, .RightRailAdtext, .RightRailTop30=
0x250Ad, .RightSponsoredAdTitle, .RightTowerAd, .SBAArticle, .SBABottom, .S=
BABottom1, .SBAInHouse, .SBAMR, .SBARightBottom, .SBARightTop, .SBATier1, .=
SBATier2, .SBATier3, .SBAUA, .SC_TBlock, .SHAd2, .SIM_ad_140x140_homepage_t=
v_promo, .SRPads, .STR_AdBlock, .SecondaryAd, .SecondaryAdLink, .SectionSpo=
nsor, .ShootingAd, .ShootingAdLeft, .ShowAdDisplay, .SideAd, .SideAdCol, .S=
ideAds, .SidebarAd, .SidebarAdvert, .SidebarMiddleAdContainer, .SidekickIte=
m-Ads, .SimpleAcceptableTextAds, .SimpleAcceptebleTextAds, .SitesGoogleAdsM=
odule, .Sitewide_AdLabel, .SkyAdContainer, .SkyAdContent, .SkyScraperAd, .S=
kyscraperAD-border, .SmartAdZoneList, .Sponsor-container, .SponsorAds, .Spo=
nsorHeader, .SponsorIsland, .SponsorLink, .SponsoredAdTitle, .SponsoredArti=
cleAd, .SponsoredLinkItemTD, .SponsoredLinks, .SponsoredLinksGrayBox, .Spon=
soredLinksModule, .SponsoredLinksPadding, .SponsoredLinksPanel, .SponsoredR=
esults, .Sponsored_link, .SponsorshipText, .SquareAd, .Squareadspot, .Stand=
ardAdLeft, .StandardAdRight, .TOP-ADS, .TRADING_AD_RELATED, .TRU-onsite-ads=
-leaderboard, .TTButtAd, .Tadspacemrec, .TextAd, .TextAdds, .TheEagleGoogle=
AdSense300x250, .ThreeAds, .TimelineAd, .TmnAdsense, .TopAd, .TopAdContaine=
r, .TopAdL, .TopAdR, .TopAds, .TopBannerAd, .TopLeaderboardAdPanel, .TopRig=
htRadvertisement, .Top_Ad, .TrafficAd, .U210-adv-column, .UFSquareAd, .UISt=
andardFrame_SidebarAds, .UIWashFrame_SidebarAds, .UnderAd, .UpperAdsContain=
er, .V7-advert, .V7-advert-info, .VerticalAd, .Video-Ad, .VideoAd, .WPBanne=
rizeWidget, .WP_Widget_Ad_manager, .Webnegar_Ad_Box, .Webnegar_Ad_Core, .Wi=
deAdContainer, .WideAdTile, .WideAdsLeft, .WidgetAdvertiser, .WiredWidgetsD=
artAds, .WiredWidgetsGoogleAds, .WithAds, .XEad, .YEN_Ads_120, .YEN_Ads_125=
, .ZERGNET, .ZventsSponsoredLabel, .ZventsSponsoredList, .__hub--ad, .__lg-=
ad, .__small-ad, .__wide-ad, .__xX20sponsored20banners, .__y_elastic .__y_i=
tem, .__y_inner > .__y_item, .__y_outer, .__yinit .__y_item, .__ywl .__y_it=
em, .__ywvr .__y_item, .__zinit .__y_item, ._ap_adrecover_ad, ._articleAdve=
rt, ._bannerAds, ._bottom_ad_wrapper, ._fullsquaread, ._iub_cs_activate_goo=
gle_ads, ._top_ad_wrapper, .a-ad, .a-buttons.blue-but.a-check, .a-buttons.g=
reen-but.a-clock, .a-d-container, .a-d-rotate_widgets, .a160x600, .a300x250=
, .a468x60, .a728x90, .aa_AdAnnouncement, .aa_ad-160x600, .aa_ad-728x15, .a=
a_sb_ad_300x250, .aadsection_b1, .aadsection_b2, .aalb-pa-ad-unit, .aalb-pc=
-ad-unit, .aarpe-ad-wrapper, .aarpe-fixed-ad, .ab-prompt, .abAdArea, .abAdP=
ositionBoxB, .abBoxAd, .ablock300, .ablock468, .ablock728, .about_adsense, =
.above-header-advert, .aboveCommentAdBladeWrapper, .aboveCommentAds, .above=
CommentAdsWrapper, .above_discussion_ad, .above_miniscore_ad, .abovead, .ab=
p-homepage-right-ad, .absoluteAd_wss, .ac_adbox, .ac_adbox_inner, .acf-ad, =
.acm_ad_zones, .ad--300, .ad--300x250, .ad--468, .ad--468-60, .ad--728x90, =
.ad--BANNER, .ad--MAIN, .ad--article-top, .ad--b, .ad--bottom, .ad--bottom-=
label, .ad--bottommpu, .ad--c, .ad--centered, .ad--dart, .ad--desktop, .ad-=
-e, .ad--fallback, .ad--footer, .ad--fullsize, .ad--google, .ad--homepage-m=
rec, .ad--homepage-top, .ad--horseshoe, .ad--horseshoe__content, .ad--inner=
, .ad--just-in-feed, .ad--large, .ad--leaderboard, .ad--marker-inner, .ad--=
medium-rectangle, .ad--mpu, .ad--noscroll, .ad--panorama, .ad--placeholder,=
 .ad--pushdown, .ad--rectangle, .ad--right, .ad--scroll, .ad--showmob, .ad-=
-sidebar, .ad--square-rectangle, .ad--stroer, .ad--top, .ad--top-label, .ad=
--top-leaderboard, .ad--top-slot, .ad-1, .ad-101, .ad-120-60, .ad-120-600-i=
nner, .ad-120x60, .ad-120x600, .ad-120x90, .ad-125, .ad-125x125, .ad-140x45=
-2, .ad-150, .ad-160, .ad-160-160, .ad-160-600, .ad-160-above, .ad-160x600,=
 .ad-160x600-gallery, .ad-160x600-home, .ad-160x600-wrap, .ad-160x600x1, .a=
d-160x600x2, .ad-160x600x3, .ad-194, .ad-195x90, .ad-2, .ad-200, .ad-200-bi=
g, .ad-200-small, .ad-200x200, .ad-228x94, .ad-230x90, .ad-234, .ad-246x90,=
 .ad-250, .ad-250x125, .ad-250x250, .ad-250x300, .ad-260x60, .ad-270x100, .=
ad-3, .ad-300, .ad-300-250, .ad-300-250-600, .ad-300-600, .ad-300-b, .ad-30=
0-b-absolute, .ad-300-block, .ad-300-blog, .ad-300-dummy, .ad-300-flex, .ad=
-300x, .ad-300x100, .ad-300x200, .ad-300x250-first, .ad-300x250-home, .ad-3=
00x250-right0, .ad-300x250-section, .ad-300x250-singlepost, .ad-300x250_600=
x250, .ad-300x600, .ad-300x70, .ad-300x75, .ad-319x128, .ad-336x280, .ad-33=
6x280B, .ad-350, .ad-355x75, .ad-3x1, .ad-4, .ad-468, .ad-468x120, .ad-468x=
60, .ad-5, .ad-544x250, .ad-560, .ad-6, .ad-600, .ad-635x40, .ad-7, .ad-720=
-affiliate, .ad-728, .ad-728-90, .ad-728-banner, .ad-728x90, .ad-728x90--a2=
g, .ad-728x90-1, .ad-728x90-top, .ad-728x90-top0, .ad-728x90_forum, .ad-768=
, .ad-88-60, .ad-88-text, .ad-88x31, .ad-90x600, .ad-970x50, .ad-970x90, .a=
d-980-1, .ad-BANNER, .ad-CUSTOM, .ad-E, .ad-LREC, .ad-LREC2, .ad-Leaderboar=
d, .ad-MPU, .ad-MediumRectangle, .ad-PENCIL, .ad-RR, .ad-S, .ad-Square, .ad=
-SuperBanner, .ad-TOPPER, .ad-W, .ad-a, .ad-ab, .ad-abc, .ad-above-header, =
.ad-adSense, .ad-adcode, .ad-adlink-bottom, .ad-adlink-side, .ad-adsense-bl=
ock-250, .ad-after-content, .ad-align-none, .ad-alsorectangle, .ad-alternat=
ive, .ad-amongst-container, .ad-anchor, .ad-area, .ad-area-small, .ad-artic=
le-breaker, .ad-atf, .ad-atf-medRect, .ad-auction-footer-container, .ad-auc=
tion-header, .ad-auction-header-container, .ad-b, .ad-background, .ad-backg=
round-intra-body, .ad-banner-300, .ad-banner-bkgd, .ad-banner-bottom-contai=
ner, .ad-banner-container, .ad-banner-image, .ad-banner-label, .ad-banner-l=
eaderboard, .ad-banner-placeholder, .ad-banner-smaller, .ad-banner-top, .ad=
-banner-top-wrapper, .ad-banner-vertical, .ad-banner-wrapper, .ad-banner728=
-top, .ad-banr, .ad-bar, .ad-below, .ad-below-images, .ad-below-player, .ad=
-belowarticle, .ad-bg, .ad-big, .ad-big-box, .ad-bigbox, .ad-bigboxSub, .ad=
-bigsize, .ad-billboard, .ad-bline, .ad-block-240x400, .ad-block-300-widget=
, .ad-block-300x250, .ad-block-big, .ad-block-bottom, .ad-block-clear-back,=
 .ad-block-enabled, .ad-block-holder, .ad-block-in-post, .ad-block-message,=
 .ad-block-square, .ad-block-wide, .ad-blocked, .ad-blocker-warning, .ad-bl=
ocking-advisor-wrapper, .ad-blog2biz, .ad-blogads, .ad-board, .ad-boombox, =
.ad-bordered, .ad-borderless, .ad-bot, .ad-bottom, .ad-bottom-container, .a=
d-bottom728x90, .ad-bottomLeft, .ad-bottomleader, .ad-bottomline, .ad-box-3=
00x250, .ad-box-adsea, .ad-box-caption, .ad-box-container, .ad-box-title, .=
ad-box-up, .ad-box1, .ad-box2, .ad-box3, .ad-boxamp-wrapper, .ad-boxbottom,=
 .ad-boxes, .ad-boxrr-wrapper, .ad-boxtop, .ad-break, .ad-breaker, .ad-brea=
kout, .ad-browse-rectangle, .ad-bt, .ad-btn-heading, .ad-bug-300w, .ad-butt=
ons, .ad-cad, .ad-calendar, .ad-call-300x250, .ad-callout, .ad-caption, .ad=
-card, .ad-card-container, .ad-catfish, .ad-center, .ad-centered, .ad-chart=
beatwidget, .ad-choices, .ad-circ, .ad-click, .ad-close-button, .ad-cluster=
-container, .ad-codes, .ad-col, .ad-col-02, .ad-column, .ad-comment, .ad-co=
mpanion, .ad-contain, .ad-contain-300x250, .ad-contain-top, .ad-container--=
featured_videos, .ad-container--leaderboard, .ad-container--stripe, .ad-con=
tainer--taboola, .ad-container-160x600, .ad-container-300x250, .ad-containe=
r-728, .ad-container-728x90, .ad-container-994x282, .ad-container-LEADER, .=
ad-container-bot, .ad-container-bottom, .ad-container-dk, .ad-container-emb=
edded, .ad-container-leaderboard, .ad-container-left, .ad-container-pave, .=
ad-container-responsive, .ad-container-right, .ad-container-side, .ad-conta=
iner-tool, .ad-container-top, .ad-container-topad, .ad-container1, .ad-cont=
ainer__ad-slot, .ad-container_row, .ad-content, .ad-content-area, .ad-conte=
nt-rectangle, .ad-context, .ad-curtain, .ad-custom-size, .ad-d, .ad-defer, =
.ad-desktop, .ad-desktop-only, .ad-dfp-column, .ad-dfp-row, .ad-disclaimer,=
 .ad-div, .ad-div-a0-wrapper, .ad-div-t0-wrapper, .ad-diver, .ad-divider, .=
ad-dt, .ad-dynamic-showcase-top, .ad-e, .ad-element, .ad-embedded, .ad-enga=
ge, .ad-entry-wrapper, .ad-ex, .ad-ex-wide-container, .ad-exchange, .ad-exp=
and, .ad-external { display: none !important; color: rgb(92, 46, 103) !impo=
rtant; background-color: rgb(121, 237, 178) !important; }

.ad-f-monster, .ad-fadein, .ad-fadeup, .ad-feature-content, .ad-feature-spo=
nsor, .ad-feature-text, .ad-feedback, .ad-field, .ad-filler, .ad-fix, .ad-f=
lex, .ad-flex-center, .ad-footer, .ad-footer-empty, .ad-footer-leaderboard,=
 .ad-force-center, .ad-forum, .ad-frame, .ad-full, .ad-full-width, .ad-full=
banner, .ad-fullbanner-btf-container, .ad-google, .ad-google-contextual, .a=
d-gpt, .ad-gpt-breaker, .ad-gpt-container, .ad-gpt-main, .ad-gpt-vertical, =
.ad-graphic-large, .ad-gray, .ad-grey, .ad-grid-125, .ad-grid-container, .a=
d-group, .ad-grp, .ad-hdr, .ad-head, .ad-header-container, .ad-header-penci=
l, .ad-header-sidebar, .ad-heading, .ad-headliner-container, .ad-here, .ad-=
hide-mobile, .ad-hideable, .ad-hldr-tmc, .ad-ho, .ad-hold, .ad-home-bottom,=
 .ad-home-right, .ad-homeleaderboard, .ad-homepage, .ad-homepage-1, .ad-hom=
epage-2, .ad-homepage-one, .ad-hor, .ad-horizontal, .ad-horizontal-top, .ad=
-housepromo-d-wrapper, .ad-hpto, .ad-iab-txt, .ad-identifier, .ad-iframe, .=
ad-imagehold, .ad-img300X250, .ad-in-300x250, .ad-in-content-300, .ad-in-po=
st, .ad-in-results, .ad-incontent-ad-plus-billboard-top, .ad-incontent-ad-p=
lus-bottom, .ad-incontent-ad-plus-middle, .ad-incontent-ad-plus-middle2, .a=
d-incontent-ad-plus-middle3, .ad-incontent-ad-plus-top, .ad-incontent-wrap,=
 .ad-index, .ad-index-main, .ad-indicator-horiz, .ad-inline, .ad-inline-art=
icle, .ad-inner-container, .ad-innr, .ad-inpage-video-top, .ad-insert, .ad-=
inserter, .ad-inserter-widget, .ad-integrated-display, .ad-internal, .ad-in=
terruptor, .ad-interstitial, .ad-intromercial, .ad-island, .ad-item-related=
, .ad-label, .ad-lable, .ad-landscape, .ad-large-game, .ad-layer, .ad-lazy,=
 .ad-lazy-support-yes, .ad-lb, .ad-lead, .ad-lead-bottom, .ad-leader, .ad-l=
eader-bottom, .ad-leader-plus-top, .ad-leader-wrap, .ad-leader-wrapper, .ad=
-leaderboard-companion, .ad-leaderboard-container, .ad-leaderboard-hero, .a=
d-leaderboard-marquee, .ad-leaderboard-middle, .ad-leaderboard-splitter, .a=
d-leaderboard-top, .ad-leaderboard-wrapper, .ad-leaderboard_river, .ad-lead=
erbody, .ad-leaderheader, .ad-leadtop, .ad-left3, .ad-leftrail, .ad-line, .=
ad-link-label, .ad-link-left, .ad-link-right, .ad-links-text, .ad-location,=
 .ad-location-container, .ad-location-header, .ad-lock, .ad-lock-content, .=
ad-lower_rec, .ad-lower_river, .ad-lowerboard, .ad-lrec, .ad-mad, .ad-main,=
 .ad-manager-ad, .ad-marker, .ad-marketplace, .ad-marketplace-horizontal, .=
ad-marketswidget, .ad-marquee, .ad-masthead, .ad-masthead-1, .ad-masthead-l=
eft, .ad-med, .ad-med-rec, .ad-med-rect, .ad-med-rect-tmp, .ad-medRec, .ad-=
media-marquee, .ad-media-marquee-btn, .ad-medium, .ad-medium-rectangle, .ad=
-medium-two, .ad-medrect, .ad-megaboard, .ad-message, .ad-messaging, .ad-mi=
d-article-container, .ad-midleader, .ad-mobile, .ad-mobile-banner, .ad-mobi=
le-mpu, .ad-mod, .ad-module, .ad-mpl, .ad-mpu, .ad-mpu-bottom, .ad-mpu-cont=
ainer, .ad-mpu-middle, .ad-mpu-middle2, .ad-mpu-placeholder, .ad-mpu-plus-t=
op, .ad-mpu-top, .ad-mpu__aside, .ad-mpufixed, .ad-mrec, .ad-mrect, .ad-msg=
, .ad-msgunit, .ad-msn, .ad-national-1, .ad-native-dfp, .ad-nav-ad, .ad-nav=
-ad-plus, .ad-new, .ad-no-style, .ad-noBorderAndMargin, .ad-noline, .ad-not=
e, .ad-notice, .ad-notice-small, .ad-on, .ad-one, .ad-other, .ad-outer-cont=
ainer, .ad-outlet, .ad-output-middle, .ad-output-wrapper, .ad-outside, .ad-=
overlay, .ad-packs, .ad-padding, .ad-page-leader, .ad-page-medium, .ad-page=
head, .ad-panel-wrap, .ad-panel__container, .ad-panel__container--styled, .=
ad-panel__googlead, .ad-panorama, .ad-panorama-outer-container, .ad-paralla=
x-wrap, .ad-parent-hockey, .ad-passback-o-rama, .ad-pb, .ad-peg, .ad-permal=
ink, .ad-personalise, .ad-place, .ad-place-active, .ad-place-holder, .ad-pl=
aceholder, .ad-plea, .ad-point, .ad-pos-top, .ad-position, .ad-position-1, =
.ad-post, .ad-post-footer, .ad-post300X250, .ad-postText, .ad-poster, .ad-p=
reloader-container, .ad-prevent-jump, .ad-primary, .ad-primary-sidebar, .ad=
-priority, .ad-pro70, .ad-promo, .ad-promoted-game, .ad-pub, .ad-push, .ad-=
pushdown, .ad-r, .ad-reader, .ad-reader-con-item, .ad-rect, .ad-rect-atf-01=
, .ad-rect-top-right, .ad-rectangle, .ad-rectangle-banner, .ad-rectangle-co=
ntainer, .ad-rectangle-long, .ad-rectangle-long-sky, .ad-rectangle-text, .a=
d-rectangle-wide, .ad-rectangle-xs, .ad-refresh, .ad-region, .ad-region-del=
ay-load, .ad-region__top, .ad-related, .ad-relatedbottom, .ad-resource-cent=
er-top, .ad-responsive-slot, .ad-responsive-wide, .ad-rh, .ad-ri, .ad-richm=
edia, .ad-richmedia-overlay, .ad-right-header, .ad-right-txt, .ad-right1, .=
ad-right2, .ad-right3, .ad-roadblock, .ad-root, .ad-rotation, .ad-row-viewp=
ort, .ad-s, .ad-s-rendered, .ad-salutations, .ad-sample, .ad-scl, .ad-scrip=
t-processed, .ad-scrollpane, .ad-search-grid, .ad-section-body, .ad-sense, =
.ad-sense-ad, .ad-sense-ad__panel-header--srp, .ad-sep, .ad-sharethrough-to=
p, .ad-shifted, .ad-show-label, .ad-show-text, .ad-showcase, .ad-side, .ad-=
side-one, .ad-sidebar-180-150, .ad-sidebar-300-250, .ad-sidebar-ad-message,=
 .ad-sidebar-border, .ad-sidebar-btf-1, .ad-sidebar-outer, .ad-sidebar300, =
.ad-sidebar_right_above, .ad-sidebar_right_below, .ad-sidekick, .ad-siderai=
l, .ad-signup, .ad-sitewide, .ad-size-iab-uap-leaderboard-728x90, .ad-size-=
iab-uap-medium-rectangle-300x250, .ad-skin-link, .ad-sky, .ad-sky-left, .ad=
-sky-right, .ad-sky-wrap, .ad-skyscr, .ad-skyscraper, .ad-skyscraper-label,=
 .ad-skyscraper1, .ad-skyscraper2, .ad-skyscraper3, .ad-slider, .ad-slot, .=
ad-slot--container-inline, .ad-slot--inline, .ad-slot--mostpop, .ad-slot--m=
pu-banner-ad, .ad-slot--rendered, .ad-slot--right, .ad-slot--top, .ad-slot-=
-top-above-nav, .ad-slot--top-banner-ad, .ad-slot--top-banner-ad-desktop, .=
ad-slot-1, .ad-slot-2, .ad-slot-234-60, .ad-slot-300-250, .ad-slot-728-90, =
.ad-slot-a, .ad-slot-banner, .ad-slot-container, .ad-slot-sidebar, .ad-slot=
-sidebar-b, .ad-slot-tall, .ad-slot-top-728, .ad-slot__ad--top, .ad-slot__c=
ontent, .ad-slot__label, .ad-slot__oas, .ad-slug, .ad-smallBP, .ad-sp, .ad-=
space, .ad-space-container, .ad-space-mpu-box, .ad-space-topbanner, .ad-spa=
cer, .ad-span, .ad-special-article, .ad-speedbump, .ad-splash, .ad-sponsor,=
 .ad-sponsor-large-container, .ad-sponsor-text, .ad-sponsored-feed-top, .ad=
-sponsored-links, .ad-sponsored-post, .ad-sponsors, .ad-spot, .ad-spotlight=
, .ad-sq-super, .ad-square2-container, .ad-square300, .ad-squares, .ad-stat=
ement, .ad-sticky, .ad-sticky-container, .ad-story-inject, .ad-story-top, .=
ad-strip, .ad-subnav-container, .ad-subtitle, .ad-superbanner, .ad-t, .ad-t=
able, .ad-tabs, .ad-tag, .ad-tag-square, .ad-tall, .ad-target2-wrapper, .ad=
-text-blockA01, .ad-text-blockB01, .ad-text-label, .ad-text-link, .ad-text-=
links, .ad-text-placeholder-3, .ad-textG01, .ad-textads, .ad-textlink, .ad-=
thanks, .ad-ticker, .ad-tile, .ad-tl1, .ad-top-300x250, .ad-top-728, .ad-to=
p-728x90, .ad-top-banner, .ad-top-box-right, .ad-top-in, .ad-top-lboard, .a=
d-top-left, .ad-top-mpu, .ad-top-rectangle, .ad-top-side, .ad-top-wrapper, =
.ad-top1, .ad-top2, .ad-topbanner, .ad-topleader, .ad-topright, .ad-total, =
.ad-total1, .ad-tower, .ad-tower-container, .ad-towers, .ad-txt, .ad-type, =
.ad-type1, .ad-type10, .ad-type2, .ad-type3, .ad-under-video, .ad-unit-300,=
 .ad-unit-anchor, .ad-unit-container, .ad-unit-editorial-well, .ad-unit-hor=
isontal, .ad-unit-inline-center, .ad-unit-label, .ad-unit-medium-retangle, =
.ad-unit-mpu, .ad-unit-panel, .ad-unit-site-takeover, .ad-unit-text, .ad-un=
it-top, .ad-unit-wrapper, .ad-update, .ad-upper_rec, .ad-us, .ad-v, .ad-v2,=
 .ad-vendor-text-link, .ad-vert, .ad-vertical, .ad-vertical-stack-ad, .ad-v=
tu, .ad-w300, .ad-wallpaper-container, .ad-wallpaper-panorama-container, .a=
d-warning, .ad-wgt, .ad-wide-bottom, .ad-widget, .ad-widget-area, .ad-widge=
t-list, .ad-width-300, .ad-width-728, .ad-windowshade-full, .ad-wings__link=
, .ad-wireframe, .ad-wireframe-wrapper, .ad-with-background, .ad-with-heade=
r-wrapper, .ad-with-us, .ad-wrap--leaderboard, .ad-wrap--mrec, .ad-wrap01, =
.ad-wrap02, .ad-wrapper--articletop, .ad-wrapper--flexibleportrait, .ad-wra=
pper--slideshowhalfpage, .ad-wrapper-left, .ad-wrapper-sticky, .ad-wrapper-=
top, .ad-wrapper-with-text, .ad-wrapper__ad-slug, .ad-x10x20x30, .ad-x31-fu=
ll, .ad-xrcol, .ad-zone, .ad-zone-ajax, .ad-zone-container, .ad-zone-s-q-l,=
 .ad.super, .ad01, .ad01-obj, .ad02, .ad03, .ad04, .ad08sky, .ad1-left, .ad=
1-right, .ad10, .ad100, .ad1000, .ad1001, .ad100x100, .ad120, .ad120_600, .=
ad120x120, .ad120x240GrayBorder, .ad120x240backgroundGray, .ad120x60, .ad12=
0x600, .ad125, .ad125x125, .ad125x125a, .ad125x125b, .ad140, .ad160, .ad160=
600, .ad160_blk, .ad160_l, .ad160_r, .ad160x160, .ad160x600, .ad160x600Gray=
Border, .ad160x600box, .ad170x30, .ad18, .ad180, .ad185x100, .ad19, .ad1Ima=
ge, .ad1_bottom, .ad1_latest, .ad1_top, .ad1b, .ad1left, .ad1x1, .ad200, .a=
d200x60, .ad220x50, .ad230, .ad233x224, .ad234, .ad234x60, .ad236x62, .ad24=
0, .ad250, .ad250-h1, .ad250-h2, .ad250_250, .ad250c, .ad250wrap, .ad250x25=
0, .ad250x300, .ad257, .ad260, .ad260x60, .ad284x134, .ad290, .ad2content_b=
ox, .ad300-hp-top, .ad3001, .ad300250, .ad300Block, .ad300Wrapper, .ad300X2=
50, .ad300_2, .ad300_250, .ad300_bg, .ad300_ver2, .ad300b, .ad300banner, .a=
d300mrec1, .ad300shows, .ad300top, .ad300w, .ad300x-placeholder, .ad300x100=
, .ad300x111, .ad300x120, .ad300x150, .ad300x250, .ad300x250-1, .ad300x250-=
2, .ad300x250-home, .ad300x250-hp-features, .ad300x250-inline, .ad300x250-s=
tacked, .ad300x2501, .ad300x250GrayBorder, .ad300x250Module, .ad300x250Righ=
t, .ad300x250Top, .ad300x250_box, .ad300x250_container, .ad300x250a, .ad300=
x250b, .ad300x250box, .ad300x250box2, .ad300x250flex, .ad300x250s, .ad300x4=
0, .ad300x50-right, .ad300x600, .ad300x77, .ad300x90, .ad310, .ad315, .ad32=
0x250, .ad320x50, .ad336, .ad336_b, .ad336x250, .ad336x280, .ad336x362, .ad=
343x290, .ad350, .ad350r, .ad360, .ad400, .ad400right, .ad400x40, .ad450, .=
ad468_60, .ad468x60, .ad468x60Wrap, .ad468x60_main, .ad470x60, .ad530, .ad5=
40x90, .ad590, .ad590x90, .ad5_container, .ad600, .ad612x80, .ad620x70, .ad=
626X35, .ad640x480, .ad640x60, .ad644, .ad650x140, .ad652, .ad670x83, .ad68=
570, .ad70, .ad72890, .ad728By90, .ad728_90, .ad728_blk, .ad728_cont, .ad72=
8_wrap, .ad728cont, .ad728h, .ad728x90, .ad728x90-1, .ad728x90-2, .ad728x90=
-main_wrap, .ad728x90WithLabel, .ad728x90_2, .ad728x90_container, .ad728x90=
_wrap, .ad728x90box, .ad728x90btf, .ad728x90container, .ad768x90, .ad90x780=
, .ad940x30, .ad954x60, .ad960, .ad960x185, .ad960x90, .ad970x30, .ad970x90=
, .ad980, .ad980x120, .ad980x50box, .ad987, .adActive, .adAgate, .adAlert, =
.adAlone300, .adArea, .adArea674x60, .adAreaLC, .adAreaNative, .adAreaNativ=
eDmm, .adAreaTopTitle, .adArticleBanner, .adArticleBody, .adArticleBottomWr=
ap, .adArticleRecommend, .adArticleSidetile, .adArticleTopText, .adAuto, .a=
dBGcolor, .adBan, .adBanner300x250, .adBanner728x90, .adBannerTyp1, .adBann=
erTypSortableList, .adBannerTypW300, .adBarCenter, .adBarLeft, .adBarRight,=
 .adBelt, .adBgBottom, .adBgClick, .adBgMId, .adBgTop, .adBigBoxFirst, .adB=
igBoxSecond, .adBigBoxThird, .adBillboard, .adBkgd, .adBlock-300-250, .adBl=
ock160x600Spot1, .adBlock728, .adBlockBottom, .adBlockBottomBreak, .adBlock=
DetectedSign, .adBlockNext, .adBlockNotification, .adBlockNotificationOverl=
ay, .adBlockSpacer, .adBlockSpot, .adBlockWarning, .adBlock_1, .adBlock_14,=
 .adBlock_15, .adBlock_17, .adBlock_2, .adBlock_3, .adBlock_6, .adBlock_8, =
.adBlock_9, .adBodyBlockBottom, .adBorder, .adBorders, .adBottomLink, .adBo=
ttomboxright, .adBox-mr, .adBox1, .adBox2, .adBox230X96, .adBox250, .adBox3=
b, .adBox5, .adBox6, .adBox728, .adBox728X90, .adBox728X90_header, .adBoxBo=
dy, .adBoxBorder, .adBoxContainer, .adBoxContent, .adBoxFooter, .adBoxHeade=
r, .adBoxInBignews, .adBoxSidebar, .adBoxSingle, .adBoxTitle, .adBox_1, .ad=
Box_3, .adBrandpanel, .adBtm, .adBuyRight, .adBwrap, .adCMRight, .adCMSlide=
, .adCall, .adCaptionText, .adCell, .adCenter, .adCenterAd, .adCentered, .a=
dCentertile, .adChoice, .adChoiceLogo, .adClm, .adClose, .adCode, .adColBgB=
ottom, .adColumn, .adColumnLeft, .adColumnRight, .adComponent, .adCont, .ad=
ContRight, .adContTop, .adContainer1, .adContainerRectangle, .adContainerSi=
de, .adContainer_125x125, .adContainer_728x90, .adContainerg6, .adContentAd=
, .adContour, .adCopy, .adCreative, .adCs, .adCube, .adDeclare, .adDefRect,=
 .adDialog, .adDingT, .adDivSmall, .adDomInner, .adDomOutter, .adEmployment=
, .adExpanded, .adExternalPage, .adFender3, .adFooterLinks, .adFrameContain=
er, .adFrameMobile, .adFrames, .adFtr, .adFull, .adFullWidth, .adFullWidthB=
ottom, .adFullWidthMiddle, .adGlobalHeader, .adGogleBox, .adGoogle, .adGrou=
p, .adHalfPage, .adHeaderAdbanner, .adHeaderText, .adHeadlineSummary, .adHe=
d, .adHolder2, .adHome300x250, .adHorisontal, .adHorisontalNoBorder, .adHor=
izontalTextAlt, .adHplaceholder, .adHz, .adIMm, .adIframe, .adIframeCount, =
.adImgIM, .adInArticle, .adInContent, .adInNews, .adInfo, .adInfoLargeLeade=
rboard, .adInner, .adInnerLeftBottom, .adInteractive, .adIsland, .adLabel, =
.adLabel160x600, .adLabel300x250, .adLabelLine, .adLabels, .adLargeRec, .ad=
LargeRect, .adLat, .adLeader, .adLeaderForum, .adLeaderboard, .adLeaderboar=
dAdContainer, .adLeft, .adLine, .adLine300x100, .adLine300x250, .adLine300x=
600, .adLinkCnt, .adListB, .adLoaded, .adLoader, .adLocal, .adLocation, .ad=
Location-zerg, .adMPU, .adMPUHome, .adMRECHolder, .adMarker, .adMarkerBlock=
, .adMastheadLeft, .adMastheadRight, .adMedRectBox, .adMedRectBoxLeft, .adM=
ediaMiddle, .adMediaNet, .adMediumRectangle, .adMegaBoard, .adMeldGuts, .ad=
MgsBanner, .adMiniTower, .adMinisLR, .adMkt2Colw, .adModule300, .adModuleAd=
, .adModule_square2, .adMpu, .adMpuHolder, .adMrginBottom, .adNarrow, .adNe=
tPromo, .adNewsChannel, .adNoBorder, .adNoOutline, .adNone, .adNote, .adNot=
ice, .adNotice90, .adNoticeOut, .adNotification, .adObj, .adOne, .adOuterCo=
ntainer, .adPageBorderL, .adPageBorderR, .adPanelContent, .adPlaceholder, .=
adPlaceholder35, .adPlaceholder54, .adPlaceholder_foot, .adPosition, .adRec=
ommend, .adRecommendRight, .adRect, .adRectangle, .adRectangleUnit, .adRegi=
onSelector, .adRemove, .adReportsLink, .adResponsive, .adResults, .adRightS=
ide, .adRow, .adRowTopWrapper, .adSKY, .adSTHomePage, .adSection, .adSectio=
n_rt, .adSelfServiceAdvertiseLink, .adSenceImagePush, .adSense, .adSepDiv, =
.adServer, .adSeven, .adSide, .adSide203, .adSide230, .adSidebarButtons, .a=
dSidetileplus, .adSize_MedRec, .adSkin, .adSkinLayerConfig, .adSky, .adSky6=
00, .adSkyOrMpu, .adSkyscaper, .adSkyscraper, .adSkyscraperHolder, .adSlice=
, .adSlide, .adSlot, .adSlotContainer, .adSlug, .adSpBelow, .adSpace300x250=
, .adSpace950x90, .adSpacer, .adSplash, .adSponsor, .adSponsorText, .adSpot=
-brought, .adSpot-mrec, .adSpot-searchAd, .adSpot-textBox, .adSpot-textBoxG=
raphicRight, .adSpot-twin, .adSpotIsland, .adSquare, .adStatementText, .adS=
tyle, .adStyle1, .adSub, .adSubColPod, .adSummary, .adSuperboard, .adSupert=
ower, .adTD, .adTXTnew { display: none !important; color: rgb(92, 46, 103) =
!important; background-color: rgb(121, 237, 178) !important; }

.adTab, .adTag, .adTag-wrap, .adTextPmpt, .adTicker, .adTile, .adTileWrap, =
.adTiler, .adTitleR, .adTop, .adTopBanner_nomobile, .adTopBk, .adTopFloat, =
.adTopLeft, .adTopLink, .adTopRight, .adTopWrapper, .adTop_placement, .adTo=
pboxright, .adTout, .adTower, .adTwo, .adTxt, .adType2, .adUnit, .adUnitHor=
z, .adUnitVert, .adUnitVert_noImage, .adVar, .adVertical, .adVideo, .adVide=
o2, .adVl, .adVplaceholder, .adWarning, .adWebBoard, .adWideSkyscraper, .ad=
WideSkyscraperRight, .adWidgetBlock, .adWidgetSponsor, .adWithTab, .adWord,=
 .adWrapLg, .adWrapper, .adZone, .adZoneRight, .ad_0, .ad_1000x90, .ad_100x=
100, .ad_1150_290, .ad_1160_91, .ad_1200, .ad_120x60, .ad_120x600, .ad_120x=
90, .ad_125, .ad_130x90, .ad_150x150, .ad_160_600, .ad_180x150, .ad_1day9, =
.ad_200, .ad_200x200, .ad_234x60, .ad_240, .ad_240x400, .ad_242_90_top, .ad=
_250, .ad_250x200, .ad_250x250, .ad_250x250_w, .ad_260_210, .ad_300, .ad_30=
0250, .ad_300Home, .ad_300Side, .ad_300_120, .ad_300_250, .ad_300_250_1, .a=
d_300_250_2, .ad_300_250_cpv, .ad_300_250_wrapper, .ad_300_600, .ad_300_608=
, .ad_300s, .ad_300x100, .ad_300x240, .ad_300x250, .ad_300x250_box_right, .=
ad_300x250_live, .ad_300x50, .ad_300x500, .ad_300x60, .ad_300x600, .ad_320x=
250_async, .ad_320x360, .ad_326x260, .ad_330x110, .ad_336, .ad_336_gr_white=
, .ad_336x280, .ad_336x90, .ad_338_282, .ad_350x100, .ad_350x250, .ad_4, .a=
d_400x200, .ad_468, .ad_468x60, .ad_4_row, .ad_5, .ad_600, .ad_630x130, .ad=
_640, .ad_640x90, .ad_680x15, .ad_728, .ad_72890, .ad_72890_box, .ad_728Hom=
e, .ad_728_90, .ad_728_90_1, .ad_728_90_top, .ad_728_90b, .ad_728_in, .ad_7=
28_top, .ad_728_unit, .ad_728_v2, .ad_728x90-1, .ad_728x90-2, .ad_728x90_to=
p, .ad_728x90b, .ad_88x31, .ad_925x90, .ad_954-60, .ad_970_2, .ad_970x90_pr=
og, .ad_980x260, .ad_CustomAd, .ad_Flex, .ad_Left, .ad__caption, .ad__cente=
red, .ad__container, .ad__content, .ad__in-loop, .ad__in-loop--desktop, .ad=
__inline, .ad__label, .ad__leaderboard, .ad__mpu, .ad__placeholder, .ad__re=
ctangle, .ad__superbanner, .ad__width-by-height, .ad__wrapper, .ad_a, .ad_a=
dInfo, .ad_ad_160, .ad_ad_300, .ad_adblade, .ad_adsense_spacer, .ad_adv, .a=
d_amazon, .ad_area, .ad_area_two, .ad_article_top_left, .ad_atf_300x250, .a=
d_atf_728x90, .ad_avu_300x250, .ad_back, .ad_background, .ad_bank_wrapper, =
.ad_banner, .ad_banner2, .ad_banner_2, .ad_banner_234, .ad_banner_250x250, =
.ad_banner_468, .ad_banner_728x90_inner, .ad_banner_border, .ad_banner_div,=
 .ad_bar, .ad_below_content, .ad_belowmenu, .ad_bg, .ad_bg_300x250, .ad_bgs=
kin, .ad_big_banner, .ad_bigbox, .ad_billboard, .ad_biz, .ad_blk, .ad_block=
_1, .ad_block_2, .ad_block_300x250, .ad_block_336, .ad_block_338, .ad_block=
__336_d1, .ad_block_leader2, .ad_bn, .ad_border, .ad_border_true, .ad_botba=
nner, .ad_bottom_728, .ad_bottom_leaderboard, .ad_bottom_left, .ad_bottom_m=
pu, .ad_bottom_space, .ad_bottom_title, .ad_bottomline, .ad_box, .ad_box1, =
.ad_box2, .ad_box300x250, .ad_box_2, .ad_box_ad, .ad_box_div, .ad_box_new, =
.ad_box_righ, .ad_box_right_120, .ad_box_spacer, .ad_box_title, .ad_box_top=
, .ad_boxright1, .ad_break, .ad_break_container, .ad_btf, .ad_btf_300x250, =
.ad_btf_728x90, .ad_buttom_banner, .ad_buttons_300, .ad_buttons_320, .ad_c,=
 .ad_callout, .ad_callout_inline, .ad_caption, .ad_center, .ad_center_botto=
m, .ad_centered, .ad_cheat, .ad_choice, .ad_choices, .ad_cl, .ad_claim, .ad=
_click, .ad_code, .ad_col, .ad_col_a, .ad_column, .ad_column_box, .ad_colum=
n_hl, .ad_common, .ad_cont, .ad_cont_footer, .ad_contain, .ad_container_300=
x250, .ad_container_5, .ad_container_6, .ad_container_7, .ad_container_728x=
90, .ad_container_8, .ad_container_9, .ad_container__sidebar, .ad_container=
__top, .ad_container_body, .ad_content_wide, .ad_contents, .ad_custombanner=
, .ad_db, .ad_default, .ad_deferrable, .ad_descriptor, .ad_desktop, .ad_dis=
claimer, .ad_div_banner, .ad_div_box, .ad_div_box2, .ad_embed, .ad_eniro, .=
ad_entry_title_under, .ad_entrylists_end, .ad_event_mast_wrapper, .ad_exter=
nal, .ad_eyebrow, .ad_feature, .ad_filler, .ad_flash, .ad_flat-boxright10, =
.ad_flat-boxright6, .ad_flat-boxright9, .ad_float, .ad_floating_box, .ad_fo=
nt, .ad_footer, .ad_footer_super_banner, .ad_for_layout, .ad_frame, .ad_fra=
med, .ad_front_promo, .ad_full_click, .ad_fullwidth, .ad_gal, .ad_google_sh=
hide, .ad_gpt, .ad_grid, .ad_group, .ad_gutter_top, .ad_half_page, .ad_half=
page, .ad_hat_728, .ad_hat_banner_300, .ad_hat_top, .ad_head, .ad_head_wide=
, .ad_header_lb, .ad_header_left, .ad_header_noad, .ad_heading, .ad_headlin=
e, .ad_help_link, .ad_holder, .ad_home_block, .ad_home_top_bnr, .ad_honcode=
_label, .ad_horizontal, .ad_horizontal_marker, .ad_hover_href, .ad_hpm, .ad=
_hr, .ad_hyper_wrap, .ad_identifier, .ad_iframe2, .ad_ifrwrap, .ad_image_co=
ntainer, .ad_imgae_150, .ad_in_column, .ad_in_head, .ad_index02, .ad_indica=
tor, .ad_info_block, .ad_inline, .ad_inset, .ad_island, .ad_island2_spacer,=
 .ad_island_feedback, .ad_island_spacer, .ad_isolation, .ad_jnaught, .ad_js=
_deal_top, .ad_keywords_bot, .ad_keywords_bot_r, .ad_l, .ad_label, .ad_labe=
l1, .ad_label2a, .ad_label_centered, .ad_label_long, .ad_label_method, .ad_=
label_top, .ad_launchpad, .ad_leader, .ad_leader_bottom, .ad_leader_plus_to=
p, .ad_leaderboard_atf, .ad_leaderboard_top, .ad_left_cell, .ad_left_column=
, .ad_lft, .ad_line, .ad_line2, .ad_link, .ad_link1, .ad_link_468, .ad_link=
_area, .ad_link_label, .ad_link_label_vert, .ad_links, .ad_linkunit, .ad_ln=
ks, .ad_loc, .ad_long, .ad_lrec, .ad_lt, .ad_main, .ad_maintopad, .ad_margi=
n, .ad_masthead, .ad_med, .ad_medium_rectangle, .ad_medium_wg, .ad_medrec, =
.ad_medrect, .ad_megabanner, .ad_message, .ad_microlen, .ad_middle_banner, =
.ad_middle_hub_page, .ad_mnu, .ad_mobile, .ad_mod, .ad_module, .ad_movFocus=
, .ad_mp, .ad_mpu, .ad_mpu_top, .ad_mr, .ad_mrec, .ad_mrec_title_article, .=
ad_mrect, .ad_mrectangle, .ad_msg, .ad_new_box01, .ad_new_box02, .ad_news, =
.ad_news_text, .ad_newsstream, .ad_no_border, .ad_note, .ad_notice, .ad_nsR=
T_300_250, .ad_nsbd_300_250, .ad_on_article, .ad_one, .ad_overlays, .ad_p36=
0, .ad_pagebody, .ad_panel, .ad_panel_1, .ad_panel_2, .ad_panorama_extra, .=
ad_partner, .ad_partners, .ad_perma-panorama, .ad_pic, .ad_placeholder, .ad=
_placement, .ad_placement_300x250, .ad_placement_small, .ad_plane_336, .ad_=
plus, .ad_policy_link_br, .ad_poll, .ad_position, .ad_post, .ad_posttop, .a=
d_power, .ad_primary, .ad_promo1, .ad_promo_spacer, .ad_r, .ad_r1_menu, .ad=
_rakuten, .ad_rakuten_wrapper, .ad_rec, .ad_rect, .ad_rect_contr, .ad_recta=
ngle, .ad_rectangle_300_250, .ad_rectangle_medium, .ad_rectangular, .ad_reg=
ular1, .ad_regular2, .ad_regular3, .ad_reminder, .ad_report_btn, .ad_rhs, .=
ad_rightSky, .ad_right_cell, .ad_right_col, .ad_right_column, .ad_right_col=
umn160, .ad_rightside, .ad_row, .ad_row_bottom_item, .ad_rtg300, .ad_second=
ary, .ad_section_300x250, .ad_section_728x90, .ad_segment, .ad_sense_01, .a=
d_sense_footer_container, .ad_share_box, .ad_shopingmall, .ad_shuffling_tex=
t, .ad_side, .ad_side_rectangle_banner, .ad_sidebar, .ad_sidebar_bigbox, .a=
d_size_160x600, .ad_sky, .ad_skyscpr, .ad_skyscraper, .ad_skyscrapper, .ad_=
slider_out, .ad_slot, .ad_slot_right, .ad_slug, .ad_slug_font, .ad_slug_hea=
lthgrades, .ad_sonar, .ad_space_300_250, .ad_space_730, .ad_space_holder, .=
ad_space_in, .ad_space_rgt, .ad_space_w300_h250, .ad_spacer, .ad_special_ba=
dge, .ad_spons_box, .ad_sponsor, .ad_sponsor_fp, .ad_sponsoredlinks, .ad_sp=
onsoredsection, .ad_spot_b, .ad_spot_c, .ad_spotlight, .ad_square, .ad_squa=
re_r, .ad_square_r_top, .ad_square_top, .ad_station, .ad_story_island, .ad_=
stream, .ad_stream_hd, .ad_strip_noline, .ad_sub, .ad_supersize, .ad_swf, .=
ad_tag, .ad_tag_middle, .ad_text_link, .ad_text_links, .ad_text_vertical, .=
ad_text_w, .ad_textlink1, .ad_textlink_box, .ad_thumbnail_header, .ad_title=
_small, .ad_tlb, .ad_top, .ad_top1, .ad_top_1, .ad_top_2, .ad_top_3, .ad_to=
p_banner, .ad_top_leaderboard, .ad_top_left, .ad_top_mpu, .ad_top_right, .a=
d_topic_content, .ad_topright, .ad_topshop, .ad_tower, .ad_trailer_header, =
.ad_ttl, .ad_txt2, .ad_type_1, .ad_type_adsense, .ad_type_dfp, .ad_under, .=
ad_under_royal_slider, .ad_unit, .ad_unit_300_x_250, .ad_unit_rail, .ad_url=
, .ad_v2, .ad_v3, .ad_v300, .ad_vertisement, .ad_viewtop, .ad_w300i, .ad_w_=
us_a300, .ad_warn, .ad_warning, .ad_watermark, .ad_wid300, .ad_wide, .ad_wi=
dget, .ad_widget_200_100, .ad_widget_200_200, .ad_widget_image, .ad_widget_=
title, .ad_word, .ad_wrapper_false, .ad_wrapper_fixed, .ad_wrapper_top, .ad=
_wrp, .ad_xrail, .ad_xrail_top, .ad_zone, .adace-adi-popup-wrapper, .adadde=
d, .adageunicorns, .adamazon, .adarea-long, .adarticle, .adb-728x90, .adb-e=
nabled, .adback, .adbadge, .adban-hold-narrow, .adband, .adbanner-300-250, =
.adbanner-bottom, .adbanner1, .adbanner2nd, .adbannerbox, .adbanneriframe, =
.adbannerright, .adbannertop, .adbase, .adbbox, .adbckgrnd, .adbd-backgroun=
d, .adbd-message, .adbd-wrapper, .adbelowfirstpost, .adbetween, .adbkgnd, .=
adblade, .adblade-container, .adbladeimg, .adblk, .adblock-240-400, .adbloc=
k-300-300, .adblock-600-120, .adblock-bottom, .adblock-header, .adblock-hea=
der1, .adblock-main, .adblock-modal, .adblock-modal-content, .adblock-notif=
ication-wrapper, .adblock-popup, .adblock-top, .adblock-top-left, .adblock-=
warning-teaser, .adblock-wide, .adblock300, .adblock300250, .adblock300x250=
Spot1, .adblock728x90, .adblockOverlay, .adblock_detector, .adblock_enabled=
, .adblock_floating_message, .adblock_msg, .adblock_noborder, .adblock_prim=
ary, .adblocker-message, .adblocker-wrap, .adblocks-topright, .adboard, .ad=
border, .adborderbottom, .adbordertop, .adbot, .adbot_postbit, .adbot_showt=
hread, .adbottomright, .adbox-300x250, .adbox-468x60, .adbox-border-desk, .=
adbox-box, .adbox-outer, .adbox-rectangle, .adbox-sidebar, .adbox-slider, .=
adbox-title, .adbox-topbanner, .adbox-wrapper, .adbox1, .adbox160, .adbox2,=
 .adbox300, .adbox300x250, .adbox336, .adbox600, .adbox728, .adboxRightSide=
, .adboxTopBanner, .adboxVert, .adbox_300x600, .adbox_366x280, .adbox_468X6=
0, .adbox_border, .adbox_bottom, .adbox_br, .adbox_cont, .adbox_largerect, =
.adbox_left, .adboxbg, .adboxbot, .adboxclass, .adboxcontent, .adboxcontent=
sum, .adboxes, .adboxesrow, .adboxlong, .adboxo, .adbreak, .adbrite2, .adbr=
ite_post, .adbucks, .adbuddy-protected, .adbug, .adbutton-block, .adbuttons=
, .adbygoogle, .adcard, .adcasing, .adcenter, .adcenterRowWrapper, .adchang=
e, .adchoices, .adchoices-link, .adclass, .adcode, .adcode2, .adcode_contai=
ner, .adcodetop, .adcol1, .adcol2, .adcolumn_wrapper, .adcomment, .adcontai=
ner300x250l, .adcontainer300x250r, .adcontent_box, .adcontn, .adcopy, .adcr=
t980x250, .adctr, .add-column2, .add-header-area, .add-sidebar, .add300, .a=
dd300top, .add300x250, .add768, .addResources, .add_300_250, .add_300x250, =
.add_728x90_teckpage, .add_baner, .add_topbanner, .addarea, .addarearight, =
.addbanner, .addboxRight, .addisclaimer, .addivwhite, .adds2, .adds300x250,=
 .adds620x90, .addtitle, .addvert, .addwide, .adengageadzone, .adenquire, .=
adexpl, .adf_tisers, .adfbox, .adfeedback, .adfeeds, .adfieldbg, .adfix, .a=
dfix-300x250, .adflag, .adflexi, .adfliction, .adfloatleft, .adfloatright, =
.adfoot, .adfootbox, .adfooter, .adformobile, .adframe2, .adframe_banner, .=
adframe_rectangle, .adfront, .adfront-head, .adg-rects, .adg_cell, .adg_nat=
ive_home, .adg_row, .adg_table, .adg_table_cell, .adg_table_row, .adgear, .=
adgear-bb, .adgear_header, .adgeletti-ad-div, .adgoogle_block, .adhalfhome,=
 .adhead, .adhead_h, .adhead_h_wide, .adheader100, .adheader401, .adheader4=
16, .adherebox, .adhesion-block, .adhi, .adhide, .adhint, .adholder-300, .a=
dholder2, .adholderban, .adhoriz, .adhref_box_ads, .adical_contentad, .adif=
rame, .adiframe250x250, .adinjwidget, .adinner, .adinpost, .adinsert, .adin=
sert-bdr, .adinsert160, .adinside, .adintext, .adintext-unten, .adintro, .a=
disland, .adition_Skyscraper, .adits, .adjimage2, .adjlink, .adkicker, .adk=
ingprobanner, .adkingprocontainer, .adkit-advert, .adkit-lb-footer, .adkit_=
free_html, .adl125, .adlabel-horz, .adlabel-vert, .adlabel1, .adlabel2, .ad=
label3, .adlabelleft, .adlarge, .adlarger, .adlateral, .adlayer, .adleader,=
 .adleft1, .adlgbox, .adline, .adlinkdiv, .adlinks, .adlinks-class, .adlist=
1, .adlist2, .adlist__item--midstream, .adlnklst, .adloaded, .adlsot, .adma=
china-banner, .adman, .admania_themead, .admarker, .admaster, .admediumred,=
 .admedrec, .admeldBoxAd, .admessage, .admiddlesidebar, .administer-ad, .ad=
mods, .admodule, .admoduleB, .admpu, .admpu-small, .admputop, .admsg__mrec,=
 .admz, .adnSpot, .adnSpotaa, .adname, .adnation-banner, .adnet120, .adnet_=
area, .adnewslist, .adnl_zone, .adnotecenter, .adnotice, .adnu, .adocean728=
x90, .adonmedianama, .adops, .adp-AdPrefix, .adpacks, .adpacks_content, .ad=
pad300, .adpad300spacer, .adpadding, .adpadtwo_div, .adpane, .adpic, .adpla=
ce, .adplace_center, .adplacement, .adplate-background, .adpod, .adpos-19, =
.adpos-20, .adpos-25, .adpos-26, .adpos-8, .adpost, .adposter_pos, .adproxy=
, .adrec, .adrechts, .adrecom-pic, .adrect, .adrectangle, .adrectwrapper, .=
adrequest-iframe-wrapper, .adright265x90, .adright300, .adrightsm, .adright=
top, .adriverBanner, .adroot, .adrotate-sponsor, .adrotate_top_banner, .adr=
otate_widget, .adrotate_widgets, .adrow, .adrow-post, .adrow1box1, .adrow1b=
ox3, .adrow1box4, .adrrr, .adrule, .ads--bottom-spacing, .ads--desktop, .ad=
s--full, .ads--menu-principal, .ads--sidebar, .ads--single, .ads--square, .=
ads--top, .ads-120x600, .ads-125, .ads-125-widget, .ads-160-head, .ads-160x=
600, .ads-160x600-outer, .ads-166-70, .ads-180-65, .ads-220x90, .ads-250, .=
ads-290, .ads-300, .ads-300-box, .ads-300x250, .ads-300x250-sidebar, .ads-3=
00x300, .ads-300x600, .ads-300x80, .ads-301, .ads-336-197-qu, .ads-468, .ad=
s-468x60-bordered, .ads-560-65, .ads-600-box, .ads-728, .ads-728-90, .ads-7=
28by90, .ads-728x90, .ads-728x90-wrap, .ads-729, .ads-970x90, .ads-above-co=
mments, .ads-ad, .ads-ads-top, .ads-advertorial, .ads-article-right, .ads-a=
rticlebottom, .ads-banner, .ads-banner-bottom, .ads-banner-js, .ads-banner-=
middle, .ads-banner-top-right, .ads-beforecontent, .ads-below-content, .ads=
-below-home, .ads-bigbox, .ads-block, .ads-block-bottom-wrap, .ads-block-li=
nk-000, .ads-block-link-text, .ads-block-marketplace-container, .ads-block-=
menu-center, .ads-block-panel-tipo-1, .ads-block-rightside { display: none =
!important; color: rgb(92, 46, 103) !important; background-color: rgb(121, =
237, 178) !important; }

.ads-block-top, .ads-block-top-right, .ads-border, .ads-bottom, .ads-bottom=
-block, .ads-bottom-content, .ads-bottom-left, .ads-bottom-right, .ads-box-=
border, .ads-box-header, .ads-box-header-marketplace-right, .ads-box-header=
-pb, .ads-box-header-ws, .ads-box-header-wsl, .ads-btm, .ads-by, .ads-by-go=
ogle-0, .ads-callback, .ads-card, .ads-carousel, .ads-cars-larger, .ads-car=
s-top2, .ads-categories-bsa, .ads-code, .ads-container-mediumrectangle, .ad=
s-container__inner, .ads-custom, .ads-div, .ads-divider, .ads-express, .ads=
-favicon, .ads-feed, .ads-fieldset, .ads-fif, .ads-flow, .ads-full, .ads-go=
ogle, .ads-half, .ads-header-left, .ads-header-right, .ads-here, .ads-home-=
top-buttons-wrap, .ads-horizontal, .ads-horizontal-banner, .ads-horizontal-=
icons-wrap, .ads-inarticle, .ads-inner, .ads-interlinks, .ads-label, .ads-l=
arge, .ads-leaderboard, .ads-leaderboard-border, .ads-leaderboard-panel, .a=
ds-leaderbord, .ads-left, .ads-line, .ads-link, .ads-links-general, .ads-lo=
aded, .ads-long, .ads-main, .ads-margin, .ads-medium-rect, .ads-middle, .ad=
s-middle-top, .ads-mini, .ads-module, .ads-movie, .ads-mpu, .ads-narrow, .a=
ds-native-wrapper, .ads-note, .ads-one, .ads-outer, .ads-player-03, .ads-po=
pup-corner, .ads-post, .ads-post-closing, .ads-post-full, .ads-profile, .ad=
s-rail, .ads-rectangle, .ads-right-min, .ads-rotate, .ads-rpline-com, .ads-=
scroller-box, .ads-side, .ads-sidebar, .ads-sidebar-boxad, .ads-single, .ad=
s-site, .ads-sky, .ads-small, .ads-smartphone, .ads-sponsors, .ads-sponsors=
-125-left, .ads-sponsors-125-right, .ads-square, .ads-squares, .ads-static-=
video-overlay, .ads-story, .ads-stripe, .ads-styled, .ads-superbanner, .ads=
-text, .ads-tittle, .ads-top-728, .ads-top-content, .ads-top-left, .ads-top=
-right, .ads-top-spacer, .ads-txt, .ads-u-1, .ads-ul, .ads-vertical-icons-w=
rap, .ads-video-zone-container, .ads-wide, .ads-widget, .ads-widget-content=
, .ads-widget-partner-gallery, .ads-widget-sponsor-gallery, .ads-wrap, .ads=
-wrapper, .ads-x1, .ads-x1-super, .ads-zone, .ads01, .ads02, .ads03, .ads04=
, .ads05, .ads06, .ads07, .ads08, .ads09, .ads10, .ads1000x100, .ads11, .ad=
s12, .ads120_600, .ads120_600-widget, .ads120_80, .ads120x, .ads123, .ads12=
5, .ads125-widget, .ads13, .ads14, .ads15, .ads160, .ads160-600, .ads160_60=
0-widget, .ads160x600, .ads180x150, .ads1_250, .ads1_label, .ads1_sidebar, =
.ads2, .ads24Block, .ads250, .ads250-250, .ads250_96, .ads3, .ads300, .ads3=
00-200, .ads300-250, .ads300-thumb, .ads300250, .ads300_250, .ads300_250-wi=
dget, .ads300_600-widget, .ads300box, .ads300n, .ads300nb, .ads300x, .ads30=
0x100, .ads300x250, .ads300x250-thumb, .ads315, .ads320x100, .ads324-wrappe=
r, .ads324-wrapper2ads, .ads336_280, .ads336x280, .ads4, .ads460, .ads460_h=
ome, .ads468, .ads468x60, .ads486x100, .ads486x100-1, .ads598x98, .ads5bloc=
ks, .ads600, .ads667x100, .ads720x90, .ads728, .ads728_90, .ads728x90, .ads=
728x90-1, .ads728x90-thumb, .ads970, .adsArea, .adsBanner, .adsBelowHeading=
Normal, .adsBot, .adsBottom, .adsBoxTop, .adsByTJ, .adsCap, .adsCategoryIco=
n, .adsCategoryTitleLink, .adsCell, .adsColumn, .adsCombo02_1, .adsCombo02_=
2, .adsCombo02_3, .adsCombo02_4, .adsCombo02_5, .adsCombo02_6, .adsCombo02_=
7, .adsConfig, .adsCont, .adsDef, .adsDetailsPage, .adsDisclaimer, .adsDiv,=
 .adsFixed, .adsFull, .adsHeader, .adsHeaderFlog, .adsHeading, .adsImages, =
.adsInner, .adsInsideResults_v3, .adsLabel, .adsLibrary, .adsLine, .adsMPU,=
 .adsMag, .adsMiddle, .adsOuter, .adsOverPrimary, .adsPlaceHolder, .adsRect=
angleMedium, .adsRight, .adsRow, .adsSpace300x250, .adsSpace300x600, .adsSp=
ace650x100, .adsSpacing, .adsStickyLeft, .adsStickyRight, .adsTableBlox, .a=
dsTag, .adsText, .adsTextHouse, .adsThema, .adsTop, .adsTopBanner, .adsTopC=
ont, .adsTower2, .adsTowerWrap, .adsTxt, .adsWithUs, .adsWrap, .adsYN, .ads=
ZoneBlock2, .ads_1, .ads_120x60, .ads_120x60_index, .ads_125_square, .ads_1=
60, .ads_180, .ads_2, .ads_3, .ads_300, .ads_300250_wrapper, .ads_300x100, =
.ads_300x239, .ads_300x250, .ads_300x600, .ads_305, .ads_320, .ads_320_100,=
 .ads_330, .ads_337x280, .ads_350, .ads_3col, .ads_4, .ads_460up, .ads_468,=
 .ads_468x60, .ads_600x200, .ads_672, .ads_720x90, .ads_728, .ads_728x90, .=
ads__header, .ads__link, .ads_ad_box, .ads_ad_box2, .ads_admeld, .ads_adsen=
se1, .ads_after, .ads_after_more, .ads_amazon, .ads_amazon_outer, .ads_area=
, .ads_article, .ads_banner, .ads_banner_between, .ads_banner_between_strin=
g, .ads_banniere, .ads_bar, .ads_before, .ads_bg, .ads_big, .ads_big-half, =
.ads_big_right, .ads_big_right_code, .ads_bigrec, .ads_block250, .ads_borde=
r, .ads_box, .ads_box_headline, .ads_brace, .ads_by, .ads_by_tico, .ads_cat=
DivRight, .ads_center, .ads_code, .ads_column, .ads_container, .ads_contain=
er_top, .ads_content, .ads_css, .ads_der, .ads_disc_anchor, .ads_disc_leade=
r, .ads_disc_lwr_square, .ads_disc_rectangle, .ads_disc_skyscraper, .ads_di=
sc_square, .ads_disclaimer, .ads_entrymore, .ads_folat_left, .ads_foot, .ad=
s_footer, .ads_footerad, .ads_frame_wrapper, .ads_google, .ads_h, .ads_head=
er, .ads_header_bottom, .ads_holder, .ads_horizontal, .ads_in_list_autosize=
, .ads_infoBtns, .ads_inline_640, .ads_inside2, .ads_label, .ads_large_ads,=
 .ads_layout_sky, .ads_lb, .ads_leader, .ads_leaderboard, .ads_left, .ads_l=
inkb_728, .ads_loc_bottom, .ads_loc_side, .ads_lr_wrapper, .ads_lr_wrapper2=
, .ads_main, .ads_main_hp, .ads_medium, .ads_medium_rectangle, .ads_medrect=
, .ads_meraki_widget_asa, .ads_middle, .ads_middle_container, .ads_mpu, .ad=
s_mpu_small, .ads_obrazek, .ads_outer, .ads_outline, .ads_player, .ads_post=
, .ads_post_end, .ads_post_end_code, .ads_post_start, .ads_post_start_code,=
 .ads_qc1, .ads_qc2, .ads_r, .ads_rectangle, .ads_rem, .ads_remove, .ads_ri=
ght, .ads_rightbar_top, .ads_sc_bl, .ads_sc_bl_i, .ads_sc_ls_i, .ads_sc_tb,=
 .ads_sc_tl_i, .ads_sep, .ads_show_if, .ads_side, .ads_sideba, .ads_sidebar=
, .ads_sidebar_360, .ads_sidebar_360_b, .ads_singlepost, .ads_slice, .ads_s=
lot, .ads_small, .ads_small_rectangle, .ads_space_long, .ads_spacer, .ads_s=
quare, .ads_takeover, .ads_text, .ads_ticker_main, .ads_tit, .ads_title, .a=
ds_top_banner, .ads_top_both, .ads_top_promo, .ads_topbanner, .ads_topic_30=
0, .ads_topic_after, .ads_topleft, .ads_topright, .ads_tower, .ads_tr, .ads=
_under_fileinfo, .ads_under_player, .ads_up, .ads_up_big2, .ads_upper_right=
_wrap, .ads_verticalSpace, .ads_vtlLink, .ads_vtlList, .ads_wide, .ads_wide=
sky, .ads_widget, .ads_without_height, .ads_wrapperads_top, .adsafp, .adsam=
e-banner-box, .adsanity-group, .adsanity-single, .adsarea, .adsbantop, .ads=
bar, .adsbg300, .adsblock, .adsblockvert, .adsbnr, .adsbody, .adsborder, .a=
dsboth, .adsbottom, .adsbox-square, .adsboxBtn, .adsbox_300x250, .adsboxite=
m, .adsbttmpg, .adsbyadop, .adsbycircumventioncentral, .adsbygoogle-box, .a=
dsbygoogle2, .adsbymahimeta, .adsbysinodia, .adsbyyahoo, .adsbyyottos, .ads=
c, .adscaleAdvert, .adscaleP6_canvas, .adscaleTop, .adscatalog, .adsclick, =
.adscontent250, .adscontentcenter, .adscreen, .adsd_shift100, .adsdisplayga=
mes, .adsdiv, .adsection_a2, .adsection_c2, .adsection_c3, .adsence-domain,=
 .adsens, .adsense-250, .adsense-300x256-widget, .adsense-300x256-widget-2,=
 .adsense-336, .adsense-468, .adsense-ad, .adsense-ads, .adsense-afterpost,=
 .adsense-article, .adsense-attribution, .adsense-block, .adsense-box, .ads=
ense-category, .adsense-category-bottom, .adsense-center, .adsense-code, .a=
dsense-container, .adsense-content, .adsense-div, .adsense-float, .adsense-=
googleAds, .adsense-heading, .adsense-image-detail, .adsense-left, .adsense=
-links, .adsense-links2, .adsense-midtext, .adsense-mod-border, .adsense-mo=
dule, .adsense-overlay, .adsense-post, .adsense-review, .adsense-reviews-fl=
oat, .adsense-right, .adsense-slot, .adsense-square, .adsense-sticky-slide,=
 .adsense-title, .adsense-top, .adsense-top-bar, .adsense-topics-detail, .a=
dsense-unit, .adsense-wide-background, .adsense-widget, .adsense-widget-hor=
izontal, .adsense1, .adsense160x600, .adsense250, .adsense3, .adsense300, .=
adsense300_top, .adsense728, .adsense728x90, .adsenseAds, .adsenseBlock, .a=
dsenseContainer, .adsenseGreenBox, .adsenseInPost, .adsenseLargeRectangle, =
.adsenseList, .adsenseRow, .adsenseSky, .adsenseWrapper, .adsense_200, .ads=
ense_200x200, .adsense_336_280, .adsense_728x15_center, .adsense_afc_relate=
d_art, .adsense_bdc_v2, .adsense_block, .adsense_bottom, .adsense_box01, .a=
dsense_container, .adsense_div_wrapper, .adsense_full_width, .adsense_inner=
, .adsense_leader, .adsense_left_lu, .adsense_mainbox01, .adsense_managed, =
.adsense_managed_, .adsense_media, .adsense_menu, .adsense_mpu, .adsense_re=
ctangle, .adsense_results, .adsense_right, .adsense_sidebar, .adsense_sideb=
ar_top, .adsense_single, .adsense_small_square, .adsense_top, .adsense_top_=
ad, .adsense_top_lu, .adsense_unit, .adsense_x88, .adsensebig, .adsensebloc=
k_bottom, .adsenseblock_top, .adsensefloat, .adsenseformat, .adsenseframe, =
.adsenseleaderboard, .adsenselr, .adsensem_widget, .adsensemainpage, .adsen=
sesky, .adsensesq, .adsensex336, .adsenvelope, .adsep, .adseparator, .adser=
ve_728, .adserver_zone, .adserverad, .adserving, .adset, .adsforums, .adsgh=
ori, .adsgrd, .adsgvert, .adsh, .adshl, .adshowbig, .adshowcase, .adshp, .a=
dside-box-index, .adside-box-single, .adsidebar, .adsidebox, .adsider, .ads=
incs2, .adsingle, .adsitem, .adsize728, .adsizer, .adsjx, .adskeeperWrap, .=
adsleaderboard, .adsleaderboardbox, .adsleff, .adsleft, .adsleftblock, .ads=
libraryArticle, .adslider, .adslink, .adslist, .adslisting, .adslistingz, .=
adslogan, .adslot-area, .adslot-banner, .adslot-billboard, .adslot-mpu, .ad=
slot-rectangle, .adslot-widget, .adslotMid, .adslot_728, .adslot__ad-contai=
ner, .adslot__ad-wrapper, .adslot_bot_300x250, .adslot_side1, .adslothead, =
.adslotleft, .adslotright, .adslug, .adslx-bottom2015, .adslx2015, .adsmall=
, .adsmaller, .adsmalltext, .adsmanag, .adsmbody, .adsmedrect, .adsmedrectr=
ight, .adsmessage, .adsnippet_widget, .adsns, .adsonar-after, .adsonofftrig=
ger, .adsoptimal-slot, .adspace-300x600, .adspace-336x280, .adspace-728x90,=
 .adspace-MR, .adspace-leaderboard, .adspace-mpu, .adspace-widget, .adspace=
1, .adspace180, .adspace2, .adspace728x90, .adspace_2, .adspace_bottom, .ad=
space_buysell, .adspace_rotate, .adspace_skyscraper, .adspace_top, .adspace=
r, .adspan, .adspanel, .adspecial390, .adspeed, .adsplash-160x600, .adsplat=
, .adsponsor, .adspost, .adspot, .adspot-300x250-pos1-container, .adspot-ti=
tle, .adspot1, .adspot200x90, .adspot468x60, .adspot728x90, .adspotGrey, .a=
dspot_468x60, .adspot_728x90, .adsprefooter, .adsrecnode, .adsright, .adss,=
 .adss-rel, .adsskyscraper, .adssmall, .adssquare, .adssquare2, .adstext, .=
adstextpad, .adstipt, .adstitle, .adstop, .adstory, .adstrip, .adstxt, .ads=
tyle, .adsupperugo, .adsupperugo_txt, .adswidget, .adswitch, .adsxpls, .ads=
ystem_ad, .adszone, .adt-300x250, .adt-300x600, .adt-728x90, .adtab, .adtag=
, .adtech, .adtech-ad-widget, .adtech-banner, .adtech-boxad, .adtech-top-ad=
, .adtechMobile, .adtech_wrapper, .adtester-container, .adtext_gray, .adtex=
t_horizontal, .adtext_onwhite, .adtext_vertical, .adtext_white, .adtextleft=
, .adtextright, .adtexts, .adthx, .adtips, .adtips1, .adtoggle, .adtop-bord=
er, .adtops, .adtower, .adtravel, .adtv_300_250, .adtxtlinks, .adult-adv, .=
adunit, .adunit-300-250, .adunit-active, .adunit-container, .adunit-middle,=
 .adunit-parent, .adunit-side, .adunit-title, .adunit125, .adunit160, .adun=
it300x250, .adunit468, .adunit_210x509, .adunit_300x100, .adunit_300x250, .=
adunit_300x600, .adunit_607x110, .adunit_728x90, .adunit_content, .adunit_f=
ooter, .adunit_leaderboard, .adunit_maincol_right, .adunit_rectangle, .adun=
itfirst, .adunitrd, .adup-ad-container, .adv--desktop-top, .adv--intermingl=
ed, .adv--leaderboard, .adv--square, .adv-160, .adv-200-200, .adv-250-250, =
.adv-300, .adv-300-1, .adv-300-250, .adv-300x250, .adv-300x250-generic, .ad=
v-336-280, .adv-4, .adv-468-60, .adv-700, .adv-728, .adv-970, .adv-980x60, =
.adv-ad, .adv-background, .adv-banner, .adv-bar, .adv-before-news-body, .ad=
v-border, .adv-bottom, .adv-box-wrapper, .adv-center, .adv-click, .adv-comm=
ent--opened, .adv-comments, .adv-cont, .adv-cont1, .adv-container, .adv-con=
teiner, .adv-dvb, .adv-format-1, .adv-full-width, .adv-google, .adv-halfpag=
e, .adv-home-300x600, .adv-in-body, .adv-inset, .adv-intext, .adv-intext-la=
bel, .adv-key, .adv-label, .adv-lb, .adv-lb-wrap, .adv-leaderboard, .adv-le=
aderboard-banner, .adv-list_inner, .adv-lshaped-wrapper, .adv-mid-rect, .ad=
v-mid-rect--right, .adv-mpu, .adv-mpu-shoulder, .adv-outer, .adv-overlay, .=
adv-p, .adv-phone, .adv-phone-hp, .adv-rectangle, .adv-right-300, .adv-rota=
tor, .adv-script-container, .adv-search-ad, .adv-sidebar, .adv-sidelabel, .=
adv-slide-block-wrapper, .adv-slot-container, .adv-square-banner, .adv-squa=
rebox-banner, .adv-teaser-divider, .adv-top, .adv-top-container, .adv-top-p=
age, .adv-under-video, .adv-unit, .adv-videoad, .adv-x61, .adv1, .adv200, .=
adv200_border, .adv250, .adv300-250, .adv300-250-2, .adv300-70, .adv300_100=
, .adv300left, .adv300x100, .adv300x250, .adv300x60, .adv300x70, .adv336, .=
adv350, .adv460x60, .adv468, .adv468x110, .adv468x90, .adv728, .adv728_90, =
.adv728x90, .advBottom, .advBottomHome, .advDesktop300x250, .advImagesbox, =
.advInt, .advLB_PageMiddle, .advLeaderboard, .advRightBig, .advSquare, .adv=
Text, .advTicker, .advVideobox, .advWrappers, .adv_120, .adv_120_600, .adv_=
120x240, .adv_120x600, .adv_160_600, .adv_160x600, .adv_2, .adv_250_250, .a=
dv_300_300, .adv_300_top, .adv_300x250, .adv_336_280, .adv_468_60, .adv_630=
, .adv_728_90, .adv_728x90, .adv_90, .adv_PageTop, .adv__container--300x250=
, .adv__container--728x90, .adv__text, .adv_aff, .adv_amazon_single, .adv_b=
anner, .adv_banner_hor, .adv_bg, .adv_blocker, .adv_box_narrow, .adv_cnt, .=
adv_code, .adv_default_box_container, .adv_display, .adv_flash, .adv_floate=
r_left, .adv_floater_right, .adv_headerleft, .adv_headerright, .adv_hed, .a=
dv_here, .adv_in_body_a, .adv_info_text, .adv_jump, .adv_leaderboard, .adv_=
link, .adv_main_middle, .adv_main_middle_wrapper, .adv_main_right_down, .ad=
v_main_right_down_wrapper, .adv_medium_rectangle, .adv_message, .adv_page_b=
locker_overlay, .adv_panel, .adv_pointer_home, .adv_pointer_section, .adv_s=
d_dx, .adv_side1, .adv_side2, .adv_sidebar, .adv_sidebar_300x250, .adv_stan=
dard_d, .adv_td, .adv_top_table, .adv_tr, .adv_under_menu, .adv_underpost, =
.adv_x_1, .adv_x_2, .advads-5, .advads-background, .advads-sticky, .advads-=
widget, .advads_widget, .advallyAdhesionUnit, .advart, .advbanner_300x250, =
.advbanner_300x600, .advbanner_970x90, .advbig, .advbptxt, .adver, .adver-b=
lock, .adver-left, .adver-text, .adverTag, .adverTxt, .adver_bot, .adver_co=
nt_below, .adver_home, .adverdown, .adverhrz, .adverserve145 { display: non=
e !important; color: rgb(92, 46, 103) !important; background-color: rgb(121=
, 237, 178) !important; }

.adverstisement_right, .advert--background, .advert--banner-wrap, .advert--=
fallback, .advert--header, .advert--leaderboard, .advert--mpu, .advert--mpu=
--rhs, .advert--placeholder, .advert--transition, .advert--vc, .advert--vc_=
_wrapper, .advert-100, .advert-120x90, .advert-160x600, .advert-300, .adver=
t-300-side, .advert-300x100-side, .advert-300x250-container, .advert-728, .=
advert-728-90, .advert-728x90, .advert-760, .advert-arch-top, .advert-artic=
le-bottom, .advert-autosize, .advert-banner, .advert-banner-holder, .advert=
-bannerad, .advert-bg-250, .advert-bloggrey, .advert-body-not-home, .advert=
-border, .advert-bot-box, .advert-bottom, .advert-bronze, .advert-bronze-bt=
m, .advert-btm, .advert-center, .advert-center_468x60, .advert-col, .advert=
-col-center, .advert-competitions, .advert-content-item, .advert-detail, .a=
dvert-dfp, .advert-double-mpu, .advert-featured, .advert-footer, .advert-fu=
ll-home-sec, .advert-full-raw, .advert-gold, .advert-group, .advert-head, .=
advert-header-728, .advert-home-380x120, .advert-iab-300-250, .advert-iab-4=
68-60, .advert-image, .advert-info, .advert-label, .advert-leaderboard, .ad=
vert-leaderboard2, .advert-loader, .advert-lower-right, .advert-mini, .adve=
rt-mpu, .advert-mrec, .advert-note, .advert-overlay, .advert-pane, .advert-=
right, .advert-section, .advert-sidebar, .advert-silver, .advert-sky, .adve=
rt-skyscraper, .advert-stub, .advert-text, .advert-three, .advert-tile, .ad=
vert-title, .advert-top, .advert-top-footer, .advert-txt, .advert-under-hed=
aer, .advert-unit, .advert-wide, .advert-words, .advert-wrap, .advert-wrap1=
, .advert-wrap2, .advert-wrapper_rectangle_aside, .advert1, .advert120, .ad=
vert1Banner, .advert300, .advert300-home, .advert300x100, .advert300x250, .=
advert300x300, .advert300x440, .advert300x600, .advert350ih, .advert4, .adv=
ert5, .advert728_90, .advert728x90, .advert8, .advertAreaFrame, .advertBann=
er, .advertBar, .advertBlock, .advertBottom, .advertBox, .advertCaption, .a=
dvertCont, .advertContent, .advertDownload, .advertFullBanner, .advertGener=
ator, .advertHeadline, .advertIframe, .advertIslandWrapper, .advertLink1, .=
advertMiddle, .advertMpu, .advertRight, .advertSideBar, .advertSign, .adver=
tSlot, .advertSuperBanner, .advertTh, .advertThInnBg, .advertTitleSky, .adv=
ertWrapper, .advert_300x250, .advert_336, .advert_468x60, .advert__containe=
r, .advert__fullbanner, .advert__leaderboard, .advert__mpu, .advert__taglin=
e, .advert_back_160x600, .advert_back_300x250, .advert_back_300xXXX, .adver=
t_banner, .advert_banners, .advert_block, .advert_box, .advert_caption, .ad=
vert_cont, .advert_div, .advert_djad, .advert_google_content, .advert_googl=
e_title, .advert_header, .advert_home_300, .advert_img, .advert_in_post, .a=
dvert_label, .advert_leaderboard, .advert_line, .advert_main, .advert_main_=
bottom, .advert_mpu, .advert_mpu_body_hdr, .advert_nav, .advert_note, .adve=
rt_rectangle_aside, .advert_small, .advert_societe_general, .advert_source,=
 .advert_span, .advert_surr, .advert_text, .advert_top, .advert_txt, .adver=
t_wrapper, .advertasingtxt, .advertbar, .adverteaser, .advertembed, .advert=
header-red, .adverthome, .advertis-left, .advertis-right, .advertise-box, .=
advertise-here, .advertise-homestrip, .advertise-horz, .advertise-info, .ad=
vertise-inquiry, .advertise-leaderboard, .advertise-link, .advertise-link-p=
ost-bottom, .advertise-list, .advertise-small, .advertise-square, .advertis=
e-top, .advertise-vert, .advertiseBlack, .advertiseContainer, .advertiseHer=
e, .advertiseLabel234x60, .advertiseLabel300x250, .advertiseText, .advertis=
e_ads, .advertise_box, .advertise_box1, .advertise_box4, .advertise_carouse=
l, .advertise_here, .advertise_link, .advertise_link_sidebar, .advertise_li=
nks, .advertise_sec, .advertise_txt, .advertise_verRight, .advertisebtn, .a=
dvertisedBy, .advertisement--appnexus, .advertisement-160-600, .advertiseme=
nt-2, .advertisement-234-60, .advertisement-250, .advertisement-300, .adver=
tisement-300-250, .advertisement-300x250, .advertisement-300x600, .advertis=
ement-728-90, .advertisement-728x90, .advertisement-750-60, .advertisement-=
BottomRight, .advertisement-after, .advertisement-amazon-banner, .advertise=
ment-background, .advertisement-banner, .advertisement-before, .advertiseme=
nt-bkg, .advertisement-bottom, .advertisement-box, .advertisement-caption, =
.advertisement-cell, .advertisement-comment, .advertisement-container, .adv=
ertisement-content, .advertisement-copy, .advertisement-dashed, .advertisem=
ent-header, .advertisement-information-link, .advertisement-label, .adverti=
sement-label-up-white, .advertisement-layout, .advertisement-leader-board, =
.advertisement-leader-board-second, .advertisement-leaderboard, .advertisem=
ent-nav, .advertisement-other, .advertisement-placeholder, .advertisement-p=
osition1, .advertisement-right, .advertisement-right-rail, .advertisement-s=
idebar, .advertisement-space, .advertisement-sponsor, .advertisement-swimla=
ne, .advertisement-tag, .advertisement-text, .advertisement-title, .adverti=
sement-top, .advertisement-txt, .advertisement-wrapper, .advertisement1, .a=
dvertisement300x250, .advertisement468, .advertisementBackground, .advertis=
ementBanner, .advertisementBannerVertical, .advertisementBar, .advertisemen=
tBlock, .advertisementBox, .advertisementCenterer, .advertisementColumnGrou=
p, .advertisementContainer, .advertisementFull, .advertisementGif, .adverti=
sementHeader, .advertisementImg, .advertisementLabel, .advertisementLabelFo=
oter, .advertisementOutsider, .advertisementPanel, .advertisementReloadable=
, .advertisementRotate, .advertisementSection, .advertisementSmall, .advert=
isementText, .advertisementTop, .advertisement_160x600, .advertisement_300x=
250, .advertisement_728x90, .advertisement__728x90, .advertisement__label, =
.advertisement__title, .advertisement_above_footer, .advertisement_article_=
center_bottom_computer, .advertisement_article_center_middle1_computer, .ad=
vertisement_article_center_middle4_computer, .advertisement_article_center_=
middle6_computer, .advertisement_article_center_top_computer, .advertisemen=
t_article_right_middle2_computer, .advertisement_article_right_top_computer=
, .advertisement_below_news_article, .advertisement_block_234_60, .advertis=
ement_block_468_60, .advertisement_box, .advertisement_btm, .advertisement_=
caption, .advertisement_container, .advertisement_flag, .advertisement_flag=
_sky, .advertisement_g, .advertisement_header, .advertisement_horizontal, .=
advertisement_main_center_bottom_computer, .advertisement_main_right_middle=
2_computer, .advertisement_main_right_top_computer, .advertisement_post, .a=
dvertisement_river, .advertisement_sky, .advertisement_top, .advertisement_=
watchFooter, .advertisementonblue, .advertisementonwhite, .advertisements-l=
ink, .advertisements-right, .advertisements-sidebar, .advertisementsOutterD=
iv, .advertisements_contain, .advertisementsubtitle, .advertiser-links, .ad=
vertisesingle, .advertisespace_div, .advertising--desktop, .advertising--mo=
bile, .advertising--tablet, .advertising-aside-top, .advertising-banner, .a=
dvertising-block, .advertising-box-top-teaser, .advertising-fixed, .adverti=
sing-header, .advertising-inner, .advertising-leaderboard, .advertising-loc=
al-links, .advertising-lrec, .advertising-mention, .advertising-notice, .ad=
vertising-srec, .advertising-top, .advertising-top-banner, .advertising-top=
-box, .advertising-top-category, .advertising160, .advertising2, .advertisi=
ng300_home, .advertising300x250, .advertising728, .advertising728_3, .adver=
tisingBanner, .advertisingBlock, .advertisingBlocks, .advertisingFooterXL, =
.advertisingLabel, .advertisingLegend, .advertisingLrec, .advertisingMob, .=
advertisingSlide, .advertisingTable, .advertising_300x250, .advertising_bot=
tom_box, .advertising_box_bg, .advertising_hibu_lef, .advertising_hibu_mid,=
 .advertising_hibu_rig, .advertising_images, .advertising_widget, .advertis=
ingarea, .advertisingarea-homepage, .advertisingimage, .advertisingimage-ex=
tended, .advertisingimageextended, .advertisingimageextended-link, .adverti=
sment-banner, .advertisment-label, .advertisment-left-panal, .advertisment-=
module, .advertisment-rth, .advertisment-small-container, .advertisment-top=
, .advertismentBox, .advertismentContainer, .advertismentContent, .advertis=
mentText, .advertisment_300x250, .advertisment_bar, .advertisment_caption, =
.advertisment_full, .advertisment_two, .advertize, .advertize_here, .advert=
label, .advertleft, .advertnotice, .advertorial-2, .advertorial-block, .adv=
ertorial-promo-box, .advertorial-wrapper, .advertorial2, .advertorial_728x9=
0, .advertorial_red, .advertorialitem, .advertorialtitle, .advertorialview,=
 .advertorialwidget, .advertplay, .adverts-125, .adverts-inline, .adverts2,=
 .adverts_RHS, .advertspace, .adverttop, .advfrm, .advg468, .advhere, .advi=
mg160600, .advimg300250, .advn_zone, .advoice, .advr, .advr-wrapper, .advr_=
top, .advr_txtcss, .advrectangle, .advrst, .advskin, .advslideshow, .advspo=
t, .advt-banner-3, .advt-block, .advt-box, .advt-sec, .advt-text, .advt300,=
 .advt720, .advtBlock, .advt_160x600, .advt_468by60px, .advt_indieclick, .a=
dvt_single, .advt_title, .advt_widget, .advtimg, .advtitle, .advtop, .advto=
p-leaderbord, .advttopleft, .advword, .adwert, .adwhitespace, .adwide, .adw=
idget, .adword-box, .adword-structure, .adword-text, .adword-title, .adword=
1, .adwordListings, .adwords-container, .adwordsHeader, .adwords_in_content=
, .adwrap, .adwrap-widget, .adwrapper-lrec, .adwrapper1, .adwrapper948, .ad=
x-300x250-container, .adx-300x600-container, .adx-wrapper, .adx-wrapper-mid=
dle, .adxli, .adz-horiz, .adz-horiz-ext, .adz2, .adz728x90, .adzbanner, .ad=
zone, .adzone-footer, .adzone-preview, .adzone-sidebar, .adzone_ad_5, .adzo=
ne_ad_6, .adzone_ad_7, .adzone_ad_8, .adzone_ad_9, .af-block-ad-wrapper, .a=
fc-box, .aff-iframe, .afffix-custom-ad, .affiliate-ad, .affiliate-footer, .=
affiliate-link, .affiliate-mrec-iframe, .affiliate-sidebar, .affiliate-stri=
p, .affiliateAdvertText, .affiliate_ad, .affiliate_header_ads, .affiliate_h=
eader_ads_container, .affiliates-sidebar, .affiliation728x90, .affinityAdHe=
ader, .afns-ad-sponsor-logo, .afsAdvertising, .afsAdvertisingBottom, .aft-t=
op-728x90, .aftContentAdLeft, .aftContentAdRight, .after-content-ad, .after=
-first-post-ad-1, .after-post-ads, .after-story-ad-wrapper, .after_ad, .aft=
er_comments_ads, .after_post_ad, .afterpostadbox, .agi-adsaleslinks, .agi-a=
dtop, .ah-teaser-wrapper, .aisle-ad, .aisoad, .ajaxads, .ajdg_bnnrwidgets, =
.ajdg_grpwidgets, .al-wss-ad, .alb-content-ad, .alignads, .allow-ads, .allp=
ages_ad_bottom, .allpages_ad_top, .alt-ad-box, .alt_ad, .alternatives_ad, .=
am-adContainer, .am-articleItem--bodyAds, .amAdvert, .am_ads, .amazon_ad, .=
amp-ad-container, .amp-ad-wrapper, .amp_ad_1, .amp_ad_header, .amp_ad_wrapp=
er, .ampad, .amsSparkleAdWrapper, .anc_ads_show, .anchor-ad-wrapper, .ancho=
rAd, .anchoringTopAdDefault, .annonce_textads, .annons_themeBlock, .annonst=
ext, .another_text_ad, .answer_ad_content, .aol-knot-fullscreen-right-ad, .=
aol-twist-flyout-ad, .aolSponsoredLinks, .aopsadvert, .ap_str_ad, .apiAdMar=
kerAbove, .apiAds, .apiButtonAd, .app-advertisements, .app_ad_unit, .app_ad=
vertising_skyscraper, .appwidget-journalpromo, .apxContentAd, .archive-ad, =
.archive-ads, .area1_2_ad1, .area5_ad, .areaAd, .area_ad, .area_ad03, .area=
_ad07, .area_ad09, .aroundAdUnit, .artAd, .artAdInner, .art_ad_aside, .art_=
ad_top, .art_ads, .art_aisde_ads, .art_new_ads_468_60, .artcl_promo_ad, .ar=
ticle--ad, .article--adv__before, .article--content-ad, .article-ad, .artic=
le-ad-300x250, .article-ad-970x90, .article-ad-align-left, .article-ad-blk,=
 .article-ad-bottom, .article-ad-box, .article-ad-cont, .article-ad-left, .=
article-ad-main, .article-ad-placeholder, .article-ad-primary, .article-ad-=
row, .article-ad-row-inner, .article-ads, .article-adv-right-sideBar, .arti=
cle-advert-container, .article-advert-dfp, .article-aside-ad, .article-cont=
ent-adwrap, .article-first-ad, .article-footer-ad-container, .article-foote=
r__ad, .article-footer__ads, .article-google-adsense, .article-grid__item--=
advert, .article-header-ad, .article-inline-ad, .article-mid-ad, .article-n=
ews-videoad, .article-sidebar__advert, .article-sponsor, .article-sponsored=
-content-list, .article-top-ad, .article-upper-ad-unit, .article-v2-rail__a=
dvert, .article-view__footer-ad, .articleADbox, .articleAd, .articleAd300x2=
50, .articleAdBlade, .articleAdHeader, .articleAdSlot2, .articleAdTop, .art=
icleAdTopRight, .articleAds, .articleAdsL, .articleAdvert, .articleEmbedded=
AdBox, .articleFooterAd, .articleHeadAdRow, .articlePage3rdPartyContentStri=
p, .articleTopAd, .article__ad-ir, .article__adv, .article_ad250, .article_=
ad_container2, .article_adbox, .article_ads_banner, .article_bottom-ads, .a=
rticle_bottom_ad, .article_google-ad, .article_google_ads, .article_inline_=
ad, .article_inner_ad, .article_list_in_ad, .article_middle_ad, .article_mp=
u, .article_mpu_box, .article_page_ads_bottom, .article_sponsored_links, .a=
rticle_tower_ad, .articlead, .articleads, .articlebodyad, .articlepage_ads_=
1, .articlepage_ads_top, .artist-ad-wrapper, .artnet-ads-ad, .as-admedia, .=
as_ad, .as_social_footer, .aseadn, .aside-ad, .aside-ad-wrapper, .aside-ads=
, .asideAd, .aside_AD01, .aside_AD02, .aside_AD06, .aside_AD08, .aside_AD09=
, .aside_banner_ads, .aside_google_ads, .associated-ads, .async-ad-containe=
r, .atcode_wp_bnn, .atf-ad-medRect, .atf-ad-medrec, .atfAds, .atf_ad300, .a=
tf_ad_box, .attachment-advert_home, .attachment-dm-advert-bronze, .attachme=
nt-dm-advert-gold, .attachment-dm-advert-silver, .attachment-sidebar-ad, .a=
ttachment-sidebarAd, .attachment-sidebar_ad, .attachment-squareAd, .attachm=
ent-weather-header-ad, .auction-nudge, .autoAd, .autoshow-top-ad, .aux-ad-w=
idget-1, .aux-ad-widget-2, .avertissement-download, .b-ad, .b-ad-footerBann=
er, .b-ad-topBanner, .b-ads728, .b-ads_300, .b-ads_gpt, .b-ads_iframe, .b-a=
dsuniversal-wrap, .b-adv-art, .b-adv-mobi, .b-adv-teaser, .b-advert__grid, =
.b-aside-ads, .b-astro-sponsored-links_horizontal, .b-astro-sponsored-links=
_vertical, .b-blockadblock, .b-journalpromo-container, .b-offers_type_extra=
, .b-spec-adv, .b-yabrowser-promo, .b5-ad-pushdown, .b5_widget_skyscraper_a=
d, .b5ad_bigbox, .b5ad_skyscraper, .b_ad, .b_adLastChild, .b_ads, .b_ads_co=
nt, .b_ads_r, .b_ads_top, .back300ad, .backgroundAd, .badge-gag-ads-contain=
er, .bads300, .badxcn, .bam-dcRefreshableAd, .ban-720-container, .ban300sid=
e, .ban420x200, .ban420x260, .ban680x450, .ban728, .ban980x90, .bank-rate-a=
d, .banmanad, .banner--ad, .banner-125, .banner-300, .banner-300-100, .bann=
er-300-250, .banner-300x250, .banner-300x600, .banner-320-100, .banner-468,=
 .banner-468-60, .banner-468x60, .banner-728, .banner-728x90, .banner-950x5=
0, .banner-ad-300x250, .banner-ad-block, .banner-ad-container, .banner-ad-f=
ooter, .banner-ad-label, .banner-ad-row, .banner-ad-space, .banner-ad-wrapp=
er, .banner-ads-300x250, .banner-ads-sidebar, .banner-adsense, .banner-adve=
rt, .banner-adverts, .banner-buysellads, .banner-on-player, .banner-paid-ad=
-label, .banner-rectangleMedium, .banner-sidebar-300x250, .banner-top-ads, =
.banner-top-banner-728x90, .banner1-728x90, .banner120x600, .banner125x125,=
 .banner160, .banner250_250, .banner300_250, .banner300by250, .banner300x84=
, .banner336, .banner336x280, .banner350, .banner468, .banner468by60, .bann=
er728, .banner728-ad, .banner728-container, .banner728x90, .bannerADV, .ban=
nerAd3, .bannerAd300x250, .bannerAdContainer, .bannerAdHHP, .bannerAdLeader=
board, .bannerAdRectangle, .bannerAdSearch, .bannerAdSidebar, .bannerAdTowe=
r, .bannerAdWrap, .bannerAdWrapper300x250, .bannerAdWrapper730x86, .bannerA=
d_rdr, .bannerAds, .bannerAdvert, .bannerAside, .bannerGAd, .bannerRightAd,=
 .bannerTopAdLeft, .bannerTopAdRight, .bannerWrapAdwords, .banner_160x600, =
.banner_234x90, .banner_250x250, .banner_300_250, .banner_300x250, .banner_=
300x250_2, .banner_300x250_3, .banner_300x600, .banner_468_60, .banner_468x=
60, .banner_728_90, .banner_ad-728x90, .banner_ad_233x90, .banner_ad_300x25=
0, .banner_ad_728x90, .banner_ad_footer, .banner_ad_full, .banner_ad_leader=
board, .banner_ads, .banner_ads1, .banner_ads_300x250, .banner_ads_home, .b=
anner_ads_home_inner, .banner_adv, .banner_altervista_300X250, .banner_alte=
rvista_728X90, .banner_mpu_integrated, .banner_reklam, .banner_reklam2, .ba=
nner_slot, .banner_top_index, .bannerad-125tower, .bannerad-468x60, .banner=
ad3, .banneradbottomholder, .banneradd, .bannerads, .banneradsensetop, .ban=
neradsensetoptitle, .banneradv, .bannerandads, .bannergoogle, .bannergroup-=
ads, .bannergroupadvertisement, .banneritem-ads, .banneritem_ad, .bannerpla=
ce728, .banners_ad, .banners_ad_inside, .bannervcms, .bar_ad, .barkerAd, .b=
arstool_ad_floater, .base-ad-mpu, .base-page_center > .banerBottom, .base-p=
age_center > .banerTop, .base-page_center > .banerTopOver, .base-page_conta=
iner > .banerRight, .base-page_left-side > #left_ban, .base_ad, .base_print=
er_widgets_AdBreak, .bb-ad-mrec, .bb-adv-160x600, .bb-adv-300x250, .bb-arti=
cle-sponsor, .bb-md-adv7, .bbccom-advert, .bbccom_advert, .bbsTopAd, .bc-ad=
v, .bc_adv_container, .bci-ad, .bcom_ad, .bean-advertisment, .bean-bag-ad, =
.bean-dfp-ad-unit, .beauty_ads, .before-comment-ad, .before-header-ad, .bef=
ore-injected-ad, .below-article-ad-sidebar, .below-feature-ad-hide-based-he=
ight, .belowNavAds, .below_game_ad, .below_player_ad, .belowthread_advert, =
.belowthread_advert_container, .belt-ad, .belt_ad, .bet_AdBlock, .beteasy_s=
bad, .beteasyadtxt, .bets-ads, .betteradscontainer, .between_page_ads, .bex=
_ad, .bg-ad-link, .bg-ad-top, .bg-ads, .bgAdBlue, .bg_ad, .bgadgray10px, .b=
gcolor_ad, .bgnavad, .bgr_adv_div, .bh_ad_container, .big-ad, .big-box-ad, =
.big-rekl-holder, .big-right-ad, .bigAd, .bigAdContainer, .bigAds, .bigAdvB=
anner, .bigAdvMiddle, .bigAdvMiddlea, .bigBoxAdArea, .bigCubeAd, .big_ad, .=
big_ad2, .big_ads, .big_center_ad, .big_rectangle_page_ad, .bigad, .bigad1,=
 .bigad2, .bigadleft, .bigadright, .bigads, .bigadtxt1, .bigbox-ad, .bigbox=
_ad, .bigboxad, .billboard-ad, .billboard300x250, .billboardAd, .billboard_=
_advert, .billboard_ad, .bing-ads-wrapper, .biz-ad, .biz-ads, .biz-adtext, =
.biz-details-ad, .biz-list-ad, .bizCardAd, .bizDetailAds, .bkg-ad-browse, .=
bl_adv_right, .blacboard-ads-container, .blk_advert, .blocAdInfo, .bloc_ads=
_notice, .bloc_adsense_acc, .block--ad-superleaderboard, .block--ads { disp=
lay: none !important; color: rgb(92, 46, 103) !important; background-color:=
 rgb(121, 237, 178) !important; }

.block--advertising, .block--advertising-header, .block--bean-artadocean-sp=
litter, .block--bean-artadocean-text-link-1, .block--bean-artadocean-text-l=
ink-2, .block--bean-artadocean300x250-1, .block--bean-artadocean300x250-3, =
.block--bean-artadocean300x250-6, .block--simpleads, .block--views-premium-=
ad-slideshow-block, .block-ad-header, .block-ad-leaderboard, .block-ad-mast=
head, .block-ad-middle, .block-ad-mpu, .block-ad-wrapper, .block-ad300, .bl=
ock-ad_injector, .block-ad_tag, .block-admanager, .block-ads, .block-ads-bo=
ttom, .block-ads-eplanning, .block-ads-eplanning-300x250top-general, .block=
-ads-eplanning-300x600, .block-ads-home, .block-ads-top, .block-ads1, .bloc=
k-ads2, .block-ads3, .block-ads_top, .block-adsense, .block-adsense-managed=
, .block-adsense_managed, .block-adspace-full, .block-adtech, .block-adv, .=
block-advertisement, .block-advertising, .block-adzerk, .block-altads, .blo=
ck-ami-ads, .block-appnexus-sidebar-banner-oas-ad, .block-bean-adocean, .bl=
ock-bf_ads, .block-bg-advertisement, .block-bg-advertisement-region-1, .blo=
ck-boxes-ad, .block-boxes-ga_ad, .block-deca_advertising, .block-dennis-ads=
ense-afc, .block-dfp, .block-dfp-ad, .block-dfp-blocks, .block-display-ads,=
 .block-doubleclick_ads, .block-eg_adproxy, .block-fan-ad, .block-fc_ads, .=
block-fcc-advertising, .block-fcc-advertising-first-sidebar-ad, .block-feat=
ured-sponsors, .block-first-sidebar-ad, .block-gc_ad, .block-gg_ads, .block=
-google-admanager, .block-google-admanager-dfp, .block-google_admanager, .b=
lock-google_admanager2, .block-hcm-ads, .block-hcm_ads, .block-heremedia-ad=
s, .block-inner-adds, .block-itg-ads, .block-ltadvertising, .block-maniad, =
.block-module-ad, .block-module-ad-300x250, .block-module-ad-300x600, .bloc=
k-mps, .block-nmadition, .block-nst-googledfp, .block-ohtdisplayad, .block-=
openads, .block-openadstream, .block-openx, .block-pm_doubleclick, .block-r=
eklama, .block-skyscraper-ad, .block-sn-ad, .block-sn-ad-blog-wrapper, .blo=
ck-sponsor, .block-sponsored-links, .block-thirdage-ads, .block-vh-adjuggle=
r, .block-views-blockdetail-page-ads-block-3, .block-wtg_adtech, .block-yt-=
ads, .block-zagat_ads, .block1--ads, .blockAd, .blockAd300x97, .blockAds, .=
blockAdvertise, .block__advertising, .block__advertising-content, .block__a=
dvertising-header, .block_ad, .block_ad_floating_bar, .block_ad_middle, .bl=
ock_ad_sb_text, .block_ad_sb_text2, .block_ad_sponsored_links, .block_ad_sp=
onsored_links-wrapper, .block_ad_sponsored_links_localized, .block_ad_spons=
ored_links_localized-wrapper, .block_ad_top, .block_ads, .block_adslot, .bl=
ock_adv, .block_advert, .block_bigad, .blockad, .blockadwide, .blocked-ads,=
 .blockid_google-adsense-block, .blockrightsmallads, .blocsponsor, .blog-ad=
, .blog-ad-leader-inner, .blog-ads-container, .blog-ads-top, .blog-advertis=
ement, .blog-post__video-ad, .blog-view-ads, .blog2AdIntegrated, .blogAd, .=
blogAdvertisement, .blogArtAd, .blogBigAd, .blog_ad, .blog_ad_continue, .bl=
og_divider_ad, .blogads, .blogads-sb-home, .blogroll-ad-img, .blogs_2_squar=
e_ad, .blox3featuredAd, .blue-ad, .blxAdopsPlacement, .bmg-sidebar-ads-125,=
 .bmg-sidebar-ads-300, .bn_ads, .bn_advert, .bn_textads, .bnr_ad, .bo-top-a=
d-bottom, .bo-top-left-ad, .bo-top-right-ad, .bodaciousad, .body-ad, .body-=
ads, .body-adzone, .bodyAd, .body_ad, .body_sponsoredresults_bottom, .body_=
sponsoredresults_middle, .body_sponsoredresults_top, .body_width_ad, .bodya=
ds, .bodyads2, .bodybannerad, .bodyrectanglead, .bomAd, .bonnier-ad, .bonni=
er-ads, .bonnier-ads-ad-bottom, .bonnier-ads-ad-top, .bookad, .bookseller-h=
eader-advt, .booster-ad, .bostad, .bot-728x90-ad, .bot-affiliate, .botAd, .=
botRectAd, .bot_ad, .bot_ads, .botad2, .bottom-ad-banner, .bottom-ad-box, .=
bottom-ad-container, .bottom-ad-desktop, .bottom-ad-fr, .bottom-ad-large, .=
bottom-ad-placeholder, .bottom-ad-tagline, .bottom-ad-wrapper, .bottom-ad2,=
 .bottom-ads-sticky, .bottom-ads-wrapper, .bottom-ads728, .bottom-adv, .bot=
tom-banner-ad, .bottom-center-adverts, .bottom-game-ad, .bottom-large-googl=
e-ad, .bottom-leaderboard-adslot, .bottom-left-fixed-ad, .bottom-main-adsen=
se, .bottom-mpu-ad, .bottom-right-advert, .bottom-rightadvtsment, .bottom-s=
ide-advertisement, .bottom-slider-ads, .bottom-sponsored-header, .bottom2-a=
dv, .bottomAd, .bottomAdBlock, .bottomAdContainer, .bottomAdsTitle, .bottom=
AdvTxt, .bottomAdvert, .bottomAdvertisement, .bottomAdvt, .bottomArticleAds=
, .bottomBannerAd, .bottomBannerAdsSmallBotLeftHolder, .bottomELAd, .bottom=
FriendsAds, .bottomReviewAd, .bottom_ad, .bottom_ad_placeholder, .bottom_ad=
_responsive, .bottom_adbreak, .bottom_ads, .bottom_ads_wrapper_inner, .bott=
om_adsense, .bottom_adspace, .bottom_advert_728x90, .bottom_advertise, .bot=
tom_banner_ad, .bottom_banner_advert_text, .bottom_bar_ads, .bottom_left_ad=
vert, .bottom_right_ad, .bottom_rightad, .bottom_side_ad, .bottom_sponsor, =
.bottomad, .bottomad-bg, .bottomadarea, .bottomads, .bottomadtag, .bottomad=
top, .bottomadvert, .bottomadwords, .bottombarad, .bottomgooglead, .bottoml=
eader, .bottomleader-ad-wrapper, .bottomrightrailAd, .bottomvidad, .botton_=
advertisement, .box-ad, .box-ad-a, .box-ad-grey, .box-ad-mr1, .box-ad-right=
-column, .box-ad-unit-j, .box-ad-wsr, .box-ads-small, .box-adsense, .box-ad=
v-300-home, .box-adv-300-text-bottom, .box-adv-social, .box-advert, .box-ad=
vert-sponsored, .box-advertisement, .box-advertising1, .box-adverts, .box-e=
ntry-ad, .box-entry-ad-bottom-single, .box-entry-detail--ad, .box-footer-ad=
, .box-google-text-ad, .box-sidebar-ad, .box-sidebar-ad-125, .box-sidebar-a=
d-160, .box-sidebar-ad-300, .box-taboola-content, .box1-ad, .boxAd, .boxAdC=
ontainer, .boxAdFields, .boxAdMrec, .boxAds, .boxAdsInclude, .boxAdvertisem=
ent, .boxOuterAD, .boxSponsor, .box_ad, .box_ad_container, .box_ad_content,=
 .box_ad_horizontal, .box_ad_spacer, .box_ad_wrap, .box_ads728x90_holder, .=
box_adv1, .box_adv2, .box_adv_728, .box_adv_hp, .box_adv_new, .box_advertis=
ing, .box_advertising_info, .box_advertisment_62_border, .box_content_ad, .=
box_content_ads, .box_publicidad, .box_sidebar-ads, .box_textads, .box_titl=
e_ad, .boxad1, .boxad120, .boxadcont, .boxads, .boxcontentad, .boxsponsor2,=
 .boxyads, .bps-ad-wrapper, .bps-advertisement, .bps-advertisement-inline-a=
ds, .bps-advertisement-placeholder, .bps-search-chitika-ad, .bq_ad_320x250,=
 .bq_adleaderboard, .bq_rightAd, .br-ad, .br-ad-text, .br-ad-wrapper, .br-b=
anner-ad, .br-right-rail-ad, .brand_ad, .branding-ad-gallery, .branding-ad-=
wrapper, .brandpost_inarticle, .brave-overlay, .bravo-ad, .breadads, .bread=
cumbad, .breakad_container, .breaker-ad, .breakerAd, .breakingNewsModuleSpo=
nsor, .breakthrough-ad, .broker-ad, .broker-ads, .broker-ads-center, .broke=
r_box_ad, .brokerad, .browse-ad-container, .browse-banner_ad, .browse-by-ma=
ke-ad, .browser_boot_ad, .bs-ad, .bsAdvert, .bsa-in-post-ad-125-125, .bsaPr=
oContainer, .bsa_ads, .bsa_it_ad, .bsac, .bsac-container, .bt_ad, .btf-ad-m=
edRect, .btfAds, .btm_ad, .btm_ad_container, .btn-newad, .btn_ad, .budget_a=
ds_1, .budget_ads_2, .budget_ads_3, .budget_ads_bg, .bulk-img-ads, .bullet-=
sponsored-links, .bullet-sponsored-links-gray, .bump-ad, .bunyad-ad, .burst=
ContentAdIndex, .businessads, .busrep_poll_and_ad_container, .button-ad, .b=
utton-ads, .buttonAd, .buttonAdSpot, .buttonAds, .button_ad, .button_ads, .=
button_advert, .buttonad, .buttonad_v2, .buttonadbox, .buttonads, .buySellA=
dsContainer, .buysellAds, .buysellAdsSmall, .buzzAd, .buzz_ad_block, .buzz_=
ad_wrap, .bx_ad, .bx_ad_right, .bxad, .bz-ad, .bzads-ic-ad-300-250-600, .c-=
ad, .c-ad--text-only, .c-ad--unlabeled, .c-ad-size2, .c-ad-size3, .c-adcont=
ainer, .c-adunit, .c-adunit--billboard, .c-adunit--first, .c-adunit__contai=
ner, .c-advert-app, .c-advert-superbanner, .c-advertisement, .c-advertiseme=
nt--billboard, .c-advertisement--leaderboard, .c-advertisement--rectangle, =
.c-advertisement--rectangle-float, .c-advertising, .c-control--adchoice, .c=
-fallback-ad, .c-fallback-ad--house, .c-news-feed-ads, .c-res-ad, .c-sitena=
v-adslot, .c300x250-advert, .c3_adverts, .cA-adStack, .cA-adStrap, .cColumn=
-TextAdsBox, .cLeftTextAdUnit, .c_adsky, .c_google_adsense_nxn, .c_ligatus_=
nxn, .cableads, .calendarAd, .calloutAd, .calls-to-action__sidebar-ad-conta=
iner, .canoeAdvertorial, .carbon_ads, .carbonad, .carbonad-tag, .card--ad, =
.card--article-ad, .card-ad, .card-ads, .cards-categorical-list-ad, .care2_=
adspace, .careerAdviceAd1, .carouselbanner_advert, .carouselbannersad, .cat=
-adv, .cat-adv1, .cat-advb0, .cat-advl2, .cat_context_ad, .catalog-listing-=
ad-item, .catalog_ads, .catalyst-ads, .cate_right_ad, .category-advertorial=
, .category-top-ads, .categorySponsorAd, .category__big_game_container_body=
_games_advertising, .categoryfirstad, .categoryfirstadwrap, .categorypage_a=
d1, .categorypage_ad2, .catfish_ad, .cb-ad-banner, .cb-ad-container, .cb_ad=
s, .cb_navigation_ad, .cbolaBannerStructure, .cbs-ad, .cbs-ad-unit, .cbs-ad=
-unit-wrapper, .cbstv_ad_label, .cbzadvert, .cbzadvert_block, .cc-adv-label=
, .cc-adv-wrapper, .cc-advert, .ccAdbottom, .ccAdsize, .ccAdtop, .cct-temps=
kinad, .cdAdContainer, .cdAdTitle, .cdLanderAd, .cdc-ad, .cde_ads_right_top=
_300x250, .cdmainlineSearchAdParent, .cdo-ad, .cdo-ad-section, .cdo-dicthom=
epage-btm-ad, .cdsidebarSearchAdParent, .center-ad, .center-ad-banner, .cen=
ter-gray-ad-txt, .centerAD, .centerAd, .centerAdBar, .centerAds, .center_ad=
, .center_add, .center_ads, .center_adsense, .centerad, .centerads, .center=
adv, .centered-ad, .centered_wide_ad, .centralizer-adx, .cg_ad_slug, .cgs-a=
d-spot, .ch[onclick=3D"ga(this,event)"], .ch_advertisement, .change-ad-h-bt=
n, .changeableadzone, .channel--ad, .channel-adv, .channel_ad_2016, .channe=
l_brand_ad, .chartad, .chartlist-row--interlist-ad, .chitika-ad, .chitikaAd=
Copy, .chrt-subheader__adv, .cinemabotad, .cjpopup, .cl-ad-inpager, .cl-ad-=
slot-post1, .cl-ad-slot-post2, .clHeader_Ad, .classifiedAdSplit, .classifie=
dAdThree, .cldt-ad-top, .clearerad, .clickforceads, .client-ad, .close-ad-w=
rapper, .close2play-ads, .cls_PostBottomInArticleAdsence_divContents, .cls_=
PostFooterAdsence_divContents, .cm-ad, .cm-ad-row, .cm-hero-ad, .cm-rp01-ad=
, .cm-rp02-ad, .cm-take-a-break-ad-area, .cmAd, .cmAdCentered, .cmAdContain=
er, .cmAdFind, .cmAdSponsoredLinksBox, .cmBottomAdRight, .cmMediaRotatorAd,=
 .cmMediaRotatorAdSponsor, .cmRecentOnAirAds, .cmTeaseAdSponsoredLinks, .cm=
_ads, .cmam_responsive_ad_widget_class, .cmg-ads, .cmi-content-3ads-horizon=
tal, .cms-Advert, .cms-magazine-rightcol-adtag, .cms_ad_contentad, .cn24-ad=
s, .cn24-ads-160x600, .cn24-ads-300x250, .cn24-ads-600x290, .cnAdContainer,=
 .cnAdDiv, .cnAdzerkDiv, .cnIframeAdvertisements, .cn_ad_placement, .cnbcHe=
aderAd, .cnbcRailAd, .cnbc_badge_banner_ad_area, .cnbc_banner_ad_area, .cnb=
c_leaderboard_ad, .cnn160AdFooter, .cnnAd, .cnnSearchSponsorBox, .cnnStoreA=
d, .cnnStoryElementBoxAd, .cnnWCAdBox, .cnnWireAdLtgBox, .cnn_728adbin, .cn=
n_adbygbin, .cnn_adcntr300x100, .cnn_adcntr728x90, .cnn_adcntr728x90t, .cnn=
_adspc300x100, .cnn_adspc336cntr, .cnn_adtitle, .cnn_fabcatad, .cnn_grpnadc=
lk, .cnn_pt_ad, .cnn_sectprtnrbox_cb, .cnn_sectprtnrbox_grpn336, .cns-ads-s=
tage, .cnt-ad-square, .cnt-half-page-ads, .cnt-header-ad, .cnt-right-box-ad=
, .cnt-right-vertical-ad, .cnt-right-vertical-ad-home, .cntAd, .cnt_ad, .cn=
trad, .cobalt-ad, .codeneric_ultimate_ads_manager_ad_wrapper, .col-ad, .col=
-ad-hidden, .col-line-ad, .colRightAd, .col_ad, .col_header_ads_300x250, .c=
olads, .collapse-ad-mob-wrapper, .colombiaAd, .column-ad, .column2-ad, .col=
umnAdvert, .columnBoxAd, .columnRightAdvert, .column_3_ad, .com-ad-server, =
.comment-ad, .comment-ad-wrap, .comment-advertisement, .comment_ad, .commen=
t_ad_box, .commentsFavoritesAd, .commentsbannerad, .commercial-ad, .commerc=
ial-ad-long, .commercial-unit-desktop-rhs, .commercial-unit-desktop-top, .c=
ommercial-unit-mobile-bottom, .commercial-unit-mobile-top, .commercialAd, .=
common-adv-box, .common_advertisement_title, .communityAd, .comp_AdsFrontPa=
ge_300x600, .companion-ad, .companion-ads, .companionAd, .companion_ad, .co=
mpareBrokersAds, .component-ddb-300x250-v2, .component-ddb-728x90-v2, .comp=
onent-sponsored-links, .component-zergnet, .conTSponsored, .con_widget_adve=
rtising, .conductor_ad, .confirm_ad_left, .confirm_ad_right, .confirm_leade=
r_ad, .consoleAd, .cont-ad, .contads_middle, .contained-ad-shaft, .containe=
d-ad-wrapper, .container--ad, .container--bannerAd, .container--header-ads,=
 .container-ad-600, .container-adbanner-global, .container-adbanner-list, .=
container-adbanner-mobile, .container-adds, .container-advMoreAbout, .conta=
iner-adwords, .container-lower-ad, .container-rectangle-ad, .container-top-=
adv, .container-type-banner-advert, .containerAdsense, .containerSqAd, .con=
tainer_serendipity_plugin_google_adsense, .contains-ad, .content-ad, .conte=
nt-ad-article, .content-ad-box, .content-ad-left, .content-ad-outer-contain=
er, .content-ad-right, .content-ad-side, .content-ad-widget, .content-ad-wr=
apper, .content-ads, .content-advert, .content-advertisment, .content-botto=
m-mpu, .content-box-inner-adsense, .content-cliff__ad, .content-cliff__ad-c=
ontainer, .content-footer-ad, .content-footer-ad-block, .content-header-ad,=
 .content-item-ad-top, .content-kuss-ads, .content-list__ad-label, .content=
-result-ads, .content-top-mpu, .content-unit-ad, .content-zergnet, .content=
1-ad, .content2-ad, .contentAd510, .contentAdBox, .contentAdContainer, .con=
tentAdFoot, .contentAdIndex, .contentAdsCommon, .contentAdsWrapper, .conten=
tAdvertisement, .contentTopAd, .contentTopAdSmall, .contentTopAds, .content=
_468_ad, .content__right > .z-market_right_yes, .content_ad, .content_ad_72=
8, .content_ad_head, .content_ad_side, .content_ads_index, .content_adsense=
, .content_adsq, .content_advert, .content_advertising, .content_advt, .con=
tent_bottom_adsense, .content_column2_ad, .content_inner_ad, .content_left_=
advert, .content_middle_adv, .contentad, .contentad-home, .contentad300x250=
, .contentad_right_col, .contentadarticle, .contentadfloatl, .contentadleft=
, .contentads1, .contentads2, .contentadstartpage, .contentadstop1, .conten=
tadvside, .contentleftad, .contentpage_searchad, .contents-ads-bottom-left,=
 .contenttextad, .contentwellad, .contentwidgetads, .contest_ad, .contextua=
lAds, .contextual_ad_unit, .convert-media-ad, .copy-adChoices, .core-adplac=
e, .cornerBoxInnerWhiteAd, .cornerad, .cosmo-ads, .counterAdblocks, .cp-sma=
lladv, .cp_ad, .cpaAdPosition, .cpmstarHeadline, .cpmstarText, .cr_ad, .cra=
nky-ads-zone, .create_ad, .credited_ad, .criAdv, .criteo-ad, .cross_delete_=
ads, .crumb-ad, .cs-adv-wrapper, .cs-mpu, .csPromoAd, .csa-adsense, .cscTex=
tAd, .cse_ads, .csiAd_medium, .csm-strategy-id-ad-placements-dynamic-1, .cs=
pAd, .css-live-widget_googleAdBlock, .ct-ad-article, .ct-ad-article-wrapper=
, .ct-ads, .ct-bottom-ads, .ct_ad, .cta-ad, .ctn-advertising, .ctnAdSkyscra=
per, .ctnAdSquare300, .ctn_ads_rhs, .ctn_ads_rhs_organic, .ctpl-duplicated-=
ad, .ctr-tss-ads, .cube-ad, .cubeAd, .cube_ad, .cube_ads, .cubead-widget, .=
currency_ad, .custom-ad-container, .custom-ad-one, .custom-ads, .custom-adv=
ert-banner, .custom-banner-leaderboard-ad, .customAd, .custom_ads, .custom_=
banner_ad, .custom_footer_ad, .customadvert, .customized_ad_module, .cwAdve=
rt, .cwv2Ads, .cxAdvertisement, .cyads650x100, .d1-top-ad, .d499d-ads-160x9=
0-left, .d499d-ads-160x90-right, .d499d-ads-311x300-up, .d499d-ads-635x100,=
 .da-custom-ad-box, .da-widget, .da_adp_teaser, .dac__banner__wrapper, .dac=
__mpu-card, .dac__stream-mpu-card, .darla_ad, .dart-ad, .dart-ad-content, .=
dart-ad-grid, .dart-ad-taboola, .dart-ad-title, .dart-advertisement, .dart-=
leaderboard, .dart-leaderboard-top, .dart-medsquare, .dartAd300, .dartAd491=
, .dartAdImage, .dart_ad, .dart_tag, .dartad, .dartadbanner, .dartadvert, .=
dartiframe, .datafile-ad, .dc-ad, .dc-banner, .dc-half-banner, .dc-widget-a=
dv-125, .dcAdvertHeader, .dcmads, .dd-ad, .dd-ad-container, .dda-ad, .ddb, =
.ddc-table-ad, .deadblocker-header-bar, .deadblocker-header-bar-inner, .dec=
kAd, .deckads, .default-teaser__adv, .demo-advert, .desktop-ad-banner, .des=
ktop-ads, .desktop-advert, .desktop-aside-ad, .desktop-aside-ad-hide, .desk=
top-postcontentad-wrapper, .desktop_only_ad, .desktopads, .desktoponlyad, .=
detail-ad, .detail-ads, .detailMpu, .detailSidebar-adPanel, .detail_ad, .de=
tail_article_ad, .detail_top_advert, .details-advert, .devil-ad-spot, .dfad=
, .dfad_first, .dfad_last, .dfad_pos_1, .dfad_pos_2, .dfad_pos_3, .dfad_pos=
_4, .dfad_pos_5, .dfad_pos_6, .dfads-javascript-load, .dfp-ad-advert_mpu_bo=
dy_1, .dfp-ad-container, .dfp-ad-full, .dfp-ad-hideempty, .dfp-ad-rect, .df=
p-ad-widget, .dfp-ads-ad-article-middle, .dfp-ads-embedded, .dfp-adspot, .d=
fp-banner, .dfp-banner-slot, .dfp-button, .dfp-dynamic-tag, .dfp-leaderboar=
d, .dfp-plugin-advert, .dfp-slot-wallpaper, .dfp-super-leaderboard, .dfp-to=
p1, .dfp-top1-container, .dfpAdvert, .dfp_ad, .dfp_ad_caption, .dfp_ad_cont=
ent_bottom, .dfp_ad_content_top, .dfp_ad_footer, .dfp_ad_header, .dfp_ad_in=
ner, .dfp_ad_unit, .dfp_slot, .dfp_unit, .dfp_unit-ad_container, .dfrads, .=
dhAdContainer14, .dianomi-ad, .diggable-ad-sponsored, .dikr-responsive-ads-=
slot, .directadvert-block, .discourse-google-dfp, .display-ad, .display-ad-=
block, .display-ads-block, .display-advertisement, .displayAd728x90Js, .dis=
playAdCode, .displayAdSlot, .displayAdUnit, .displayAds, .display_ad, .disp=
lay_ads_right, .display_adv_show, .display_advrst, .dispositifAdblock, .dis=
positifAdblockContent, .dispositifAdblockMessageBox, .div-google-adx, .div-=
gpt-ad, .div-gpt-ad--interstitiel, .div-gpt-ad--top, .divAd, .divAdright, .=
divAdsBanner, .divAdsLeft, .divAdsRight, .divAdvTopRight, .divGoogleAdsTop,=
 .divMAD2, .divReklama, .divRepAd, .divSponsoredBox, .divSponsoredLinks, .d=
ivTopADBanner, .divTopADBannerWapper, .divTopArticleAd, .div_adv300, .div_a=
dv620, .div_adv728, .div_advertisement, .div_advertorial, .div_advstrip, .d=
iv_banner468, .divad1, .divad2, .divad3, .divads { display: none !important=
; color: rgb(92, 46, 103) !important; background-color: rgb(121, 237, 178) =
!important; }

.divadsensex, .divider-ad, .divider-advert, .divider-full-width-ad, .divide=
r_ad, .dlSponsoredLinks, .dm-ads-125, .dm-ads-350, .dmRosMBAdBox, .dm_ad-co=
ntainer, .dmco_advert_iabrighttitle, .dn-ad-small, .dn-ad-wide, .dod_ad, .d=
ouble-ad, .double-ads, .double-click-ad, .double-square-ad, .doubleGoogleTe=
xtAd, .double_adsense, .double_click_widget, .doubleclick-ad, .doubleclick_=
adtype, .download-ad, .downloadAds, .download_adv_text_video, .download_lin=
k_sponsored, .downloadad, .drop-ad, .dropdownAds, .ds-ad, .ds-ad-300, .ds-a=
d-col-container, .ds-ad-container, .ds-ad-container-300, .ds-ad-container-7=
28, .ds-ad-container-home, .ds-ad-container-ros, .ds-ad-home, .ds-ad-inner,=
 .ds-ad-ros, .dsq_ad, .dual-ads, .dualAds, .dva_ad, .dvad1, .dvad2, .dvad3,=
 .dvad3mov, .dvad4, .dvad4cont, .dvad5, .dvad5cont, .dvadevent, .dvadvhw, .=
dvcvmidads, .dvcvrgtad, .dw-sticky-ad, .dw-sticky-ad-inner, .dw-sticky-ad-l=
eft, .dwn_link_adv, .dynamic-ad-wrap-b, .dynamic-ads, .dynamicAdvertContain=
er, .dynamicLeadAd, .dynamic_adslot, .dynamicad1, .dynamicad2, .e-ad, .e-ad=
vertise, .e-ta-rg, .eads, .earAdv, .east_ad_bg, .east_ad_block, .easy-ads, =
.easyAdsBox, .easyAdsSinglePosition, .eb_ad280, .ebayads, .ec-ads, .ec_ad_b=
anner, .econo-ads1, .ecosia-ads, .editor_ad, .editorial-adsense, .editors-a=
ds, .ehs-adbridge, .eight8_advertisment_box_all_posts, .ej-advertisement-te=
xt, .element--ad, .element-ad, .element-adplace, .em-ad, .em-ads-widget, .e=
m_ad_300x250, .em_ads_box_dynamic_remove, .embAD, .embed-ad, .embedded-arti=
cle-ad, .embeddedAd, .embeddedAds, .emm-ad, .empty-ad, .endemic_ads, .eng_a=
ds, .engagement_ad, .eniro_ad, .enterpriseAd, .entry-ad, .entry-ads, .entry=
-ads-110, .entry-body-ad, .entry-bottom-ad, .entry-injected-ad, .entry-top-=
ad, .entryAd, .entry_sidebar_ads, .entryad, .eol-ads, .epicgame-ads, .esp_p=
ublicidad, .et-single-post-ad, .etad, .eu-advertisment1, .eu-advertisment2,=
 .eu-miniadvertisment, .event-ads, .event-ads-inside, .ew-ad-placeholder, .=
exec-advert-flash, .exo-native-widget, .exo-native-widget-header, .exo-nati=
ve-widget-outer-container, .exo1-native-widget, .expanding-ad, .expertsAd, =
.explore-ad, .ext-ad, .external-add, .externalAdComponent, .extrasColumnFus=
eAdLocal, .ez-ad, .ez-clientAd, .ezAdsWidget, .ezo_ad, .ezoic-ad, .ezoic-fl=
oating-bottom, .f-ad, .f-item-ad, .fN-affiliateStrip, .f_Ads, .fa-google-ad=
, .facebook-ad, .fbCalendarAds, .fbPhotoSnowboxAds, .fblockad, .fbs-ad--ntv=
-home-wrapper, .fbs-ad--progressive, .fbs-ad--top-wrapper, .fbs-ad--topx-wr=
apper, .fc_splash_ad, .fd-ad, .fd-display-ad, .fdDisplayAdGrid, .fdc_ad, .f=
e-blogs__desktop-ad, .fe-blogs__sidebar-ad, .fe-blogs__sidebar-ad--sticky-f=
ix, .fe-blogs__sidebar-ad-wrapper, .fe-blogs__top-ad, .fe-blogs__top-ad-wra=
pper, .fe-blogs__top-ad-wrapper-leaderboard, .feSideAdBlock, .feSideAdv, .f=
eat_ads, .feature-advertorial-image, .featureAd, .feature_ad, .featured-ads=
, .featured-sponsors, .featured-story-ad, .featuredAds, .featuredBoxAD, .fe=
atured_ad, .featured_ad_item, .featured_advertisers_box, .featuredadvertisi=
ng, .features-advertorial-wrapper, .features-advetorial-heading, .features-=
advetorial-wrapper, .feed-ad, .feed-s-update--is-sponsored, .feed-shared-po=
st-meta--is-sponsored, .feed-shared-update--is-sponsored, .feedBottomAd, .f=
eeds-adblade, .ffz_bottom_ad, .fg_Ad, .fgc-advertising, .fi-adv-halfpage, .=
fi-adv-placeholder, .fi_adsense, .field-name-shared-ad-placement-landscape,=
 .field-name-sticky-ads-div, .finpostsads, .fireplaceadleft, .fireplaceadri=
ght, .fireplaceadtop, .first-ad, .first-ad-wrap, .first_ad, .first_post_ad,=
 .firstad, .firstadsmobile, .firstpost_advert, .firstpost_advert_container,=
 .fist-advertise-box, .five-col-adpubs, .fiveMinCompanionBanner, .fix-ad, .=
fixed-ad-160x600, .fixed-ad-bottom, .fixed-ad-bottom--banner, .fixed-ad300-=
1, .fixed-ads-header, .fixedAds, .fixedRightAd, .fixed_ad_336x280, .fl-ads,=
 .fl-adsense, .fl_adbox, .flagads, .flashAd, .flash_ad, .flash_advert, .fla=
shad, .flashadd, .flat_ads_block, .flex-ad, .flexAd, .flexad, .flexadvert, =
.flexbanneritemad, .flexiad, .flipbook_v2_sponsor_ad, .flm-ad, .floatAdv, .=
floatad, .floatads, .floated-ad, .floated_right_ad, .floating-advert, .floa=
tingAds, .flurryAdsType1, .fly-ad, .flyercity-ads, .fm-badge-ad, .fnadvert,=
 .fns_td_wrap, .fold-ads, .follower-ad-bottom, .following-ad, .following-ad=
-container, .foot-ad, .foot-ads, .foot-advertisement, .foot_adsense, .foota=
d, .footer-300-ad, .footer-ad-elevated, .footer-ad-full-wrapper, .footer-ad=
-section, .footer-ad-squares, .footer-ad1, .footer-ads-wrapper, .footer-ads=
_unlocked, .footer-adsbar, .footer-adsense, .footer-advert, .footer-advert-=
large, .footer-advertisement, .footer-advertisement-container, .footer-adve=
rtisements, .footer-advertising-area, .footer-banner-ad, .footer-floating-a=
d, .footer-im-ad, .footer-leaderboard-ad, .footer-ribbon-ad, .footer-text-a=
ds, .footerAd, .footerAdModule, .footerAdUnit, .footerAdWrapper, .footerAds=
, .footerAdsWrap, .footerAdslot, .footerAdverts, .footerFullAd, .footerGoog=
leAdMainWarp, .footerTextAd, .footer_ad336, .footer_ad_container, .footer_a=
ds, .footer_adv, .footer_advertisement, .footer_banner_ad_container, .foote=
r_block_ad, .footer_bottom_ad, .footer_bottomad, .footer_line_ad, .footer_t=
ext_ad, .footer_text_adblog, .footerads, .footeradspace, .footertextadbox, =
.for-taboola, .foreign-ad01, .foreign-ad02, .forex_ad_links, .fortune-ad-un=
it, .forum-ad, .forum-ad-2, .forum-topic--adsense, .forum_ad_beneath, .foru=
mtopad, .four-ads, .four-six-eight-ad, .four_button_threeone_ad, .four_perc=
ent_ad, .fp-ad300, .fp-adinsert, .fp-ads, .fp-right-ad, .fp-right-ad-list, =
.fp-right-ad-zone, .fp_ad_text, .fr_ad_loading, .frame_adv, .framead, .free=
download_ads, .freegame_bottomad, .freewheelDEAdLocation, .frn_adbox, .frn_=
adbox_placeholder, .frn_contAdHead, .frn_cont_adbox, .frn_placeholder_googl=
e_ads, .fromoursponsor, .front_ad, .frontads, .frontone_ad, .frontpage-goog=
le-ad, .frontpage-mpu-section-ad, .frontpage-right-ad, .frontpage-right-ad-=
hide, .frontpage_ads, .fs-ad-block, .fs1-advertising, .fsAdContainer, .fs_a=
d_300x250, .fs_ads, .fsrads, .ft-ad, .ftb-native-ads, .ftdAdBar, .ftdConten=
tAd, .ftr_ad, .ftv-ad-sumo, .full-ad, .full-adv, .full-width-ad, .full-widt=
h-ad-container, .full-width-ads, .fullAdBar, .fullSizeAd, .full_AD, .full_a=
d, .full_ad_box, .full_ad_row, .full_width_ad, .fulladblock, .fullbannerad,=
 .fusion-ads, .fusion-advert, .fusionAd, .fusionAdLink, .future_dfp-inline_=
ad, .fw-mod-ad, .fwAdTags, .g-ad, .g-ad-fix, .g-ad-slot, .g-ad-slot-toptop,=
 .g-adblock3, .g-adver, .g-advertisement-block, .g1-ads, .g2-adsense, .g3-a=
dsense, .g3rtn-ad-site, .gAdRows, .gAdSky, .gAds, .gAds1, .gAdsBlock, .gAds=
Container, .gAdvertising, .g_ad, .g_ad336, .g_ads_200, .g_ads_728, .g_adv, =
.g_ggl_ad, .ga-ad-split, .ga-ads, .ga-textads-bottom, .ga-textads-top, .gaT=
easerAds, .gaTeaserAdsBox, .gabfire_ad, .gabfire_simplead_widget, .gad-cont=
ainer, .gad-right1, .gad-right2, .gad_container, .gads300x250, .gads_cb, .g=
ads_container, .gadsense, .gadstxtmcont2, .gall_ad, .galleria-AdOverlay, .g=
alleria-ad-2, .galleria-adsense, .gallery-ad-container, .gallery-ad-counter=
, .gallery-ad-holder, .gallery-ad-overlay, .gallery-ad-wrapper, .gallery-in=
jectedAd, .gallery-sidebar-ad, .galleryAds, .galleryAdvertPanel, .galleryLe=
ftAd, .galleryRightAd, .gallery_300x100_ad, .gallery__aside-ad, .gallery__b=
ottom-ad, .gallery__footer-ad, .gallery_ad, .gallery_ad_wrapper, .gallery_a=
ds_box, .gallery_post--interstitial_ad, .galleryads, .gam-300x250-default-a=
d-container, .gam_ad_slot, .game-ads, .game-category-ads, .game-right-ad-co=
ntainer, .game-usps__display-ad, .gameAd, .gameBottomAd, .game__adv_contain=
erLeaderboard, .game_right_ad, .game_under_ad, .gamepage_boxad, .gamepagead=
Box, .gameplayads, .games-ad-wrapper, .games-ad300, .gamesPage_ad_container=
, .gamesPage_ad_content, .gamezebo_ad, .gamezebo_ad_info, .gaminator, .gb-a=
d-top, .gbfwa > div[class$=3D"_item"], .gbl_adstruct, .gbl_advertisement, .=
gdgt-header-advertisement, .gdgt-postb-advertisement, .gdm-ad, .geeky_ad, .=
gels-inlinead, .gemini-ad, .gen_side_ad, .general-adzone, .general_banner_a=
d, .generic-ad-module, .generic-ad-title, .generic_300x250_ad, .geoAd, .get=
ridofAds, .getridofAdsBlock, .gfp-banner, .ggads, .ggadunit, .ggadwrp, .ggl=
Ads, .ggl_ads_row, .gglads300, .gl_ad, .glamsquaread, .glance_banner_ad, .g=
lobal-adsense, .globalAd, .globalAdLargeRect, .globalAdLeaderBoard, .global=
_banner_ad, .gm-ad-lrec, .gms-ad-centre, .gms-advert, .gn_ads, .go-ad, .go-=
ads-widget-ads-wrap, .goAdverticum, .goafrica-ad, .goglad, .goha_ads, .goha=
_ads_acceptable, .goog_ad, .googad, .googads, .google-2ad, .google-ad, .goo=
gle-ad-728-90, .google-ad-afc-header, .google-ad-block, .google-ad-bottom-o=
uter, .google-ad-container, .google-ad-content, .google-ad-fix, .google-ad-=
iframe, .google-ad-image, .google-ad-pad, .google-ad-placeholder, .google-a=
d-side_ad, .google-ad-sidebar, .google-ad-space, .google-ad-space-vertical,=
 .google-ad-square-sidebar, .google-ad-top-outer, .google-ad-widget, .googl=
e-ad-wrapper-ui, .google-ads, .google-ads-boxout, .google-ads-container, .g=
oogle-ads-group, .google-ads-leaderboard, .google-ads-long, .google-ads-obj=
, .google-ads-responsive, .google-ads-right, .google-ads-rodape, .google-ad=
s-sidebar, .google-ads-slim, .google-ads-widget, .google-ads-wrapper, .goog=
le-ads2, .google-adsbygoogle, .google-adsense, .google-advertisement, .goog=
le-advertisement_txt, .google-afc-wrapper, .google-csi-ads, .google-dfp-ad-=
label, .google-entrepreneurs-ad, .google-right-ad, .google-sponsored-ads, .=
google-sponsored-link, .google-sponsored-links, .google-text-ads, .google-u=
ser-ad, .google300x250, .google300x250BoxFooter, .google300x250TextDetailMi=
ddle, .google300x250TextFooter, .google468, .google468_60, .google728x90, .=
google728x90TextDetailTop, .googleAd, .googleAd-content, .googleAd-list, .g=
oogleAd300x250, .googleAd300x250_wrapper, .googleAd728OuterTopAd, .googleAd=
Box, .googleAdContainer, .googleAdContainerSingle, .googleAdFoot, .googleAd=
Search, .googleAdSenseModule, .googleAdTopTipDetails, .googleAdWrapper, .go=
ogleAd_160x600, .googleAd_1x1, .googleAd_728x90, .googleAd_body, .googleAdd=
, .googleAds336, .googleAds728, .googleAds_article_page_above_comments, .go=
ogleAdsense, .googleAdsense468x60, .googleAdv1, .googleBannerWrapper, .goog=
leContentAds, .googleInsideAd, .googleLgRect, .googleProfileAd, .googleSear=
chAd_content, .googleSearchAd_sidebar, .googleSideAd, .googleSkyWrapper, .g=
oogleSubjectAd, .google_728x90, .google_ad3, .google_ad336, .google_ad_bg, =
.google_ad_btn, .google_ad_container, .google_ad_first, .google_ad_label, .=
google_ad_mrec, .google_ad_right, .google_ad_wide, .google_add, .google_add=
_container, .google_admanager, .google_ads, .google_ads_468x60, .google_ads=
_bom_block, .google_ads_bom_title, .google_ads_content, .google_ads_header1=
1, .google_ads_sidebar, .google_ads_v3, .google_adsense, .google_adsense1, =
.google_adsense1_footer, .google_adsense_footer, .google_adsense_sidebar_le=
ft, .google_afc, .google_afc_ad, .google_afc_articleintext, .google_afc_cat=
egorymain, .google_top_adsense, .google_top_adsense1, .google_top_adsense1_=
footer, .google_top_adsense_footer, .google_txt_ads_mid_big_img, .googlead,=
 .googlead-sidebar, .googleadArea, .googlead_idx_b_97090, .googlead_idx_h_9=
7090, .googlead_iframe, .googlead_outside, .googleadbottom, .googleadcontai=
ner, .googleaddiv, .googleaddiv2, .googleadiframe, .googleads, .googleads-b=
ottommiddle, .googleads-container, .googleads-topmiddle, .googleads_300x250=
, .googleads_title, .googleadsense, .googleadsrectangle, .googleadvertiseme=
n120x600, .googleadvertisement, .googleadwrap, .googleafc, .googlebanwide, =
.googleimagead1, .googleimagead2, .googlepostads, .googley_ads, .gp-adverti=
sement-wrapper, .gpAdBox, .gpAdFooter, .gpAds, .gp_adbanner--bottom, .gp_ad=
banner--top, .gpadvert, .gpt-ad, .gpt-ads, .gpt-sticky-sidebar, .gr-adcast,=
 .gr-ads, .gradientAd, .graphic_ad, .gray_top_ad_container, .grev-ad, .grey=
-ad-line, .grey-ad-notice, .greyad, .grid-ad, .grid-ad-section, .grid-adver=
tisement, .gridAd, .gridAdRow, .gridSideAd, .gridad, .gridstream_ad, .group=
-ad-leaderboard, .group-google-ads, .group_ad, .grv_is_sponsored, .gsAd, .g=
sfAd, .gsl-ads, .gt_ad, .gt_ad_300x250, .gt_ad_728x90, .gt_adlabel, .gtadlb=
, .gtop_ad, .guide-ad, .gujAd, .gutter-ad-left, .gutter-ad-right, .gutter-a=
d-wrapper, .gutterAdHorizontal, .gx_ad, .h-ad, .h-ad-728x90-bottom, .h-ad-r=
emove, .h-ads, .h-adver, .h-large-ad-box, .h-top-ad, .h11-ad-top, .h_Ads, .=
h_ad, .ha-o-house-ad, .half-ad, .half-page-ad, .halfPageAd, .half_ad_box, .=
halfpage_ad_container, .hbPostAd, .hbi-ad-advertiser, .hbox_top_sponsor, .h=
cf-ad, .hcf-ad-rectangle, .hcf-cms-ad, .hd-adv, .hdTopAdContainer, .hd_adve=
rt, .hd_below_player_ad, .hdr-ad, .hdr-ad-text, .hdr-ads, .hdrAd, .hdr_ad, =
.head-ad, .head-ads, .head-banner468, .headAd, .head_ad, .head_ad_wrapper, =
.head_ads, .head_ads_900, .head_adv, .head_advert, .headad, .headadcontaine=
r, .header--ad-space, .header-ad-area, .header-ad-banner, .header-ad-column=
, .header-ad-frame, .header-ad-new-wrap, .header-ad-slot, .header-ad-space,=
 .header-ad-wrap, .header-ad-wrapper, .header-ad-zone, .header-ad234x60left=
, .header-ad234x60right, .header-adbanner, .header-adbox, .header-adcode, .=
header-adplace, .header-ads, .header-ads-container, .header-ads-holder, .he=
ader-adsense, .header-adv, .header-advert, .header-advert-container, .heade=
r-advert-wrapper, .header-advertisement, .header-article-ads, .header-banne=
r > #moneyback[target=3D"_blank"], .header-banner-ad, .header-banner-ads, .=
header-bannerad, .header-google-ads, .header-google-adsense970, .header-men=
u-horizontal-ads, .header-menu-horizontal-ads-content, .header-sponsor, .he=
ader-taxonomy-image-sponsor, .header-top-ad, .header15-ad, .header3-advert,=
 .header728-ad, .headerAd1, .headerAdArea, .headerAdCode, .headerAdContaine=
r, .headerAdWrapper, .headerAds, .headerAdspace, .headerAdvert, .headerText=
Ad, .headerTopAd, .headerTopAds, .header__ads, .header__weather__ad, .heade=
r_ad_2, .header_ad_div, .header_ad_space, .header_ads, .header_ads_box, .he=
ader_ads_promotional, .header_adsense_banner, .header_adv2, .header_adv3, .=
header_adv_optional, .header_advertisement, .header_advertisement_text, .he=
ader_advertisment, .header_classified_ads, .header_leaderboard_ad, .header_=
link_ad, .header_right_ad, .headerad-720, .headerad-placeholder, .headerada=
rea, .headeradhome, .headeradinfo, .headeradright, .heading-ad-space, .head=
line-adblock, .headline-ads, .headline_advert, .heatmapthemead_ad_widget, .=
heavy_ad, .herald-ad, .hero-ad, .hero-ad-special, .hi5-ad, .hidden-ad, .hid=
e-ad, .hideAdMessage, .hideIfEmptyAd, .hidePauseAdZone, .hideStartAdZone-co=
ntainer, .hide_ad, .hide_internal_ad, .highlight-news-ad, .highlights-ad, .=
highlightsAd, .hioxInternalAd, .hl-ad-row__mrec, .hl-ads-holder-0, .hl-post=
-center-ad, .hm-sec-ads, .hm_adlist, .hm_advertisment, .hm_top_right_google=
_ads, .hm_top_right_google_ads_budget, .hn-ads, .home-300x250-ad, .home-act=
ivity-ad, .home-ad--promo, .home-ad--top, .home-ad-container, .home-ad-link=
s, .home-ad-region-1, .home-ad1, .home-ad2, .home-ad3, .home-ad4, .home-ad7=
28, .home-ads-container, .home-ads-container1, .home-adv-box, .home-advert,=
 .home-area3-adv-text, .home-body-ads, .home-features-ad, .home-sidebar-ad,=
 .home-sidebar-ad-300, .home-slider-ads, .home-sponsored-links, .home-stick=
y-ad, .home-top-ad, .home-top-of-page__top-box-ad, .home-top-right-ads, .ho=
meAd1, .homeAd2, .homeAdBox, .homeAdBoxA, .homeAdBoxBetweenBlocks, .homeAdB=
oxInBignews, .homeAdFullBlock, .homeAdSection, .homeAddTopText, .homeCentre=
Ad, .homeMainAd, .homeMediumAdGroup, .homePageAds, .homeSubAd, .homeTextAds=
, .home__ad-small, .home__ad-small-label, .home_ad, .home_ad300, .home_ad72=
0_inner, .home_ad_300x100, .home_ad_300x250, .home_ad_bottom, .home_ad_larg=
e, .home_adblock, .home_adholder, .home_advert, .home_advertisement, .home_=
advertorial, .home_box_latest_ads, .home_mrec_ad, .home_offer_adv, .home_si=
debar_ads, .home_sway_adv, .home_top_ad_slider, .home_top_ad_slides, .home_=
top_right_ad, .home_top_right_ad_label, .homeadnews, .homeadwrapper, .homef=
ront468Ad, .homepage-300-250-ad, .homepage-ad-block-padding, .homepage-ad-b=
uzz-col, .homepage-ad-module, .homepage-advertisement, .homepage-banner-ad,=
 .homepage-footer-ad, .homepage-footer-ads, .homepage-right-rail-ad, .homep=
age-small-touts-ad, .homepage-sponsoredlinks-container, .homepage-square-ad=
, .homepage300ad, .homepageAd, .homepageFlexAdOuter, .homepageMPU, .homepag=
e__ad, .homepage__ad--middle-leader-board, .homepage__ad--top-leader-board,=
 .homepage__ad--top-mrec, .homepage_ads_firstrow, .homepage_ads_fourthrow, =
.homepage_ads_secondrow, .homepage_ads_thirdrow, .homepage_block_ad, .homep=
age_middle_right_ad, .homepageinline_adverts, .homesmallad, .homestream-ad,=
 .hor-ad, .hor_ad, .hori-play-page-adver, .horisont_ads, .horiz_adspace, .h=
orizontal-ad-holder, .horizontal-ad2, .horizontalAd, .horizontalAdText, .ho=
rizontalAdvert, .horizontal_adblock, .horizontal_ads, .horizontalbtad, .hor=
izontaltextadbox, .horizsponsoredlinks, .hortad, .house-ad, .house-ads, .ho=
useAd, .houseAd1, .houseAdsStyle, .housead { display: none !important; colo=
r: rgb(92, 46, 103) !important; background-color: rgb(121, 237, 178) !impor=
tant; }

.hover_300ad, .hover_ads, .hoverad, .hp-ad-container, .hp-col4-ads, .hp-con=
tent__ad, .hp-inline-ss-service-ad, .hp-main__rail__footer__ad, .hp-slidesh=
ow-right-ad, .hp-ss-service-ad, .hp2-adtag, .hpPollQuestionSponsor, .hpPric=
eBoardSponsor, .hp_320-250-ad, .hp_ad_300, .hp_ad_box, .hp_ad_cont, .hp_ad_=
text, .hp_adv300x250, .hp_advP1, .hp_horizontal_ad, .hp_t_ad, .hp_textlink_=
ad, .hp_w_ad, .hpa-ad1, .hr-ads, .hr_ad, .hr_advt, .hrad, .hss-ad, .hss-ad-=
300x250_1, .hss_static_ad, .hst-contextualads, .ht_ad_widget, .html-adverti=
sement, .html-block-ads, .html-component-ad-filler, .html5-ad-progress-list=
, .hyad, .hype_adrotate_widget, .i-bem.adsrv, .i-bem.b-timetable__row[oncli=
ck*=3D"awaps"], .i-bem.stripe_type_promo, .i-bem.tv-grid__item-adv, .i-bem.=
tv-sortable-item.tv-sortable-item_sortable_no, .i360ad, .iAdserver, .i_ad, =
.iab300x250, .iab728x90, .ib-adv, .ib-figure-ad, .ibm_ad_bottom, .ibm_ad_te=
xt, .ibt-top-ad, .ic-ads, .icit-ch-advert, .ico-adv, .icon-advertise, .icon=
-myindependentad, .iconAdChoices, .icon_ad_choices, .iconads, .icons-rss-fe=
ed + .icons-rss-feed div[class$=3D"_item"], .icx_ad, .id-Advert, .id-Articl=
e-advert, .idGoogleAdsense, .idMultiAd, .id_footer_social, .idc-adContainer=
, .idc-adWrapper, .ident_right_ad, .idgGoogleAdTag, .ie-adtext, .ie-sponsor=
edbox, .iframe-ad, .iframe-ads, .iframeAd, .iframeAds, .iframead, .iframead=
flat, .im-topAds, .image-ad-336, .image-advertisement, .image-viewer-ad, .i=
mage-viewer-mpu, .imageAd, .imageAdBoxTitle, .imageGalleryAdHeadLine, .imag=
ead, .imageads, .images-adv, .imagetable_ad, .img-advert, .img_ads, .imgur-=
ad, .impactAdv, .impo-b-overlay, .impo-b-stitial, .import_video_ad_bg, .imu=
Box, .in-ad, .in-article-adsense, .in-article-mpu, .in-between-ad, .in-cont=
ent-ad, .in-content-ad--container, .in-node-ad-300x250, .in-page-ad, .in-st=
ory-ads, .in-story-text-ad, .inArticleAdInner, .inPageAd, .inStoryAd-news2,=
 .in_article_ad, .in_content_ad_container, .in_content_advert, .in_up_ad_ga=
me, .incontentAd, .incontent_ads, .indEntrySquareAd, .indent-advertisement,=
 .index-adv, .index-after-second-post-ad, .index_728_ad, .index_ad, .index_=
ad_a2, .index_ad_a4, .index_ad_a5, .index_ad_a6, .index_ad_column2, .index_=
right_ad, .indexad, .indie-sidead, .indy_googleads, .inf-admedia, .inf-adme=
diaiframe, .info-ads, .info-advert-160x600, .info-advert-300x250, .info-adv=
ert-728x90, .info-advert-728x90-inside, .infoBoxThreadPageRankAds, .ingamea=
dbox, .ingameboxad, .ingridAd, .inhouseAdUnit, .inhousead, .injectedAd, .in=
line-ad, .inline-ad-card, .inline-ad-placeholder, .inline-ad-text, .inline-=
ad-wrap, .inline-ad-wrapper, .inline-adblock, .inline-advert, .inline-mpu, =
.inline-mpu-left, .inline-panorama-ad, .inlineAd, .inlineAdContainer, .inli=
neAdImage, .inlineAdInner, .inlineAdNotice, .inlineAdText, .inlineAdTour, .=
inlineAd_content, .inlineAdvert, .inlineAdvertisement, .inlineNewsletterSub=
scription + .inlineNewsletterSubscription div[class$=3D"_item"], .inlineSid=
eAd, .inline_ad, .inline_ad_container, .inline_ad_title, .inline_ads, .inli=
nead, .inlinead-tagtop, .inlineadsense, .inlineadtitle, .inlist-ad, .inlist=
Ad, .inner-ad, .inner-ad-disclaimer, .inner-advt-banner-3, .inner-post-ad, =
.inner468ad, .innerAd300, .innerAdWrapper, .innerAds, .innerContentAd, .inn=
er_ad_advertise, .inner_adv, .inner_big_ad, .innerpostadspace, .inpostad, .=
ins_adwrap, .insert-advert-ver01, .insertAd_AdSlice, .insertAd_Rectangle, .=
insertAd_TextAdBreak, .insert_ad, .insert_advertisement, .insertad, .inside=
StoryAd, .inside_ad, .inside_ad_box, .insideads, .inslide-ad, .instructionA=
dvHeadline, .insurance-ad, .intad, .inteliusAd_image, .interbody-ad-unit, .=
interest-based-ad, .internal-ad, .internalAd, .internalAdSection, .internal=
AdsContainer, .internal_ad, .interstitial-ad, .interstitial-ad600, .interst=
itial468x60, .interstitial__ad--wrapper, .interstitial_ad_wrapper, .ion-ad,=
 .ione-widget-dart-ad, .ipm-sidebar-ad-middle, .iprom-ad, .ipsAdvertisement=
, .iqadlinebottom, .iqadmarker, .is-mpu, .is-sponsored, .is24-adplace, .isA=
d, .is_trackable_ad, .isad_box, .island-ad, .islandAd, .islandAdvert, .isla=
nd_ad, .island_ad_right_top, .islandad, .isocket_ad_row, .item-ad, .item-ad=
-leaderboard, .item-advertising, .item-housead, .item-housead-last, .item-i=
nline-ad, .itemAdvertise, .itemLinkPET.plista_widget_belowArticle_item, .it=
em_ads, .itinerary-index-advertising, .itw-ad, .iw-leaderboard-ad, .j-li_si=
debar-banner, .jLinkSponsored, .j_ads, .ja-ads, .jalbum-ad-container, .jam-=
ad, .jc_ad_container, .jg-ad-5, .jg-ad-970, .jimdoAdDisclaimer, .jl-ads-lea=
derboard, .job-ads-container, .jobAds, .jobkeywordads, .jobs-ad-box, .jobs-=
ad-marker, .jobs-information-call-to-action + .jobs-information-call-to-act=
ion div[class$=3D"_item"], .joead728, .jp-advertisment-promotional, .jquery=
-adi, .jquery-script-ads, .js-ad, .js-ad--comment, .js-ad-banner-container,=
 .js-ad-container, .js-ad-doubleimu, .js-ad-dynamic, .js-ad-hideable, .js-a=
d-home, .js-ad-hover, .js-ad-imu, .js-ad-konvento, .js-ad-loaded, .js-ad-lo=
ader-bottom, .js-ad-prepared, .js-ad-primary, .js-ad-slot, .js-ad-space-con=
tainer, .js-ad-static, .js-ad-unit-bottom, .js-ad-wrapper, .js-adExternalPa=
ge, .js-adfliction-iframe, .js-adfliction-standard, .js-ads, .js-ads-carous=
el, .js-adv-rotator-image, .js-advert, .js-advert--responsive, .js-advert--=
vc, .js-advert-container, .js-advert-upsell-popup, .js-advertising__placeho=
lder1, .js-billboard-advert, .js-checkad-warning, .js-dfp-ad, .js-dfp-ad-bo=
ttom, .js-dfpAdPosSR, .js-footer-zerg, .js-gptAd, .js-header-ad, .js-native=
-ad, .js-ognyvo__item, .js-outbrain-container, .js-site-header-advert, .js-=
slide-right-ad, .js-slide-top-ad, .js-slim-nav-ad, .js-stream-ad, .js-strea=
m-featured-ad, .js-toggle-ad, .jsOneAd, .js_adContainer, .js_contained-ad-c=
ontainer, .jsx-adcontainer, .juicyads_300x250, .jumboAd, .jw-ad, .jw-ad-lab=
el, .jw-ad-media-container, .jw-ad-visible, .kads-main, .kcAds, .kd_ads_blo=
ck, .kdads-empty, .kdads-link, .keyword-ads-block, .kill-adblock-container,=
 .kip-advertisement, .kip-banner-ad, .kitara-sponsored, .kl-ad, .knowledgeh=
ub_ad, .koadvt, .kopa-ads-widget, .ktz-bannersingletop, .kw_advert, .kw_adv=
ert_pair, .kwd_bloack, .l-350-250-ad-words, .l-ad, .l-ad-300, .l-ad-728, .l=
-adsense, .l-bottom-ads, .l-container > #fishtank, .l-header-advertising, .=
l-region--ad, .l300x250ad, .l_ad_sub, .label-ad, .labelads, .labeled_ad, .l=
adbrokes_sbad, .lads[width=3D"100%"][style=3D"background:#FFF8DD"], .landin=
g-advertise, .landing-feed--ad-vertical, .landing-page-ads, .landingAdRail,=
 .landing_adbanner, .large-advert, .large-btn-ad, .large-right-ad, .largeAd=
, .largeRecAdNewsContainerRight, .largeRectangleAd, .largeUnitAd, .large_ad=
, .large_add_container, .largesideadpane, .last-left-ad, .last-right-ad, .l=
astAdvertorial, .lastLiAdv, .lastRowAd, .lastpost_advert, .latest-ad, .late=
st-posts__sidebar-ad-container, .layer-ad-bottom, .layer-ad-top, .layer-xad=
, .layer_text_ad, .layeradinfo, .layout-ad, .layout__content-ad, .layout__t=
op-ad, .layout_communityad_right_ads, .lazy-ad, .lazy-adv, .lazyad, .lazyad=
slot, .lazyload_ad, .lazyload_ad_article, .lb-ad, .lb-adhesion-unit, .lb-ad=
vert-container, .lbadtxt, .lbc-ad, .lbl-advertising, .lblAdvert, .lcontentb=
ox_ad, .ld-ad, .ld-ad-inner, .lead-ad, .lead-ads, .lead-advert, .lead-board=
-ad-cont-home, .leadAd, .leader-ad, .leader-ad-728, .leaderAd, .leaderAdSlo=
t, .leaderAdTop, .leaderAdvert, .leaderBoardAdHolder, .leaderBoardAdvert, .=
leaderOverallAdArea, .leader_ad, .leader_aol, .leaderad, .leaderboard-ad-be=
lt, .leaderboard-ad-container, .leaderboard-ad-green, .leaderboard-ad-grid,=
 .leaderboard-ad-inner, .leaderboard-ad-main, .leaderboard-ad-module, .lead=
erboard-ad-pane, .leaderboard-ad-unit, .leaderboard-adblock, .leaderboard-a=
dvert, .leaderboard-advertisement, .leaderboardAd, .leaderboardAdContainer,=
 .leaderboardAdContainerInner, .leaderboardFooter_ad, .leaderboard_ad, .lea=
derboard_ad_container, .leaderboard_ad_top_responsive, .leaderboard_ad_unit=
, .leaderboard_ad_unit_groups, .leaderboard_ads, .leaderboard_adv, .leaderb=
oard_banner_ad, .leaderboard_text_ad_container, .leaderboardad, .leaderboar=
dadmiddle, .leaderboardadtop, .leaderboardadwrap, .leadgenads, .left-ad, .l=
eft-ad180, .left-ads, .left-advert, .left-column-rectangular-ad, .left-colu=
mn-virtical-ad, .left-rail-ad, .left-rail-ad__wrapper, .left-rail-horizonta=
l-ads, .left-sidebar-box-ads, .left-takeover-ad, .left-takeover-ad-sticky, =
.left120X600AdHeaderText, .leftAdColumn, .leftAdContainer, .leftAd_bottom_f=
mt, .leftAd_top_fmt, .leftAds, .leftAdvert, .leftCol_advert, .leftColumnAd,=
 .leftPaneAd, .left_300_ad, .left_ad, .left_ad_160, .left_ad_areas, .left_a=
d_box, .left_ad_container, .left_adlink, .left_ads, .left_adsense, .left_ad=
v, .left_advertisement_block, .left_col_ad, .left_col_adv, .left_google_add=
, .left_sidebar_wide_ad, .leftadd, .leftadtag, .leftbar_ad_160_600, .leftba=
rads, .leftbottomads, .leftnavad, .leftrighttopad, .leftsidebar_ad, .leftto=
pad1, .legacy-ads, .legal-ad-choice-icon, .lextraleftmoreads, .lg-ads-160x9=
0, .lg-ads-311x300-down, .lg-ads-311x300-up, .lg-ads-311x500, .lg-ads-635x1=
00, .lgRecAd, .lg_ad, .liBannerImage, .liboxads, .ligatus, .lightad, .lijit=
-ad, .lineList_ad, .linead, .linelist-item-ad, .linkAD, .link_adslider, .li=
nk_advertise, .linkads, .linkedin-sponsor, .links_google_adx, .list-feature=
-ad, .listAdvertGenerator, .listicle--ad-rail, .listing-content-ad-containe=
r, .listing-inline-ad, .listing-item-ad, .listingAd, .listing__ads--right, =
.listings-ad-block, .listings-bottom-ad-w, .listings_ad, .literatumAd, .lit=
tle_vid_ads, .live-search-list-ad-container, .live_tv_sponsorship_ad, .live=
ads, .liveblog__highlights__ad, .livingsocial-ad, .ljad, .llsAdContainer, .=
lnad, .loadadlater, .local-ads, .localad, .location-ad, .log_ads, .logoAd-h=
anging, .logoAds, .logo_AdChoices, .logoad, .logoutAd, .logoutAdContainer, =
.longAd, .longAdBox, .longAds, .longBannerAd, .long_ad, .longform-ad, .loop=
-ad, .loop_google_ad, .lottery-ad-container, .lower-ad, .lower-ads, .lowerA=
d, .lowerAds, .lowerContentBannerAd, .lowerContentBannerAdInner, .lower_ad,=
 .lp_az_billboard__via_content_header_ad_, .lpt_adsense_bottom_content, .lq=
m-ads, .lqm_ad, .lr-ad, .lr_skyad, .lsn-yahooAdBlock, .lt_ad_call, .luma-ad=
, .luxeAd, .lx_ad_title, .lyad, .lyrics-inner-ad-wrap, .m-ContentAd, .m-ad,=
 .m-ad--open, .m-ad-tvguide-box, .m-advert, .m-advertisement, .m-advertisem=
ent--container, .m-block-ad, .m-dfp-ad-text, .m-gallery-overlay--ad-top, .m=
-header-ad, .m-header-ad--slot, .m-in-content-ad, .m-in-content-ad--slot, .=
m-in-content-ad-row, .m-in-content-ad-row--bonus, .m-layout-advertisement, =
.m-mem--ad, .m-sidebar-ad, .m-sidebar-ad--slot, .m-sponsored, .m4-adsbygoog=
le, .mTopAd, .m_ad1, .m_ad300, .m_banner_ads, .macAd, .macad, .mad_adcontai=
ner, .madison_ad, .magAd, .magad, .magazine_box_ad, .main-ad, .main-ads, .m=
ain-advert, .main-advertising, .main-column-ad, .main-footer-ad, .main-goog=
le-ad-container, .main-right-ads, .main-tabs-ad-block, .main-top-ad-contain=
er, .mainAd, .mainAdContainer, .mainAds, .mainEcoAd, .mainLeftAd, .mainLink=
Ad, .mainRightAd, .main_ad, .main_ad_adzone_5_ad_0, .main_ad_adzone_6_ad_0,=
 .main_ad_adzone_7_ad_0, .main_ad_adzone_7_ad_1, .main_ad_adzone_8_ad_0, .m=
ain_ad_adzone_8_ad_1, .main_ad_adzone_9_ad_0, .main_ad_adzone_9_ad_1, .main=
_ad_bg, .main_ad_bg_div, .main_ad_container, .main_adbox, .main_ads, .main_=
adv, .main_advert_section, .main_intro_ad, .main_right_ad, .main_wrapper_up=
per_ad_area, .mainadWrapper, .mainadbox, .mango_ads, .mantis-ad, .mantis__r=
ecommended__item--external, .mantis__recommended__item--sponsored, .manual-=
ad, .mapAdvertising, .map_google_ad, .map_media_banner_ad, .mapped-ad, .mar=
gin0-ads, .marginadsthin, .marginalContentAdvertAddition, .market-ad, .mark=
et-ad-small, .marketplace-ad, .marketplaceAd, .marketplaceAdShell, .markpla=
ce-ads, .marquee-ad, .master_post_advert, .masthead-ad, .masthead-ad-contro=
l, .masthead-ads, .mastheadAds, .masthead_ad_banner, .masthead_ads_new, .ma=
sthead_topad, .matador_sidebar_ad_600, .match-ad, .match-results-cards-ad, =
.mb-advert, .mb-advert__leaderboard--large, .mb-advert__mpu, .mb-advert__tw=
eeny, .mb-block--advert-side, .mb-list-ad, .mc-ad-chrome, .mc_cars_row, .mc=
x-content-ad, .md-adv, .md-advertisement, .mdl-ad, .mdl-quigo, .me-rtm, .me=
dColModAd, .medRecContainer, .medRect, .med_ad_box, .media--ad, .media-ad-r=
ect, .media-advert, .media-network-ad, .media-temple-ad-wrapper-link, .medi=
aAd, .mediaAdContainer, .mediaResult_sponsoredSearch, .media_ad, .mediaget,=
 .mediamotive-ad, .medianet-ad, .medium-google-ad-container, .medium-rectan=
gle-ad, .medium-rectangle-advertisement, .medium-top-ad, .mediumRectagleAd,=
 .mediumRectangleAd, .mediumRectangleAdvert, .medium_ad, .medium_rectangle_=
ad_container, .mediumad, .medo-ad-section, .medo-ad-wideskyscraper, .medrec=
-ad, .medrect-ad, .medrect-ad2, .medrectAd, .medrect_ad, .medrectadv4, .mee=
-ad-detail-billboard, .member-ads, .memberAdsContainer, .member_ad_banner, =
.meme_adwrap, .memrise_ad, .menu-ad, .menuAd, .menuAds-cage, .menuItemBanne=
rAd, .menuad, .menueadimg, .merc_title, .merc_title_2, .merchantAdsBoxColRi=
ght, .merkai_ads_wid, .mess_div_adv, .messageBoardAd, .message_ads, .metaRe=
directWrapperBottomAds, .metaRedirectWrapperTopAds, .meta_ad, .metaboxType-=
sponsor, .mf-ad300-container, .mg_box_ads, .mgid-wrapper, .micro_ad, .mid-a=
d-wrapper, .mid-advert, .mid-page-2-advert, .mid-post-ad, .mid-section-ad, =
.midAd, .midAdv-cont, .midAdv-cont2, .mid_4_ads, .mid_article_ad_label, .mi=
d_banner_ad, .mid_page_ad, .mid_page_ad_big, .mid_right_ads, .mid_right_inn=
er_id_ad, .midad, .midarticlead, .middle-ad, .middle-ads, .middle-ads728, .=
middle-footer-ad, .middleAd, .middleAdLeft, .middleAdMid, .middleAdRight, .=
middleAds, .middleBannerAd, .middle_ad, .middle_ad_responsive, .middle_ads,=
 .middlead, .middleadouter, .midpost-ad, .min-width-normal > #popup_contain=
er, .min-width-normal > #popup_container ~ #fade, .min_navi_ad, .mini-ad, .=
mini-ads, .miniHeaderAd, .mini_ads, .mini_ads_bottom, .mini_ads_right, .min=
iad, .miniads, .misc-ad, .misc-ad-label, .miscAd, .mit-adv-comingsoon, .mks=
_ads_widget, .ml-advert, .ml-adverts-sidebar-1, .ml-adverts-sidebar-2, .ml-=
adverts-sidebar-4, .ml-adverts-sidebar-bottom-1, .ml-adverts-sidebar-bottom=
-2, .ml-adverts-sidebar-bottom-3, .ml-adverts-sidebar-random, .mlaAd, .mm-a=
d-mpu, .mm-ad-sponsored, .mmads, .mmc-ad, .mmc-ad-wrap-2, .mmcAd_Iframe, .m=
nopolarisAd, .mntl-gpt-adunit, .mo_googlead, .mob-adspace, .mobads, .mobile=
-ad, .mobile-instream-ad-holder-single, .mobile-related-ad, .mobileAdWrap, =
.mobileAdvertInStreamHighlightText, .mobileAppAd, .mobile_ad_container, .mo=
bile_article_ad2, .mobile_featuredad, .mobile_featuredad_article, .mobile_i=
ndex_ad, .mobileadbig, .mobilesideadverts, .mod > ._jH + .rscontainer, .mod=
-ad, .mod-ad-1, .mod-ad-2, .mod-ad-300x250, .mod-ad-600, .mod-ad-box, .mod-=
ad-google-afc, .mod-ad-lrec, .mod-ad-n, .mod-ad-risingstar, .mod-adblock, .=
mod-adcpc, .mod-ads, .mod-big-ad-switch, .mod-big-banner-ad, .mod-google-ad=
s, .mod-google-ads-container, .mod-home-mid-advertisement, .mod-horizontal-=
ad, .mod-sponsored-links, .mod-trbad, .mod-tss-ads-wrapper, .mod-vertical-a=
d, .mod_ad, .mod_ad_imu, .mod_ad_t25, .mod_ad_text, .mod_ad_top, .mod_admod=
ule, .mod_ads, .mod_advert, .mod_index_ad, .mod_openads, .mod_r_ad, .mod_r_=
ad1, .modal-ad, .modul-search, .module--ad, .module-ad-small, .module-ads, =
.module-advert, .module-advertisement, .module-image-ad, .module-one-search=
, .module-rectangleads, .module-sponsored-ads, .module-zerg, .module1colAds=
, .moduleAd, .moduleAdSpot, .moduleAdvert, .moduleAdvertContent, .moduleBan=
nerAd, .module_ad, .module_ad_disclaimer, .module_box_ad, .module_header_sp=
onsored, .module_home_ads, .module_single_ads, .modulegad, .moduletable-ads=
ponsor, .moduletable-advert, .moduletable-bannerAd6, .moduletable-centerad,=
 .moduletable-googleads, .moduletable-rectangleads, .moduletable_ad-right, =
.moduletable_ad160x600_center, .moduletable_ad300x250, .moduletable_adtop, =
.moduletable_advertisement, .moduletable_top_ad, .moduletableadvert, .modul=
etableexclusive-ads, .moduletablesquaread, .moduletabletowerad, .modulo-pub=
licidade, .mom-ad, .momizat-ads, .moneyball-ad, .monitor-g-ad-300, .monitor=
-g-ad-468, .monsterad, .more-content-and-ads, .moreAdBlock, .morestarconten=
tandads, .mos-ad, .mosaicAd, .mostpop_sponsored_ad, .motherboard-ad, .mp-ad=
, .mpsponsor, .mpu-ad, .mpu-ad-con, .mpu-ad-top, .mpu-advert, .mpu-c, .mpu-=
container-blank, .mpu-footer, .mpu-fp, .mpu-holder, .mpu-leaderboard, .mpu-=
left, .mpu-mediatv, .mpu-right, .mpu-title, .mpu-top-left, .mpu-top-left-ba=
nner, .mpu-top-right, .mpu-unit, .mpu-wrapper, .mpu01, .mpu250, .mpu600, .m=
puAd, .mpuAdArea, .mpuAdSlot, .mpuAdvert, .mpuArea, .mpuBox, .mpuContainer,=
 .mpuMiddle, .mpuTextAd, .mpu_Ad, .mpu_ad, .mpu_advert, .mpu_advertisement_=
border, .mpu_container, .mpu_gold, .mpu_holder, .mpu_placeholder, .mpu_plat=
inum, .mpu_side, .mpu_text_ad, .mpuad, .mpuads, .mpuholderportalpage, .mr-d=
fp-ad, .mrec_advert, .ms-ad-superbanner, .ms-ads-link, .ms_header_ad { disp=
lay: none !important; color: rgb(92, 46, 103) !important; background-color:=
 rgb(121, 237, 178) !important; }

.msat-adspace, .msfg-shopping-mpu, .msg-ad, .msgad, .mslo-ad, .mslo-ad-300x=
250, .mslo-ad-728x66, .mslo-ad-holder, .msnChannelAd, .msn_ad_wrapper, .mst=
_ad_top, .msw-js-advert, .mt-ad-container, .mt-ads, .mt-header-ads, .mt_adv=
, .mt_adv_v, .mtv-adChoicesLogo, .mtv-adv, .multiad2, .multiadwrapper, .mul=
tiple-ad-tiles, .mvAd, .mvAdHdr, .mvp-ad-label, .mvp-widget-ad, .mvp-widget=
-feat2-side-ad, .mvp_ad_widget, .mvp_block_type_ad_module, .mvw_onPageAd1, =
.mw > #rcnt > #center_col > #taw > #tvcap > .c, .mw > #rcnt > #center_col >=
 #taw > .c, .mwaads, .mx-box-ad, .mxl_ad_inText_250, .my-ad250x300, .my-ads=
, .myAds, .myAdsBox, .myAdsGroup, .myTestAd, .my_ad, .myadmid, .myimg-adver=
t, .mypicadsarea, .myplate_ad, .mywidget__col > .mywidget__link_advert, .nS=
ponsoredLcContent, .nSponsoredLcTopic, .n_ad, .naMediaAd, .nadvt300, .narro=
w_ad_unit, .narrow_ads, .nationalad, .native-ad, .native-ad-container, .nat=
ive-ad-item, .native-ad-link, .native-ad-promoted-provider, .native-adv, .n=
ative-advts, .native-sidebar-ad, .nativeAd, .nativeAd-sponsor-position, .na=
tiveMessageAd, .native_ad, .nativeadasideplaceholder, .nativeads-unt, .nati=
veadserversidecontentmodule, .nature-ad, .nav-adWrapper, .navAdsBanner, .na=
vBads, .nav__adbanner, .nav_ad, .nav_textads, .navad, .navadbox, .navcommer=
cial, .navi_ad300, .naviad, .nba300Ad, .nba728Ad, .nbaAdNotice, .nbaAroundA=
d2, .nbaT3Ad160, .nbaTVPodAd, .nbaTextAds, .nbaTwo130Ads, .nbc_Adv, .nbc_ad=
_carousel_wrp, .nc-dealsaver-container, .nc-exp-ad, .ncwAdCommon, .nda-ad, =
.nda-ad--leaderboard, .ndmadkit, .netPost_ad1, .netPost_ad3, .netads, .nets=
helter-ad, .network-ad-two, .new-ad-box, .new-ads-scroller, .newArv_2nd_adv=
_blk, .newHeaderAd, .newPex_forumads, .newTopAdContainer, .new_ad1, .newad,=
 .newad1, .newadsky-wrapper, .news-ad, .news-ad-block-a, .news-place-ad-inf=
o, .news_ad_box, .news_article_ad_google, .news_article_ads, .news_footer_a=
d_container, .news_imgad, .newsad, .newsblock-ads, .newsfeed_adunit, .newsl=
etter_ad, .newsstackedAds, .newstream_ad, .newsviewAdBoxInNews, .newsvinems=
n_adtype, .nexusad, .nf-adbox, .ng-ad-banner, .ngs-adv-async, .ninemsn-foot=
er-ad, .ninth-box-ad, .nivo-ad-container, .nl2ads, .nn-mpu, .no1postadvert,=
 .noAdForLead, .noTitleAdBox, .noadblock, .node-content-ad, .node-left-ad-u=
nder-img, .node_ad_wrapper, .nomobilead, .non-empty-ad, .nonsponserIABAdBot=
tom, .normalAds, .normalad, .northad, .not-an-ad-header, .note-advertisemen=
t, .noticeAd_pc_wrap, .novinator, .np-header-ad, .np-right-ad, .npAdGoogle,=
 .npSponsorTextAd, .nrAds, .nr_partners, .nrelate .nr_partner, .nsAdRow, .n=
scr300Ad, .nscrMidAdBlock, .nscrT1AdBlock, .ntnlad, .ntv-ad, .ntv-rail-ad, =
.nu2ad, .nuffnangad, .nw-ad, .nw-ad-468x60, .nw-ad-label, .nw-taboola, .nw-=
top-ad, .nzs-ads, .o-ad-banner-top, .o-ad-container, .o-ads, .o-ads--center=
, .o-advert, .o-listing__ad, .o-story-content__ad, .oad-ad, .oas-ad, .oas-b=
ottom-ads, .oas-leaderboard-ads, .oasInAds, .oas_ad, .oas_add, .oas_adverti=
sement, .oas_desktop_banner, .oas_sidebar_v7, .oas_x20, .oas_x21, .oas_x70,=
 .oasads, .ob_ads_header, .ob_container .item-container-obpd, .ob_dual_righ=
t > .ob_ads_header ~ .odb_div, .ob_nm_paid, .oba_message, .ocp-sponsor, .od=
c-nav-ad, .ody-sponsor, .offer_sponsoredlinks, .oi-header-ad, .oi_horz_ad_c=
ontainer, .oio-link-sidebar, .oio-openslots, .oio-zone-position, .old-adver=
torial-block, .omnitureAdImpression, .on-demand-ad, .onAd, .on_player_ads, =
.on_single_ad_box, .one-ad, .oneColumnAd, .onethirdadholder, .onf-ad, .onon=
a-block, .onsite-ads-728w, .opaAd, .open-ad-container-mobile, .openads, .op=
enadstext_after, .openx-ad, .openx_10, .openx_11, .openx_15, .openx_16, .op=
enx_17, .openx_3, .openx_4, .openx_ad, .openx_frame, .openxbuttons, .option=
al-ad, .os-advertisement, .os-header-ad, .osan-ads, .other-posts-ads, .othe=
r_adv2, .otherheader_ad, .otj_adspot, .outbrain_ad_li, .outbrain_dual_ad_wh=
ats_class, .outbrain_ul_ad_top, .outer-ad-container, .outerAdWrapper, .oute=
rAd_300x250_1, .outeradcontainer, .outermainadtd1, .outgameadbox, .outside_=
ad, .outstream-ad-outer-wrapper, .ovAdLabel, .ovAdPromo, .ovAdSky, .ovAdart=
ikel, .ov_spns, .ovadsenselabel, .overflow-ad, .overlay-ad, .overlay-ad-con=
tainer, .overlay_ad, .ox-holder, .ox_ad, .ozadtop, .ozadtop3, .p2_right_ad,=
 .p75_sidebar_ads, .pAdsBlock2, .p_adv, .p_topad, .pa_ads_label, .padAdvx, =
.padd-adv, .paddingBotAd, .pads_bulk_widget, .padvertlabel, .page-ad-contai=
ner, .page-ads, .page-advert, .page-box-ad, .page-header-ad, .page-pencil-a=
d-container-bottom, .pageAds, .pageBottomGoogleAd, .pageFooterAd, .pageGoog=
leAd, .pageGoogleAdFlat, .pageGoogleAdSubcontent, .pageGoogleAds, .pageGoog=
leAdsContainer, .pageHeaderAd, .pageHeaderAds, .pageLeaderAd, .pageSkinAds,=
 .pageTopAd, .page_content_right_ad, .pagead, .pagebuilder_ad, .pageclwidea=
dv, .pagefair-acceptable, .pagenavindexcontentad, .pair_ads, .pan-ad-inline=
, .pan-ad-inline1, .pan-ad-inline2, .pan-ad-inline3, .pan-ad-sidebar-top, .=
pan-ad-sidebar1, .pan-ad-sidebar2, .pane-ad-ads-all, .pane-ad-block, .pane-=
ad-manager-bottom-right-rail-circ, .pane-ad-manager-middle, .pane-ad-manage=
r-middle1, .pane-ad-manager-right, .pane-ad-manager-right1, .pane-ad-manage=
r-right2, .pane-ad-manager-right3, .pane-ad-manager-shot-business-circ, .pa=
ne-ad-manager-subscribe-now, .pane-adonews-ad, .pane-ads, .pane-adv-manager=
, .pane-advertorials-homepage-advertorial-rotator, .pane-bzads-bzadwrapper-=
120x60-partner, .pane-bzads-fintech-300x250, .pane-dart-dart-tag-gfc-ad-rai=
l-3, .pane-dfp-dfp-ad-atf-728x90, .pane-frontpage-ad-banner, .pane-frontpag=
e-ad-banner-hk, .pane-kl-global-middle-ad, .pane-mp-advertisement-rectangle=
, .pane-openx, .pane-site-ads, .pane-sponsored-links, .pane-textlinkads-26,=
 .pane-tgx-ad, .pane-tw-ad-master-ad-300x250a, .pane-tw-ad-master-ad-300x60=
0, .pane-tw-adjuggler-tw-adjuggler-half-page-ad, .pane-two-column-ads, .pan=
e_ad_wide, .panel-ad, .panel-ad-mr, .panel-advert, .panel-body-adsense, .pa=
nel__column--vc-advert, .panel__row--with-vc-advert, .panel_ad, .paneladver=
t, .panoramic_ad_placeholder, .paragraphs-item-advertisement, .paralaxBackg=
orundAdwords, .partial-ad, .partner-ad, .partner-ads-container, .partner-ad=
sonar, .partner-overlay-top-ad, .partnerAd, .partnerAdTable, .partner_ads, =
.partnerad_container, .partnersTextLinks, .paszone_container, .patronad, .p=
b-ad, .pb-ad-curated, .pb-f-ad-flex, .pb-f-ad-leaderboard, .pb-f-ads-ad, .p=
b-f-ads-dfp-big-box-300x250, .pb-f-ads-dfp-box-300x450, .pb-f-ads-dfp-halfp=
age-300x600, .pb-f-ads-dfp-leaderboard-728x90, .pb-f-ads-taboola-article-we=
ll, .pb-f-ads-taboola-right-rail-alt, .pb-f-advert-dfp-double-mpu, .pb-mod-=
ad-flex, .pb-mod-ad-leaderboard, .pb_left_banner, .pb_right_banner, .pb_top=
_img, .pc-ad, .pcads_widget, .pd-ads-mpu, .pdpads_desktop, .peg_ad, .penci-=
ad-box, .penci-ad-image, .pencil-ad, .pencil-ad-container, .pencil_ad, .per=
formancingads_region, .pf_content_ad, .pf_sky_ad, .pf_top_ad, .pfimgAds, .p=
g-ad-block, .pg-adtarget, .pgAdSection_Home_MasterSponsers, .pgevoke-story-=
topads, .ph-ad, .ph-ad-desktop, .ph-ad-mediumrectangle, .photo-ad, .photo-n=
ews-list-advertisement, .photoad, .photobox-adbox, .pics_detail_ad, .pics_f=
ooter_ad, .picto_ad, .pin-ad, .pixtrack-adcode, .pj-ad, .pkad, .pkgTemplate=
AdWrapper, .pl__superad, .pl_adv1, .pl_adv1_t, .pl_adv1_wr, .pl_adv1_wr2, .=
pla_ad, .place-ads, .placeholder-ad, .placeholderAd, .play-page-ads, .playA=
ds1, .playAds2, .player-ad, .player-ad-overlay, .player-ads, .player-ads2, =
.player-leaderboard-ad-wrapper, .player-under-ad, .playerAdv, .player_ad2, =
.player_ad_box, .player_hide_ad, .player_page_ad_box, .playlist-row-ad, .pl=
ista-powered, .plistaList > .itemLinkPET, .plistaList > .plista_widget_unde=
rArticle_item[data-type=3D"pet"], .plista_inimg_box, .plista_widget_belowAr=
ticleRelaunch_item[data-type=3D"pet"], .plista_widget_i300x250, .plista_wid=
get_retrescoAd_1, .plista_widget_retrescoAd_2, .plugin-ad, .pm-ad-zone, .pm=
-banner-ad, .pmad-in2, .pmg-sponsoredlinks, .pn-ad, .pn_dfpads, .pnp_ad, .p=
oac_ads_text, .pod-ad, .pod-ad-300, .pod-ad-box, .podRelatedAdLinksWidget, =
.podSponsoredLink, .poll_sponsor_ad, .pop-up-ad, .popAdContainer, .popadtex=
t, .popunder-adv, .popup-ad, .popupAd, .popupAdOuter, .popupAdWrapper, .pop=
up_ad, .portal-advert, .portalCenterContentAdBottom, .portalCenterContentAd=
Middle, .portalCenterContentAdTop, .portal_searchresultssponsoredlist, .por=
talcontentad, .pos_advert, .post-ads, .post-adsense-bottom, .post-advert, .=
post-advertisement, .post-advertisement-section, .post-full-ad, .post-full-=
ad-wrapper, .post-googlead, .post-load-ad, .post-nativeadcarousel, .post-pi=
ck-ad, .post-zergnet-wrap, .postAd, .postWideAd, .post__ad, .post__article-=
top-ad-wrapper, .post__body-ad-center, .post__inarticle-ad-template, .post_=
_sidebar__ad, .post_ads, .post_advert, .post_seperator_ad, .post_sponsor_un=
it, .post_sponsored, .postads, .postadsense, .postbit_ad_block, .postbit_ad=
bit_register, .postbit_adcode, .postbit_adcode_old, .postbody_ads, .poster-=
ad-asset-module, .poster_ad, .postfooterad, .postgroup-ads, .postgroup-ads-=
middle, .power_by_sponsor, .pp_ads_global_before_menu, .ppb_ads, .ppp_inter=
ior_ad, .ppr_priv_sponsored_coupon_listing, .pq-ad, .pr-AVA, .pr-AVA2, .pr-=
ad-tower, .pr-widget, .pre-roll-ad, .pre-title-ad, .prebodyads, .premium-ad=
, .premium-ads, .premium-adv, .premiumInHouseAd, .premium_ad_container, .pr=
emiumad, .preview-ad, .pricead-border, .primary-ad, .primary-advertisment, =
.primary_sidebar_ad, .printAds, .pro_ad_adzone, .pro_ad_system_ad_container=
, .pro_ad_zone, .prod_grid_ad, .product-ads, .product-bar-ads, .product-inl=
ist-ad, .profile-ad-container, .profile__ad-wrapper, .profile_ad_bottom, .p=
rofile_ad_top, .promo-ad, .promo-box--ad, .promo-box--leaderboard-ad, .prom=
o-class-brand-getprice, .promo-mpu, .promo-news__adv, .promoAds, .promoAdve=
rtising, .promo_ad, .promo_ads, .promo_border, .promoad, .promoboxAd, .prom=
oted-outbrain, .promotionTextAd, .promotional-feature-ads, .proof_ad, .prop=
el-ad, .proper-ad-unit, .ps-ad, .ps-ligatus_placeholder, .pt_ad03, .pt_col_=
ad02, .pubDesk, .publiboxright300, .publication-ad, .publicidadSuperior, .p=
ublicidad_horizontal, .publicidade-dotted, .publicidade-full-banner, .publi=
cidade-vertical-layout, .publicity-box, .puff-ad, .puff-advertorials, .pull=
-ad, .pull_top_ad, .pullad, .pulse360ad, .pulsir-ad, .puppyAd, .purchad, .p=
ush--ad, .push-ad, .push-item--advertisement, .pushDownAd, .pushdownAd, .pw=
_wb_ad_300x250, .pwgAdWidget, .pxz-ad-widget, .pxz-taskbar-anchor, .pyv-afc=
-ads-container, .qa_ad_left, .qm-ad, .qm-ad-content, .qm-ad-content-news, .=
quads-ad1_widget, .quads-ad2, .quads-ad2_widget.first, .quads-ad4, .queue_a=
d, .quick-tz-ad, .quicklinks-ad, .quigo, .quigo-ad, .quigoAdCenter, .quigoA=
dRight, .quigoMod, .quigoads, .quotead, .qzvAdDiv, .r-ad, .r7ad, .r_ad, .r_=
ad_1, .r_ad_box, .r_adbx_top, .r_ads, .r_col_add, .ra[align=3D"left"][width=
=3D"30%"], .ra[align=3D"right"][width=3D"30%"], .ra[width=3D"30%"][align=3D=
"right"] + table[width=3D"70%"][cellpadding=3D"0"], .rad_container, .radium=
-ad-spot, .radium-builder-widget-ad-spot, .rads_banner, .raff_ad, .rail-art=
icle-sponsored, .rail__ad, .rail__mps-ad, .rail_ad, .railad, .railadspace, =
.ramsay-advert, .rbFooterSponsors, .rbcobmen, .rc-cta[data-target], .rc-ite=
m-wrapper, .rc_ad_300x100, .rc_ad_300x250, .rd_header_ads, .rdio-homepage-w=
idget, .re-Ads-l, .readerads, .readermodeAd, .reading-list-rail-taboola, .r=
ealtor-ad, .rec-sponsored, .rec_ad, .rec_article_footer, .rec_article_right=
, .rec_container__right, .rec_container_footer, .rec_container_right, .rec_=
title_footer, .recent-post-widget-ad, .recentAds, .recent_ad_holder, .recom=
mend-ad-one, .recommend-ad-two, .rect-ad, .rect-ad-1, .rectAd300, .rect_ad,=
 .rect_ad_module, .rect_advert, .rectad, .rectadv, .rectangle-ad, .rectangl=
e-ad-container, .rectangle-embed-ad, .rectangleAd, .rectangleAdContainer, .=
rectanglead, .rectangleads, .red-adv, .redads_cont, .reedwan_adds300x250_wi=
dget, .referrerDetailAd, .refreshable_ad, .region-ad-right, .region-ad-top,=
 .region-ads, .region-ads-1, .region-banner-ad, .region-banner-header, .reg=
ion-dfp-ad-content-bottom, .region-dfp-ad-content-top, .region-dfp-ad-foote=
r, .region-dfp-ad-header, .region-footer-ad-full, .region-header-ad, .regio=
n-header-ads, .region-interstitial-ads, .region-leader-ad-bottom, .region-l=
eader-ad-top, .region-middle-ad, .region-regions-ad-top, .region-regions-ad=
-top-inner, .region-top-ad, .region-top-advertisement, .region-widget-ad-to=
p-0, .regular_728_ad, .regularad, .reklam-block, .reklam2, .reklam728, .rek=
lam_mgid, .reklam_mgid1, .reklama-c, .reklama-content-1, .reklama-content-2=
, .reklama-vert, .reklama1, .reklame-right-col, .reklame-wrapper, .reklamka=
, .rel_ad_box, .related-ad, .related-ads, .related-al-ads, .related-al-cont=
ent-w150-ads, .related-content-story__stories--sponsored-1, .related-conten=
t-story__stories--sponsored-2, .related-content-story__stories--sponsored-3=
, .related-guide-adsense, .relatedAds, .relatedContentAd, .related_post_goo=
gle_ad, .relatesearchad, .remads, .remnant_ad, .remove-ads, .removeAdsLink,=
 .removeAdsStyle, .resads-adspot, .residentialads, .resourceImagetAd, .resp=
Ads, .responsive-ad, .responsiveAdHiding, .responsiveAdsense, .result-ad, .=
result-sponsored, .resultAd, .result_ad, .result_item_ad-adsense, .results-=
ads, .resultsAdsBlockCont, .results_sponsor_right, .rev-content-sponsored, =
.rev_square_side_door, .revcontent-main-ad, .reviewMidAdvertAlign, .review_=
ad1, .reviewpage_ad2, .reviews-box-ad, .rf_circ_ad_460x205, .rg-ad, .rght30=
0x250, .rgt-300x250-ad, .rgt-ad, .rgt_ad, .rh-ad, .rhads, .rhc-ad-bottom, .=
rhs-ad, .rhs-ads-panel, .rhs-advert-container, .rhs-advert-link, .rhs-adver=
t-title, .rhs_ad_title, .rhsad, .rhsadvert, .rhsvw[style=3D"background-colo=
r:#fff;margin:0 0 14px;padding-bottom:1px;padding-top:1px;"], .ribbon-ad-co=
ntainer, .ribbon-ad-matte, .right-ad-300x250, .right-ad-block, .right-ad-co=
ntainer, .right-ad-holder, .right-ad-tagline, .right-ad2, .right-ads, .righ=
t-ads2, .right-adsense, .right-adv, .right-advert, .right-col-ad, .right-co=
lumn-ad, .right-navAdBox, .right-rail-ad, .right-rail-ad-banner, .right-rai=
l-ad-bottom-container, .right-rail-ad-top-container, .right-rail-broker-ads=
, .right-rail__ad, .right-rail__container--ad, .right-side-ad, .right-side-=
ads, .right-sidebar-box-ad, .right-sidebar-box-ads, .right-square-ad-blocks=
, .right-takeover-ad, .right-takeover-ad-sticky, .right-top-ad, .right-vide=
o-dvertisement, .rightAD, .rightAd1, .rightAd2, .rightAdBox, .rightAdColumn=
, .rightAdContainer, .rightAd_bottom_fmt, .rightAd_top_fmt, .rightAds, .rig=
htAds_ie_fix, .rightAdvert, .rightAdverts, .rightBoxAd, .rightBoxMidAds, .r=
ightColAd, .rightColAdBox, .rightColumnAd, .rightColumnAdd, .rightColumnAds=
Top, .rightColumnRectAd, .rightHeaderAd, .rightRailAd, .rightRailMiddleAd, =
.rightSecAds, .rightSideBarAd, .rightSideSponsor, .rightTopAdWrapper, .righ=
t_ad_1, .right_ad_160, .right_ad_2, .right_ad_box, .right_ad_box1, .right_a=
d_common_block, .right_ad_innercont, .right_ad_text, .right_ad_top, .right_=
ad_unit, .right_adlist, .right_ads, .right_adsense_box_2, .right_adskin, .r=
ight_adv, .right_advert, .right_advertise_cnt, .right_advertisement, .right=
_block_advert, .right_box_ad, .right_box_ad_rotating_container, .right_col_=
ad, .right_col_ad_300_250, .right_column_ads, .right_content_ad, .right_con=
tent_ad_16, .right_google_ads, .right_hand_advert_column, .right_image_ad, =
.right_long_ad, .right_outside_ads, .right_picAd, .right_side-partyad, .rig=
ht_side_ads, .right_side_box_ad, .right_sponsor_main, .rightad250, .rightad=
300, .rightad600, .rightad_1, .rightad_2, .rightadbig, .rightadblock, .righ=
tadbox1, .rightadd, .rightads, .rightadunit, .rightbigcolumn_ads, .rightbig=
column_ads_nobackground, .rightbox_content_ads, .rightboxads, .rightcol-adb=
ox, .rightcol-block-ads, .rightcol_boxad, .rightcol_div_openx2, .rightcolad=
s, .rightcoladvert, .rightcoltowerad, .rightcolumndesktopad160x600, .rightm=
enu_ad, .rightnav_adsense, .rightpanelad, .rightrail-ad-block, .rightrail_a=
ds, .rightsideAd, .righttop-advt, .ringtone-ad, .risingstar-ad, .risingstar=
-ad-inner, .riverAdLoaded, .riverAdsLoaded, .riverSponsor, .rj-ads-wrap-sq,=
 .rmp-ad-container, .rmx-ad, .rnav_ad, .rngtAd, .rockmelt-ad, .rockmeltAdWr=
apper, .rolloverad, .rot_ads, .rotating-ad, .rotating-ads, .rotatingAdverti=
sement, .rotatingBannerWidget, .rotatingadsection, .rotator_ad_overlay, .ro=
und_box_advert, .roundedCornersAd, .roundingrayboxads, .row-ad, .row-ad-fb,=
 .rowAds, .row_header_ads, .rowad, .rowgoogleads, .rr-300x250-ad, .rr-300x6=
00-ad, .rr_ads, .rr_skyad, .rs_ad_bot, .rs_ad_top, .rscontainer > .ellip, .=
rside_adbox, .rt-ad, .rt-ad-body, .rt-ad-flash, .rt-ad-inline, .rt-ad-leade=
rboard, .rt-ad-mb, .rt-ad-related, .rt-ad-side, .rtAdFtr, .rtAd_bx, .rtSide=
HomeAd, .rt_ad, .rt_ad1_300x90, .rt_ad_300x250, .rt_ad_call, .rt_advert_nam=
e, .rt_el_advert, .rt_top_adv, .rtd_ads_text, .rtmad, .rtmm_right_ad, .runn=
er-ad, .s-ad, .s-ads, .s-hidden-sponsored-item, .s2k_ad, .s9_productAds, .s=
Type-ad, .s_ad, .s_ad2, .s_ad_160x600, .s_ad_300x250, .s_ads, .s_ads_label,=
 .s_layouts_articleAdWrapper, .s_sponsored_ads, .sa-mainad, .sa_AdAnnouncem=
ent, .sadvert, .sam-ad, .sam-pro-ad, .sam-pro-container, .sam_ad, .savvyad_=
unit, .say-center-contentad { display: none !important; color: rgb(92, 46, =
103) !important; background-color: rgb(121, 237, 178) !important; }

.sb-ad, .sb-ad-margin, .sb-ad-sq-bg, .sb-ad2, .sb-ad3, .sb-ads, .sb-ads-her=
e, .sb-top-sec-ad, .sbAd, .sbAdUnitContainer, .sbTopadWrapper, .sb_ad, .sb_=
ad_holder, .sb_adsN, .sb_adsNv2, .sb_adsW, .sb_adsWv2, .sbadtxt, .sc-ad, .s=
c_ad, .sc_iframe_ad, .scad, .scanAd, .scb-ad, .scc_advert, .schedule_ad, .s=
ci-ad-main, .sci-ad-sub, .scoopads, .scraper_ad_unit, .script-ad, .script_a=
d_0, .scroll-ads, .scrollableArticleAds, .scroller-ad-place-holder, .scroll=
ing-ads, .sda_adbox, .se-ligatus, .search-ad, .search-ad-no-ratings, .searc=
h-advertisement, .search-message-container-ad, .search-result-sponsored, .s=
earch-results-ad, .search-results-page__ad-sense, .search-results__guadelou=
pe, .search-sponsor, .search-sponsored, .searchAd, .searchAdTop, .searchCen=
terBottomAds, .searchCenterTopAds, .searchResultAd, .searchRightBottomAds, =
.searchRightMiddleAds, .searchSponsorItem, .searchSponsoredResultsBox, .sea=
rchSponsoredResultsList, .search_ad_box, .search_column_results_sponsored, =
.search_inline_web_ad, .search_results_ad, .search_results_sponsored_top, .=
sec-ad, .sec_headline_adbox, .second-post-ads-wrapper, .secondadsmobile, .s=
econdary-advertisment, .secondaryAdModule, .secondary_ad, .sectiads, .secti=
on-ad, .section-ad-related, .section-ad-wrapper, .section-ad2, .section-adb=
ox-bottom, .section-adbox1, .section-ads, .section-adtag, .section-advert-b=
anner, .section-advertisement, .section-aside-ad, .section-aside-ad2, .sect=
ion-front__side-bar-ad, .section-front__top-ad, .section-publicity, .sectio=
n-result[data-result-ad-type], .section-sponsors__label, .section_AD, .sect=
ion_ad, .section_ad_left, .section_adarea, .section_google-adsense, .sectio=
n_mpu_wrapper, .section_mpu_wrapper_wrapper, .sector-widget__tiny-ad, .sele=
ction-grid-advert, .selfServeAds, .seoTopAds, .sepContentAd, .series-ad, .s=
erp-adv, .serp-adv-item, .serp-adv__add, .serp-adv__all, .serp-adv__banner,=
 .serp-adv__head, .serp-block_type_market-offers, .serp-list + .serp-list >=
 .serp-adv__head, .serp-list + .serp-list > .serp-adv__head ~ .serp-item, .=
serp-list_left_yes[aria-label=3D"=D0=A0=D0=B5=D0=B7=D1=83=D0=BB=D1=8C=D1=82=
=D0=B0=D1=82=D1=8B =D0=BF=D0=BE=D0=B8=D1=81=D0=BA=D0=B0"] > .t-construct-ad=
apter__adv, .serp_sponsored, .servedAdlabel, .serviceAd, .servsponserLinks,=
 .set_ad, .sex-party-ad, .sfadSlot, .sfsp_adadvert, .sgAd, .sh-ad-box, .sh-=
ad-section, .sh-leftAd, .shadvertisment, .shareToolsItemAd, .shareaholic-ad=
, .shift-ad, .shoppingGoogleAdSense, .shortads, .shortadvertisement, .showA=
dContainer, .showAd_No, .showAd_Yes, .showad_box, .showcaseAd, .showcasead,=
 .shunno-sidebar-advert, .shunno_widget_sidebar_advert, .shunno_widget_side=
bar_sovrnadsmall, .si-adRgt, .sics-component__ad-space, .sidbaread, .side-a=
d-120-bottom, .side-ad-120-middle, .side-ad-120-top, .side-ad-160-bottom, .=
side-ad-160-middle, .side-ad-160-top, .side-ad-300, .side-ad-300-bottom, .s=
ide-ad-300-middle, .side-ad-300-top, .side-ad-big, .side-ad-blocks, .side-a=
d-container, .side-ad-inner, .side-ad-panel, .side-ads, .side-ads-block, .s=
ide-ads-wide, .side-ads300, .side-advert, .side-advertising, .side-adverts,=
 .side-bar-ad-position2, .side-mod-preload-big-ad-switch, .side-rail-ad-wra=
p, .side-sky-banner-160, .side-video-ads-wrapper, .sideAdLeft, .sideAdTall,=
 .sideAdWide, .sideAdv, .sideAdv-wrapper, .sideBannerAdsLarge, .sideBannerA=
dsSmall, .sideBannerAdsXLarge, .sideBarAd, .sideBarCubeAd, .sideBlockAd, .s=
ideBoxAd, .sideBoxM1ad, .sideBoxMiddleAd, .sideBoxStackedAdWrap, .sideBySid=
eAds, .sideToSideAd, .side_300_ad, .side_ad, .side_ad2, .side_ad300, .side_=
ad_1, .side_ad_2, .side_ad_3, .side_ad_box_mid, .side_ad_box_top, .side_ad_=
top, .side_add_wrap, .side_ads, .side_adsense, .side_adv, .side_adv_01, .si=
de_adv_left, .side_adv_right, .sidead, .sidead_150, .sidead_300, .sidead_30=
0250_ht, .sidead_550125, .sideadmid, .sideads, .sideads_l, .sideadsbox, .si=
deadtable, .sideadvert, .sideadverts, .sidebar--mps_ad, .sidebar-320__box_a=
dv, .sidebar-350ad, .sidebar-above-medium-rect-ad-unit, .sidebar-ad, .sideb=
ar-ad-300, .sidebar-ad-300x250-cont, .sidebar-ad-a, .sidebar-ad-b, .sidebar=
-ad-box, .sidebar-ad-box-caption, .sidebar-ad-component, .sidebar-ad-cont, =
.sidebar-ad-container, .sidebar-ad-container-1, .sidebar-ad-container-2, .s=
idebar-ad-container-3, .sidebar-ad-div, .sidebar-ad-rect, .sidebar-ad-slot,=
 .sidebar-adbox, .sidebar-ads-no-padding, .sidebar-ads-wrap, .sidebar-adv-c=
ontainer, .sidebar-advertisement, .sidebar-adverts, .sidebar-adverts-header=
, .sidebar-atf-ad-wrapper, .sidebar-below-ad-unit, .sidebar-big-ad, .sideba=
r-block-adsense, .sidebar-bottom-ad, .sidebar-box-ad, .sidebar-box-ads, .si=
debar-content-ad, .sidebar-header-ads, .sidebar-paid-ad-label, .sidebar-sky=
scraper-ad, .sidebar-sponsors, .sidebar-square-ad, .sidebar-text-ad, .sideb=
ar-top-ad, .sidebar-zergnet, .sidebar300adblock, .sidebarAd, .sidebarAdBloc=
k, .sidebarAdLink, .sidebarAdNotice, .sidebarAdUnit, .sidebarAds300px, .sid=
ebarAdvert, .sidebarCloseAd, .sidebarNewsletterAd, .sidebar_ADBOX, .sidebar=
__ad, .sidebar__ad-label, .sidebar_ad, .sidebar_ad_1, .sidebar_ad_2, .sideb=
ar_ad_3, .sidebar_ad_300, .sidebar_ad_300_250, .sidebar_ad_580, .sidebar_ad=
_container, .sidebar_ad_container_div, .sidebar_ad_holder, .sidebar_ad_lead=
erboard, .sidebar_ad_module, .sidebar_ads, .sidebar_ads-300x250, .sidebar_a=
ds_336, .sidebar_ads_left, .sidebar_ads_right, .sidebar_ads_title, .sidebar=
_adsense, .sidebar_advert, .sidebar_advertising, .sidebar_box_ad, .sidebar_=
right_ad, .sidebar_skyscraper_ad, .sidebar_small_ad, .sidebar_sponsors, .si=
debarad, .sidebarad160, .sidebarad_bottom, .sidebaradbox, .sidebaradcontent=
, .sidebarads, .sidebaradsense, .sidebarboxad, .sideheadnarrowad, .sidehead=
sponsorsad, .sidelist_ad, .sideskyad, .simple-ad-placeholder, .simple_ads_m=
anager_block_widget, .simple_ads_manager_widget, .simple_ads_manager_zone_w=
idget, .simple_adsense_widget, .simplead-container, .simpleads-item, .singl=
e-ad-anchor, .single-ad-wrap, .single-ads, .single-google-ad, .single-item-=
page-ads, .single-post-ad, .single-post-ads-750x90, .single-top-ad, .single=
AdBox, .singleAdsContainer, .single_ad, .single_advert, .single_bottom_ad, =
.single_fm_ad_bottom, .single_post_ads_cont, .single_related_posts_ad_conta=
iner, .single_top_ad, .singlead, .singleads, .singleadstopcstm2, .singlepag=
eleftad, .singlepostad, .singlepostadsense, .singpagead, .site-ad-block, .s=
ite-ads, .site-footer__ad-area, .site-head-ads, .site-header__advert-contai=
ner, .site-nav-ad-inner, .site-top-ad, .siteWideAd, .site_ad, .site_ad--gra=
y, .site_ad--label, .site_ad--wrapper, .site_ad_120_600, .site_ad_300x250, =
.site_sponsers, .sitesponsor, .sitesprite_ads, .six-ads-wrapper, .skinAdv02=
, .skin_ad_638, .skinad-l, .skinad-r, .skinny-sidebar-ad, .sky-ad, .sky-ad1=
, .skyAd, .skyAdd, .skyAdvert, .skyAdvert2, .skyCraper_bannerLong, .skyCrap=
er_bannerShort, .sky_ad_top, .sky_scraper_ad, .skyjobsadtext, .skyscraper-a=
d, .skyscraper-ad-1, .skyscraper-ad-container, .skyscraper_ad, .skyscraper_=
bannerAdHome, .skyscraper_banner_ad, .sl-art-ad-midflex, .sl-header-ad, .sl=
_ad1, .sl_ad2, .sl_ad3, .sl_ad4, .sl_ad5, .sl_ad6, .sl_ad7, .sl_admarker, .=
sleekadbubble, .slide-advert, .slide-advert_float, .slideAd, .slide_ad, .sl=
idead, .slider-right-advertisement-banner, .sliderad, .slideshow-ad, .slide=
show-ad-container, .slideshow-ad-wrapper, .slideshow-ads, .slideshow-advert=
isement-note, .slideshowAd, .slideshow_ad_300, .slideshow_ad_note, .slidesh=
owadvert, .slot_728_ad, .slot__ad, .slot_integrated_ad, .slpBigSlimAdUnit, =
.slpSquareAdUnit, .sm-ad, .sm-widget-ad-holder, .smAdText_r, .sm_ad, .small=
-ad, .small-ad-header, .small-ad-long, .small-ads, .smallAdContainer, .smal=
lAds, .smallAdsContainer, .smallAdv, .smallAdvertisments, .smallSkyAd1, .sm=
allSkyAd2, .small_ad_bg, .small_ads, .small_sidebar_ad_container, .smallad,=
 .smallad-left, .smalladblock, .smalladscontainer, .smalladword, .smallbutt=
on-adverts, .smallsideadpane, .smallsponsorad, .smartAd, .smart_ads_bom_tit=
le, .smartadtags_300250, .smartadtagsbutt_orange_30025002, .sml-item-ad, .s=
n-ad-300x250, .snarcy-ad, .sng_card_ads, .snoadnetwork, .social-ad, .softro=
nics-ad, .sous_actus_ad, .southad, .sovrn_ad_unit, .sp-ad, .spLinks, .sp_ad=
, .sp_search2_table, .sp_search3_table, .sp_search_table, .spaceAdds, .spc-=
ads-leaderboard, .spc-ads-sky, .spec-adv, .specialAd175x90, .specialAdsCont=
ent, .specialAdsLabel, .specialAdsLink, .specialAdvertising, .specialHeader=
Ad, .special_ad_section, .specials_ads, .speedyads, .sphereAdContainer, .sp=
l-ads, .spl_ad, .spl_ad2, .spl_ad_plus, .splashscreen-ad-modal, .splitAd, .=
splitAdResultsPane, .splitter_ad, .splitter_ad_holder, .spn_links_box, .spn=
srAdvtBlk, .spnsrCntnr, .spon-links, .spon125, .spon_link, .sponadbox, .spo=
nlinkbox, .spons-link, .spons-wrap, .sponsBox, .sponsLinks, .sponsWrap, .sp=
ons_link_header, .spons_links, .sponsbox, .sponser-link, .sponserIABAdBotto=
m, .sponserLink, .sponsersads, .sponsertop, .sponsforums-middle, .sponslink=
, .sponsor-300, .sponsor-728, .sponsor-ad, .sponsor-ad-1, .sponsor-ad-title=
, .sponsor-ad-wrapper, .sponsor-ads, .sponsor-area, .sponsor-area-top, .spo=
nsor-block, .sponsor-bottom, .sponsor-btns, .sponsor-inner, .sponsor-left, =
.sponsor-link, .sponsor-link-banner, .sponsor-link-text, .sponsor-links, .s=
ponsor-module-target, .sponsor-popup, .sponsor-post, .sponsor-promo, .spons=
or-right, .sponsor-services, .sponsor-spot, .sponsor-text, .sponsor-text-co=
ntainer, .sponsor120x600, .sponsor728x90, .sponsorAd, .sponsorArea, .sponso=
rBannerWrapper, .sponsorBox, .sponsorBox_right_rdr, .sponsorLabel, .sponsor=
Link, .sponsorLinks, .sponsorMaskhead, .sponsorPanel, .sponsorPost, .sponso=
rPostWrap, .sponsorPuffsHomepage, .sponsorStrip, .sponsorText, .sponsorTitl=
e, .sponsorTxt, .sponsor_ad, .sponsor_ad1, .sponsor_ad2, .sponsor_ad3, .spo=
nsor_ad_area, .sponsor_advert_link, .sponsor_area, .sponsor_bar, .sponsor_b=
utton_ad, .sponsor_columns, .sponsor_div, .sponsor_div_title, .sponsor_foot=
er, .sponsor_image, .sponsor_label, .sponsor_line, .sponsor_links, .sponsor=
_logo, .sponsor_placement, .sponsor_popup, .sponsor_post, .sponsor_units, .=
sponsorad, .sponsoradlabel, .sponsorads, .sponsoradtitle, .sponsored-ad, .s=
ponsored-ad-label, .sponsored-ad-ob, .sponsored-add, .sponsored-ads, .spons=
ored-article-item, .sponsored-b, .sponsored-by-label, .sponsored-by__label,=
 .sponsored-chunk, .sponsored-container, .sponsored-container-bottom, .spon=
sored-content, .sponsored-default, .sponsored-display-ad, .sponsored-editor=
ial, .sponsored-features, .sponsored-header, .sponsored-headlines, .sponsor=
ed-headlines-wrap, .sponsored-headshop, .sponsored-inmail, .sponsored-inmai=
l-legacy, .sponsored-link, .sponsored-links, .sponsored-links-alt-b, .spons=
ored-links-col, .sponsored-links-holder, .sponsored-links-red, .sponsored-l=
inks-right, .sponsored-links-tbl, .sponsored-offers-box, .sponsored-post, .=
sponsored-post_ad, .sponsored-result, .sponsored-result-row-2, .sponsored-r=
esults, .sponsored-right, .sponsored-right-border, .sponsored-rule, .sponso=
red-slot, .sponsored-tag, .sponsored-text, .sponsored-text-links, .sponsore=
d-text-links__ads, .sponsored-title, .sponsored-top, .sponsoredAd, .sponsor=
edAdLine, .sponsoredAds, .sponsoredBar, .sponsoredBottom, .sponsoredBox, .s=
ponsoredEntry, .sponsoredFeature, .sponsoredInfo, .sponsoredInner, .sponsor=
edItem, .sponsoredLabel, .sponsoredLeft, .sponsoredLink, .sponsoredLinks2, =
.sponsoredLinksBox, .sponsoredLinksGadget, .sponsoredLinksHead, .sponsoredL=
inksHeader, .sponsoredName, .sponsoredProduct, .sponsoredResults, .sponsore=
dSearch, .sponsoredShowcasePanel, .sponsoredSideInner, .sponsoredStats, .sp=
onsoredTop, .sponsored_ad, .sponsored_ads, .sponsored_bar_text, .sponsored_=
box, .sponsored_box_search, .sponsored_by, .sponsored_content, .sponsored_g=
links, .sponsored_link, .sponsored_links, .sponsored_links2, .sponsored_lin=
ks_box, .sponsored_links_container, .sponsored_links_section, .sponsored_li=
nks_title_container, .sponsored_links_title_container_top, .sponsored_links=
_top, .sponsored_result, .sponsored_results, .sponsored_results-container, =
.sponsored_ss, .sponsored_text, .sponsored_well, .sponsoredby, .sponsoredib=
box, .sponsoredlink, .sponsoredlinkHed, .sponsoredlinks, .sponsoredlinks-ar=
ticle, .sponsoredlinkscontainer, .sponsoredresults, .sponsoredtabl, .sponso=
redtextlink_container_ovt, .sponsorheader, .sponsoring_link, .sponsoringban=
ner, .sponsorlink2, .sponsormsg, .sponsors-box, .sponsors-footer, .sponsors=
-module, .sponsors-widget, .sponsorsBanners, .sponsors_300x250, .sponsors__=
wide, .sponsors_box_container, .sponsors_fieldset, .sponsors_links, .sponso=
rs_spacer, .sponsorsbanner, .sponsorsbig, .sponsorship-box, .sponsorship-ch=
rome, .sponsorship-container, .sponsorshipContainer, .sponsorship_ad, .spon=
sorshipbox, .sponsorwrapper, .sponstop, .sport-mpu-box, .sportsbet_sbad, .s=
pot-ad, .spot_wrapper, .spotlight-ad, .spotlight-ad-left, .spotlightAd, .sp=
rite-ad_label_vert, .sqAd2, .sq_ad, .square-ad, .square-ad--latest-video, .=
square-ad--neg-margin, .square-ad-1, .square-ad-container, .square-ad-pane,=
 .square-advt, .square-sidebar-ad, .square-sponsorship, .squareAd, .squareA=
dWrap, .squareAdd, .squareAddtwo, .squareAds, .square_ad, .square_ad_wrap, =
.square_ads, .square_advert_inner, .square_banner_ad, .square_button_ads, .=
squaread, .squaread-container, .squareadMain, .squareads, .squared_ad, .sr-=
adsense, .sr-advert, .sr-in-feed-ads, .sr-side-ad-block, .sr_google_ad, .sr=
c_parts_gen_ad, .srp-grid-speed-ad3, .ss-ad-banner, .ss-ad-mpu, .ss-ad-thum=
bnail, .ss-ad-tower, .ss-ad_mrec, .ss_advertising, .stProAd, .stack-ad-cont=
ainer, .stack-ad-placeholder, .stack-l-ad-center, .stackedads1, .stackedads=
2, .stand-alone-adzone, .standalone-ad-container, .standalone_txt_ad, .stan=
dard-ad, .star-ad, .start__advertising_container, .start__newest__big_game_=
container_body_games_advertising, .start_overview_adv_container, .statTop_a=
dsense, .stat_pixel_yes[onclick][class*=3D"_layout_"][class*=3D"_format_"],=
 .static-ad, .staticAd, .staticad, .staticad_mark125, .std_ad_container, .s=
te-ad, .sticky-ad-wrapper, .sticky-sidebar-ad, .sticky-top-ad-wrap, .sticky=
AdLink, .stickyAdsGroup, .stickyMultiAd-processed, .sticky_ad_wrapper, .sti=
ckyadv, .stmAdHeightWidget, .stock-ticker-ad-tag, .stock_ad, .stocks-ad-tag=
, .store-ads, .story-ad-container, .story-header-ad, .story-inline-advert, =
.story-page-embedded-ad, .story-page-embedded-ad-center, .story-top-ad-fix,=
 .storyAdvert, .storyInlineAdBlock, .story_AD, .story_ad_div, .story_ads_ri=
ght_spl, .story_ads_right_spl_budget, .story_advertisement_container_top, .=
story_advertisement_wrapper_bottom, .story_body_advert, .story_right_adv, .=
storyad, .storyad300, .stpro_ads, .str-300x250-ad, .str-300x600-ad, .str-ho=
rizontal-ad-wrapper, .str-slim-nav-ad, .str-top-ad, .strawberry-ads, .strea=
m-ad, .streamAd, .strip-ad, .stripad, .sub-feature-ad, .sub-header-ad, .sub=
AdBannerArea, .subAdBannerHeader, .subNavAd, .sub_ad_banner8_wrap, .sub_con=
t_AD01, .sub_cont_AD02, .sub_cont_AD04, .sub_cont_AD06, .sub_cont_AD07, .su=
bad, .subadimg, .subcontent-ad, .subheadAdPanel, .subheaderAdlogo, .subhead=
er_adsense, .subjects_ad, .submenu_ad, .subtitle-ad-container, .sugarad, .s=
uit-ad-inject, .suitcase-ad, .sunfw-pos-all_adv_728_90_nm, .super-ad, .supe=
r-leaderboard-advert, .superLeaderOverallAdArea, .supercommentad_left, .sup=
ercommentad_right, .supernews-ad-widget, .superscroll-ad, .supp-ads, .suppo=
rt-adv, .supportAdItem, .support_ad, .surbis_banner, .surveyad, .sweet-deal=
s-ad, .syAd, .syHdrBnrAd, .sykscraper-ad, .syndicatedAds, .szoAdBox, .szoSp=
onsoredPost, .t10ad, .tAd, .tAds, .tabAd, .tabAds, .tab_ad, .tab_ad_area, .=
table-ad, .table-ad-fb, .table_ad_bg, .tablebordersponsor, .tablet_ad_box, =
.tablet_ad_head, .taboola-above-article-thumbnails, .taboola-container, .ta=
boola-inbetweener, .taboola-item, .taboola-left-rail-wrapper, .taboola-part=
nerlinks-ad, .taboola-unit, .taboola-widget, .taboola_advertising, .taboola=
_blk, .taboola_lhs, .tadsanzeige, .tadsbanner, .tadselement, .takeOverAdLin=
k, .tallAdvert, .tallad, .tangential-ad, .tb-ad, .tblAds, .tblTopAds, .tbl_=
ad, .tbox_ad, .tckr_adbrace, .td-Adholder, .td-TrafficWeatherWidgetAdGreyBr=
d, .td-a-rec, .td-a-rec-id-custom_ad_1, .td-a-rec-id-custom_ad_2, .td-a-rec=
-id-custom_ad_3, .td-a-rec-id-custom_ad_4, .td-a-rec-id-custom_ad_5, .td-a-=
rec-id-event_bottom_ad, .td-a-rec-id-h12_obj_bottom_ad, .td-a-rec-id-h3_obj=
ect_bottom_ad, .td-a-rec-id-ud_b4x_post_ad, .td-adspot-title, .td-header-sp=
-ads, .td-zergnet, .tdAdHeader, .tdBannerAd, .tdFeaturedAdvertisers, .td_ad=
, .td_footer_ads, .td_left_widget_ad, .td_leftads, .td_reklama_bottom, .td_=
reklama_top, .td_spotlight_ads, .td_topads, .tdad125, .tealiumAdSlot, .teas=
er--native-ad, .teaser-ad, .teaser-advertisement, .teaser-small--ad, .tease=
r-sponsor, .teaserAd, .teaserAdContainer, .teaserAdHeadline, .teaser_adtile=
s, .teaser_advert_content, .testAd-holder, .text-ad-300, .text-ad-links2, .=
text-ad-sitewide, .text-ad-top, .text-advertisement, .text-g-advertisement,=
 .text-g-group-short-rec-ad, .text-g-net-group-news-half-page-ad-300x600-or=
-300x250, .text-g-net-grp-google-ads-article-page, .text-g-nn-web-group-ad-=
halfpage, .text-g-sponsored-ads, .text-g-sponsored-links, .textAd3, .textAd=
BG, .textAdBlock, .textAdBlwPgnGrey, .textAdBox, .textAdMinimum, .textAds, =
.textLinkAd, .textSponsor, .text_ad_description, .text_ad_title, .text_ad_w=
ebsite, .text_ads_2, .text_link_ads_adultforce, .text_linkad_wrapper, .text=
adContainer, .textad_headline, .textadbox, .textadheadline, .textadlink, .t=
extads_left, .textads_right, .textadscontainer, .textadsds, .textadsfoot, .=
textadtext, .textadtxt, .textadtxt2, .textbanner-ad, .textlink-ads, .textli=
nkads, .tf_page_ad_search, .tfagAd, .tge-ad, .theAdvert, .the_list_ad_zone,=
 .theads, .theleftad, .themeblvd-ad-square-buttons, .themidad, .themonic-ad=
2, .third-box-ad, .third-party-ad, .thirdAd160Cont, .thirdAdBot, .thirdAdHe=
ad, .thirdPartySponsorLink__ad { display: none !important; color: rgb(92, 4=
6, 103) !important; background-color: rgb(121, 237, 178) !important; }

.thirdPartySponsorLink__ads, .thirdage_ads_300x250, .thirdage_ads_728x90, .=
thisIsAd, .thisIsAnAd, .this_is_an_ad, .thisisad, .thread-ad, .thread-ad-ho=
lder, .threadAdsHeadlineData, .three-ads, .three-promoted-ads, .thumb-ads, =
.thumbnailad, .thumbs-adv, .thumbs-adv-holder, .tibu_ad, .ticket-ad, .tieze=
rlady, .tile--ad, .tile-ad, .tile-ad-container, .tileAdContainer, .tileAdWr=
ap, .tileAds, .tile_AdBanner, .tile_ad, .tile_ad_container, .tips_advertise=
ment, .title-ad, .title_adbig, .tj_ad_box, .tj_ad_box_top, .tjads, .tl-ad, =
.tl-ad-dfp, .tl-ad-display-3, .tl-ad-render, .tm-ad, .tm-ad-leaderboard, .t=
m-ad-mrec, .tm-ads, .tm_ad200_widget, .tm_topads_468, .tm_widget_ad200px, .=
tmg-ad, .tmg-ad-300x250, .tmg-ad-mpu, .tmnAdsenseContainer, .tmz-dart-ad, .=
tncms-region-ads, .tnt-ads-container, .toaster-ad, .toggle-adinmap, .tone_a=
dspace_300x250, .tone_adspace_300x600, .tone_adspace_right, .toolad, .toolb=
ar-ad, .toolsAd, .toolssponsor-ads, .top-300-ad, .top-ad-1, .top-ad-above-h=
eader, .top-ad-anchor, .top-ad-area, .top-ad-bloc, .top-ad-block, .top-ad-c=
enter, .top-ad-desktop, .top-ad-div, .top-ad-horizontal, .top-ad-inside, .t=
op-ad-multiplex, .top-ad-right, .top-ad-sidebar, .top-ad-slot, .top-ad-spac=
e, .top-ad-sticky, .top-ad-unit, .top-ad-wrap, .top-ad1, .top-ad__sticky-wr=
apper, .top-adbox, .top-ads, .top-ads-bottom-bar, .top-ads-wrapper, .top-ad=
sense, .top-adsense-banner, .top-adspace, .top-adv, .top-adverbox, .top-adv=
ertisement, .top-affiliate, .top-banner-468, .top-banner-ad, .top-banner-ad=
-container, .top-banner-ad-wrapper, .top-banner-add, .top-bar-ad-related, .=
top-bar-adblock, .top-box-right-ad, .top-content-adplace, .top-fbs-ad, .top=
-fbs-ad-sticky, .top-fixed-ad, .top-half-page-ad, .top-header-ad, .top-hori=
z-ad, .top-item-ad, .top-large-google-ad, .top-leaderboard-ad, .top-left-na=
v-ad, .top-menu-ads, .top-most-adv, .top-nav-ad, .top-outer-ad-container, .=
top-primary-sponsored, .top-right-ad, .top-right-advert, .top-rightadvtsmen=
t, .top-side-advertisement, .top-sidebar-adbox, .top-sponsored-header, .top=
-story__ads, .top-treehouse-ad, .top-wide-ad-container, .top-wrapper-sponso=
red-fb, .top300ad, .topAd728x90, .topAdBanner, .topAdBar, .topAdCenter, .to=
pAdContainer, .topAdIn, .topAdLeft, .topAdRight, .topAdWrap, .topAdWrapper,=
 .topAdd, .topAdsLeftMid2, .topAdsRight, .topAdsRight2, .topAdvBox, .topAdv=
ert, .topAdvertisement, .topAdvertistemt, .topAdverts, .topArtAd, .topArtic=
leAds, .topBannerAd, .topBannerAdSectionR, .topBarAd, .topBoxAdvertisement,=
 .topHeaderLeaderADWrap, .topLeaderboardAd, .topNavRMAd, .topPC-adWrap, .to=
pPagination_ad, .topRailAdSlot, .topRightAd, .top_Ad, .top_ad1, .top_ad_336=
x280, .top_ad_728, .top_ad_728_90, .top_ad_banner, .top_ad_big, .top_ad_dis=
claimer, .top_ad_holder, .top_ad_inner, .top_ad_label, .top_ad_list, .top_a=
d_long, .top_ad_post, .top_ad_responsive, .top_ad_seperate, .top_ad_short, =
.top_ad_wrapper, .top_adbox1, .top_adbox2, .top_adh, .top_adsense, .top_ads=
pace, .top_adv, .top_adv_content, .top_advert, .top_advertisement, .top_adv=
ertising_lb, .top_advertizing_cnt, .top_bar_ad, .top_big_ads, .top_containe=
r_ad, .top_corner_ad, .top_head_ads, .top_header_ad, .top_header_ad_inner, =
.top_right_ad, .top_rightad, .top_sponsor, .topad-area, .topad-bar, .topad-=
bg, .topad1, .topad2, .topad_the_www_subtitle, .topadbar, .topadblock, .top=
adbox, .topadrow, .topads-spacer, .topadsection, .topadspace, .topadspot, .=
topadtara, .topadtxt, .topadtxt120, .topadtxt300, .topadtxt428, .topadtxt72=
8, .topadvert, .topadvertisementsegment, .topbaner, .topbar-ad-unit, .topbo=
ardads, .topcontentadvertisement, .topfootad, .topicDetailsAdRight, .topic_=
inad, .topnavSponsor, .topratedBoxAD, .topsidebarad, .topstoriesad, .topten=
AdBoxA, .tourFeatureAd, .tout-ad-embed, .tower-ad-abs, .tower-ads-container=
, .towerAd, .towerAdLeft, .towerAds, .tower_ad, .tower_ad_disclaimer, .towe=
rad, .tp-ad-label, .tp_ads, .tr-ad-adtech, .tr-ad-adtech-placement, .tr-ad-=
inset, .tr-sponsored, .trSpAD1, .track_adblock, .trafficAdSpot, .trafficjun=
ky-ad, .travelpayouts_container-offers-carousel.carousel, .trb_ar_sponsored=
mod, .trb_gptAd, .trb_header_adBanner_combo, .trb_header_adBanner_large, .t=
rb_masthead_adBanner, .trb_pageAdHolder, .trb_soh, .trc-content-sponsoredUB=
, .trc_rbox_div .syndicatedItemUB, .trc_rbox_div a[target=3D"_blank"][href^=
=3D"http://tab"], .treeAdBlockWithBanner_right, .trending__ad, .tribal-ad, =
.trip_ad_center, .trueads, .ts-ad, .ts-ad-leaderboard, .ts-ad_unit_bigbox, =
.ts-banner_ad, .ts-featured_ad, .ts-sponsored-links, .ts-top-most-ads, .tsf=
rm-sponsor-logo-content, .tsm-ad, .tsmAd, .tt_ads, .ttlAdsensel, .tto-spons=
ored-element, .tucadtext, .tv-ad-aside, .tv-grid__item-adv-content, .tv-gri=
d__item-adv_wide_no, .tv-grid__item.tv-sortable-item.tv-sortable-item_sorta=
ble_no.tv-sortable-item_draggable_no, .tvkidsArticlesBottomAd, .tvs-mpu, .t=
witter-ad, .two-col-ad-inArticle, .twoColumnAd, .two_ads, .twoadcoll, .twoa=
dcolr, .tx-aa-adverts, .tx_smartadserver_pi1, .txt-ads, .txtAd, .txtAd5, .t=
xtAds, .txt_ad, .txt_ads, .txtad_area, .txtadvertise, .tynt-ad-container, .=
type-ad, .type_adscontainer, .type_miniad, .type_promoads, .tz_ad300_widget=
, .tz_ad_widget, .uds-ad, .uds-ads, .ui-ad, .ui-ads, .ui-advertising__conta=
iner, .ui-advertising_position1, .uim-ad, .ukAds, .ukn-banner-ads, .ukn-inl=
ine-advert, .ult_vp_videoPlayerAD, .unSponsored, .under-player-ads, .under_=
ads, .undertimyads, .uniAdBox, .uniAds, .uniblue-text-ad, .unireg-ad-narrow=
, .unit-ad, .universalboxADVBOX01, .universalboxADVBOX03, .universalboxADVB=
OX04a, .unspoken-adplace, .upcloo-adv-content, .upcomingMob_2nd_adv_blk, .u=
pper-ad-box, .upper-ad-space, .urban-ad-rect, .urban-ad-top, .us-advertisem=
ent, .us-txt-ad, .useful_banner_manager_banners_rotation, .useful_banner_ma=
nager_rotation_widget, .useful_banner_manager_widget, .usenext, .uvs-ad-ful=
l-width, .v5rc_336x280ad, .vAd_160x600, .vAds, .v_ad, .vadvert, .variable-a=
d, .variableHeightAd, .vbox-verticalad, .vce-ad-below-header, .vce-ad-conta=
iner, .vce-header-ads, .vce_adsense_expand, .vce_adsense_widget, .vce_adsen=
se_wrapper, .ve2_post_adsense, .vert-ad, .vert-ad-ttl, .vert-ads, .vert-ads=
Block, .vertad, .vertical-adsense, .verticalAd, .verticalAdText, .vertical_=
ad, .vertical_ads, .verticalad, .verysmallads, .vhs_small_ad, .vi-lb-placeh=
older[title=3D"ADVERTISEMENT"], .vidadtext, .video-about-ad, .video-ad, .vi=
deo-ad-content, .video-ad-short, .video-ads, .video-ads-container, .video-a=
ds-wrapper, .video-adtech-mpu-ad, .video-innerAd-320x250, .video-player-ad-=
center, .video-right-ad, .video-right-ads, .videoAd-wrapper, .videoAd300, .=
videoBoxAd, .videoPauseAd, .videoSideAds, .video__banner, .video_ad, .video=
_ad_fadein, .video_ads, .video_ads_overdiv, .video_ads_overdiv2, .video_adv=
ertisement_box, .video_detail_box_ads, .video_footer_advertisement, .video_=
top_ad, .videoad2, .videoadbox, .videos-ad, .videos-ad-wrap, .view-Advertis=
ment, .view-ad, .view-ads-header-top-block, .view-ads-sidebar-block, .view-=
ads-under-the-slider, .view-advertisements, .view-advertisements-300, .view=
-advertorials, .view-adverts, .view-advt-story-bottom, .view-article-inner-=
ads, .view-custom-advertisement, .view-display-id-ads_all, .view-homepage-c=
enter-ads, .view-id-Advertisment, .view-id-ad, .view-id-ads_header_top_bloc=
k, .view-id-ads_sidebar_block, .view-id-ads_under_the_slider, .view-id-adve=
rtisements, .view-id-advertisements_300, .view-id-advt_story_bottom, .view-=
id-custom_advertisement, .view-id-simpleads_advertisements, .view-id-tophea=
der_ad, .view-image-ads, .view-promo-mpu-right, .view-simpleads-advertiseme=
nts, .view-site-ads, .view-topheader-ad, .view-video-advertisements, .viewC=
ontentItemAd, .view_ads_advertisements, .view_ads_bottom_bg, .view_ads_bott=
om_bg_middle, .view_ads_content_bg, .view_ads_top_bg, .view_ads_top_bg_midd=
le, .view_rig_ad, .views-field-field-ad, .views-field-field-adbox-1, .views=
-field-field-adbox-2, .views-field-field-advertisement-image, .views-field-=
field-image-ad, .vip-club-ad, .virgin-mpu, .visibleAd, .visor-breaker-ad, .=
visuaAD400, .visuaAD900, .vjs-ad-iframe, .vjs-ad-overlay, .vjs-ima3-ad-cont=
ainer, .vl-ad-item, .vmp-ad, .voc-advertising, .vod_ad, .vrfadzone, .vs-adv=
ert-300x250, .vs_dfp_standard_postbit_ad, .vsw-ads, .vswAdContainer, .vt_h1=
_ad, .vuukle-ad-block, .vuukle-ads, .vw-header-ads-leader-board, .vw-header=
-ads-wrapper, .vw-single-header-ads, .vxp_ad300x250, .vxp_adContainer, .w-A=
ds-small, .w-ad-box, .w-content--ad, .wAdvert, .w_AdExternal, .w_ad, .wa_ad=
sbottom, .wahAd, .wahAdRight, .wallAd, .wall_ad, .wall_ad_hd, .wallad, .wan=
tads, .waterfall-ad-anchor, .wazi-ad-link, .wcAd, .wd-adunit, .wd_ads, .wdc=
a_ad_item, .wdca_custom_ad, .wdp_ad, .wdp_adDiv, .wdt_ads, .weather-ad-wrap=
per, .weather-sponsor-ad, .weather-sponsorDiv, .weatherAdSpot, .weather_ad,=
 .weatherad, .web-result-sponsored, .webad-cnt, .webad_link, .webads336x280=
, .webadvert-container, .webit-ads, .webpart-wrap-advert, .well-ad, .wfb-ad=
, .wg-ad-square, .wh_ad, .white-ad-block, .wide-ad-container, .wide-ad-oute=
r, .wide-ad2015, .wide-advert, .wide-footer-ad, .wide-header-ad, .wide-skys=
craper-ad, .wideAdTable, .widePageAd, .wide_ad, .wide_ad_unit, .wide_ad_uni=
t_top, .wide_ads, .wide_google_ads, .wide_grey_ad_box, .wide_sponsors, .wid=
ead, .wideadbox, .widget-300x250ad, .widget-ad, .widget-ad-codes, .widget-a=
d-sky, .widget-ad-zone, .widget-ad300x250, .widget-adcode, .widget-ads, .wi=
dget-adsense, .widget-adv, .widget-advert-728, .widget-advert-970, .widget-=
advertisement, .widget-ami-newsmax, .widget-ami-zergnet, .widget-entry-ads-=
160, .widget-gpt2-ami-ads, .widget-group-Ads, .widget-highlight-ads, .widge=
t-pane-section-ad-content, .widget-pane-section-result[data-result-ad-type]=
, .widget-sponsor, .widget-text-ad, .widget1-ad, .widget10-ad, .widget4-ad,=
 .widget6-ad, .widget7-ad, .widgetAD, .widgetAdScrollContainer, .widgetSpon=
sors, .widgetYahooAds, .widget_728x90_advertisement, .widget_ad, .widget_ad=
-widget, .widget_ad125, .widget_ad300, .widget_ad_300, .widget_ad_300x250_a=
tf, .widget_ad_300x250_btf, .widget_ad_300x250_btf_b, .widget_ad_boxes_widg=
et, .widget_ad_rotator, .widget_ad_widget, .widget_admanagerwidget, .widget=
_adrotate_widgets, .widget_ads, .widget_adsblock, .widget_adsensem, .widget=
_adsensewidget, .widget_adsingle, .widget_adv_location, .widget_advads_ad_w=
idget, .widget_advert, .widget_advert_content, .widget_advert_widget, .widg=
et_advertisement, .widget_advertisements, .widget_advertisment, .widget_adv=
widget, .widget_adwidget, .widget_appmanager_sponsoredpostswidget, .widget_=
awpcp-random-ads, .widget_bestgoogleadsense, .widget_better-ads, .widget_bo=
ss_banner_ad, .widget_catchbox_adwidget, .widget_cevo_contentad, .widget_co=
deneric_ad_widget, .widget_com_ad_widget, .widget_cpxadvert_widgets, .widge=
t_customad_widget, .widget_customadvertising, .widget_cxad, .widget_dfp, .w=
idget_dfp_lb-widget, .widget_econaabachoadswidget, .widget_emads, .widget_e=
tcenteredadwidget, .widget_evolve_ad_gpt_widget, .widget_fearless_responsiv=
e_image_ad, .widget_googleads, .widget_ima_ads, .widget_internationaladserv=
erwidget, .widget_ione-dart-ad, .widget_island_ad, .widget_jr_125ads, .widg=
et_maxbannerads, .widget_nb-ads, .widget_new_sponsored_content, .widget_new=
scorpau_ads, .widget_ok_zergnet_widget, .widget_openxwpwidget, .widget_plug=
rush_widget, .widget_po_ads_widget, .widget_postmedia_layouts_ad, .widget_s=
dac_bottom_ad_widget, .widget_sdac_companion_video_ad_widget, .widget_sdac_=
footer_ads_widget, .widget_sdac_skyscraper_ad_widget, .widget_sdac_top_ad_w=
idget, .widget_sej_sidebar_ad, .widget_sidebarad_300x250, .widget_sidebarad=
_300x600, .widget_sidebaradwidget, .widget_singlead, .widget_sponsored_cont=
ent, .widget_supernews_ad, .widget_taboola, .widget_text_adsense, .widget_t=
hesun_dfp_ad_widget, .widget_uds-ads, .widget_vb_sidebar_ad, .widget_wnd_ad=
_widget, .widget_wp-bannerize-widget, .widget_wp_ads_gpt_widget, .widget_wp=
_insert_ad_widget, .widget_wpshower_ad, .widgetads, .width-ad-slug, .wikia-=
ad, .wikia_ad_placeholder, .wingadblock, .wis_adControl, .with-background-a=
ds, .with-wrapper-ads, .with_ctecad, .wixAdsdesktopBottomAd, .wl-ad, .wl_Wi=
dgetRel_Record_Div.wl_WidgetRel_Sponsor, .wloadIframeAD, .wn-ad, .wnIframeA=
d, .wnMultiAd, .wp125_write_ads_widget, .wp125ad, .wp125ad_1, .wp125ad_2, .=
wpInsertAdWidget, .wp_bnn, .wp_bnnatcode_wp_bnn, .wpadvert, .wpbrad, .wpbra=
d-ad, .wpbrad-zone, .wpd-advertisement, .wpfp_custom_ad, .wpfp_custom_ad_co=
ntent, .wpi_ads, .wpmrec, .wpn_ad_content, .wppaszone, .wpproaddlink, .wppr=
oadgrid, .wpproadszone, .wptouch-ad, .wpx-bannerize, .wpx_bannerize, .wr-ad=
-slot, .wr-home-top-adv, .wrap-ad, .wrap-ads, .wrap_boxad, .wrapad, .wrappe=
r-ad, .wrapper-ad-sidecol, .wrapper-banner-box-wallpaper, .wrapper-banner-w=
allpaper, .wrapper-google-ads, .wrapper-sidebar_ads_box, .wrapper-sidebar_a=
ds_half-page, .wrapper-sponsored-fb, .wrapperAdSky, .wrapper_ad, .wrapper_a=
dvertisement, .wrb1_x1_adv, .wrb1_x7_adv, .wrb2_ls1_adv, .wrb2_ls3_adv, .wr=
b2_x1_adv, .wrb3_ls1_adv, .wrb3_x1_adv, .wrb4_x1_adv, .wrb6_x1_adv, .ws-ad,=
 .wsSearchResultsRightSponsoredLinks, .wsSponsoredLinksRight, .wsTopSposore=
dLinks, .ws_contentAd660, .wsj-ad:not(.adActivate), .wui-ad-container, .wx-=
adchoices, .wx-gptADS, .x-ad, .x-home-ad__content, .x-home-ad__content-inne=
r, .x-tile__advert, .x01-ad, .x03-adunit, .x04-adunit, .x81_ad_detail, .xad=
s-blk-bottom-hld, .xads-blk-top-hld, .xads-blk-top2-hld, .xads-blk1, .xads-=
blk2, .xads-ojedn, .xmlad, .xplayer-banner-bottom, .xs_epic_circ_ad, .xs_ep=
ic_sponsor_label, .xtopadvert, .y-ads, .y-ads-wide, .y5_ads, .y5_ads2, .y7-=
advertisement, .y7adHEAD, .y7adS, .y7s-lrec, .ya-direct, .ya-partner, .yaAd=
s, .yad-sponsored, .yahoo-ad-leader-north, .yahoo-ad-leader-south, .yahoo-a=
d-lrec-north, .yahoo-banner-ad-container, .yahoo-sponsored, .yahoo-sponsore=
d-links, .yahoo-sponsored-result, .yahooAd, .yahooAds, .yahooContentMatch, =
.yahoo_ad, .yahoo_ads, .yahooad, .yahooad-image, .yahooad-urlline, .yahooad=
s, .yahootextads_content_bottom, .yam-plus-ad-container, .yan-sponsored, .y=
andex-rtb-block, .yat-ad, .yellow_ad, .yfi-fp-ad-logo, .ygrp-ad, .yieldads-=
160x600, .yieldads-728x90, .yl-lrec-wrap, .yls-sponlink, .yom-ad-LREC, .yom=
-ad-LREC2, .yom-ad-LREC3, .yom-ad-MREC2, .yom-ad-moneyball, .youradhere, .y=
outubeSuperLeaderBoardAdHolder, .youtubeSuperLeaderOverallAdArea, .yrail_ad=
_wrap, .yrail_ads, .ysmsponsor, .ysp-dynamic-ad, .ysponsor, .yt-adsfull-wid=
get, .ytp-ad-progress, .ytp-ad-progress-list, .yui3-ad, .yw-ad, .z-sponsore=
d-block, .zRightAdNote, .zaba-advertising, .zc-grid-ad, .zc-grid-position-a=
d, .zem_rp_promoted, .zerg-colm, .zerg-widget, .zergmod, .zergnet, .zergnet=
-holder, .zergnet-row, .zergnet-widget, .zergnet-widget-container, .zergnet=
-widget__header, .zergnet-widget__subtitle, .zergnetBLock, .zergnetpower, .=
zergpowered, .zeti-ads, .ziffad-wrapper, .zone-advertisement, .zoneAds, ad-=
slot, ad-triple-box, ads-right, afs-ad, amp-ad, a[href*=3D"delivery.bb2021.=
info"], dfp-ad, div[id^=3D"DIV_NNN_"], fbs-ad, iframe[src*=3D"alosafada.com=
/barra-disksexo/"], leaderboard-ad, [ad-id^=3D"googlead"], [alt=3D"banner-3=
00-x-250"], [class][data-sitename][data-header-version] > div[id^=3D"detect=
ion-block"], [class^=3D"adFrameDiv"], [class^=3D"adv_bottom_table"], [data-=
leadlink*=3D"admitlead."][data-leadlink*=3D"/sb/clk/"], [data-link*=3D"/sb/=
clk/"], [data-link*=3D"amigo-browser.ru/dkit-"], [data-track^=3D"ad-iframe-=
top"], [href*=3D".afquptvqzw.biz"], [href*=3D".djuzsbnnm.biz"], [href*=3D".=
igkxr.biz"], [href*=3D"//xml.revrtb.com/"], [href*=3D"/exoads/b/"], [href*=
=3D"/uni-tds.com/"], [href*=3D"/zfvklk.ru"], [href*=3D"123.cat60.ru"], [hre=
f*=3D"74volta.ru"], [href*=3D"7porn.ru"], [href*=3D"a5.veshokonline.tk"], [=
href*=3D"adsbc.pp.ua"], [href*=3D"adserver.cc"], [href*=3D"allrightnow4.ru"=
], [href*=3D"allsex-pron.ru"], [href*=3D"asyaaffiliate.com"] > *, [href*=3D=
"ball.anime-free.net"], [href*=3D"bc.erosweet.com"], [href*=3D"bc.pizzda.ne=
t"], [href*=3D"bc.tanbodyc.pp.ua"], [href*=3D"bdcgogo.pro"], [href*=3D"bdcg=
ogo2.pro"], [href*=3D"bdcgogo3.pro"], [href*=3D"bdchidref.pro"], [href*=3D"=
bilet-loto.ru"], [href*=3D"bodyclick.vazgarage.ru"], [href*=3D"bridalhairid=
eas.info "], [href*=3D"citerrol.com"], [href*=3D"clretar.net"], [href*=3D"c=
msmodnews.com"], [href*=3D"com.veshok.com"], [href*=3D"degotmo.ru"], [href*=
=3D"deribasss.info"], [href*=3D"dewife.ru"], [href*=3D"dingdarop.pro"], [hr=
ef*=3D"dinglahim.pro"], [href*=3D"ditabu.pro"], [href*=3D"driftawayforfun.c=
om"], [href*=3D"eberalofe.pro"], [href*=3D"edintorni.net/related/service/sp=
onsor/redirect/"] > *, [href*=3D"enwitle.com"], [href*=3D"epicfuck.net"], [=
href*=3D"ettalhap.com"], [href*=3D"fle.kazmuz.kz"], [href*=3D"forlife1.ru"]=
, [href*=3D"forsupwron.pro"], [href*=3D"fortedrow.pro"], [href*=3D"fortsoul=
d.pro"], [href*=3D"garewuld.com"], [href*=3D"gefetot.com"], [href*=3D"gerec=
ning.pro"], [href*=3D"gigantporno.com"], [href*=3D"go2cloud.org/aff_"], [hr=
ef*=3D"gomiligh.pro"], [href*=3D"gorenpe.ru"], [href*=3D"gottimuch.com"], [=
href*=3D"hd.pornoslit.com"], [href*=3D"hedtfior.pro"], [href*=3D"hedthertsu=
.pro"], [href*=3D"herrabjec.pro"], [href*=3D"hertugwa.pro"], [href*=3D"himo=
with.pro"], [href*=3D"johnsitsi.pro"], [href*=3D"justonsrep.com"], [href*=
=3D"kinhintont.com"], [href*=3D"kolkhida-trade.ge"], [href*=3D"kordonivkaki=
no.tv"], [href*=3D"ladyjoy7.ru"], [href*=3D"ledsitling.pro"], [href*=3D"ler=
ester.com"], [href*=3D"lingresbab.pro"], [href*=3D"litthecho.pro"], [href*=
=3D"lolhats.ru"], [href*=3D"maherthin.pro"], [href*=3D"metertna.ru"], [href=
*=3D"mtwbedsl.biz"], [href*=3D"naruhap.pro"], [href*=3D"nepeoripa.biz"], [h=
ref*=3D"number.kordonivkakino.net"], [href*=3D"oheah.ru"], [href*=3D"parhad=
at.com"], [href*=3D"parthetwo.ru"], [href*=3D"pigiuqproxy.com"], [href*=3D"=
pisrat.tanads.pp.ua"], [href*=3D"play4k.tv/download/"], [href*=3D"povarmoon=
.ru"], [href*=3D"pupok1.ru"], [href*=3D"rebevengwas.com"], [href*=3D"reklta=
g123tizblock.ru"], [href*=3D"retarcl.net"], [href*=3D"rewdinghes.com"], [hr=
ef*=3D"rinwisi.pro"], [href*=3D"ropandhep.com"], [href*=3D"rulonvideo.ru"],=
 [href*=3D"sandensi.ru"], [href*=3D"seeall6.ru"], [href*=3D"sparonero.pro"]=
, [href*=3D"sub.oldri.ru"], [href*=3D"subnewss1.net"], [href*=3D"subnewss5.=
net"], [href*=3D"tedpasit.net"], [href*=3D"territoryparcel.bid"], [href*=3D=
"tgames.crazyatomicgames.com"], [href*=3D"thetlingheck.pro"], [href*=3D"tin=
notet.com"], [href*=3D"tmstrack.com"][target=3D"_blank"], [href*=3D"tonsper=
ning.ru"], [href*=3D"tv.anime-free.net"], [href*=3D"ughtedrab.ru"], [href*=
=3D"ugonrin.com"], [href*=3D"utdorfack.ru"], [href*=3D"veshok.ml"], [href*=
=3D"waverhow.pro"], [href*=3D"white.creativportal.ru"], [href*=3D"wilpehap.=
pro"], [href*=3D"witgatons.com"], [href*=3D"wronsitand.ru"], [href*=3D"wstu=
rbovip.ru"], [href*=3D"xxxpostpic.org/adslink.php"], [href*=3D"zedinfo.info=
"], [href=3D"https://goo.gl/WRmu17"] > img, [href^=3D"http://bannerstrckr.c=
om/click.php"], [href^=3D"http://friwap.ru/go/"], [href^=3D"http://pixelmar=
kway.com/"], [href^=3D"http://track.brucelead.com/"][target=3D"_blank"], [h=
ref^=3D"http://www.outbrain.com/what-is/default/"] img, [href^=3D"http://xi=
fg6h.ru/click/"], [href^=3D"https://adsrv.me/"], [href^=3D"https://app.mone=
tizze.com.br"][target=3D"_blank"], [href^=3D"https://questolovoglio.com/"][=
target=3D"_blank"], [href^=3D"https://t.frty"], [href^=3D"https://t.grty"],=
 [href^=3D"https://t.irty"], [href^=3D"https://toroadvertisingmedia.com/ads=
"][target=3D"_blank"], [href^=3D"https://www.grand-ads.com/ads/click"], [id=
*=3D"MGWrap"], [id*=3D"MarketGid"], [id^=3D"bunyad_ads_"], [id^=3D"newPorta=
l_informer_"], [id^=3D"relap-custom-iframe-rec"], [id^=3D"smi2adblock"], [l=
azy-ad=3D"leftbottom_banner"], [lazy-ad=3D"leftthin_banner"], [lazy-ad=3D"l=
efttop_banner"], [lazy-ad=3D"top_banner"], [onclick*=3D".twkv.ru"] { displa=
y: none !important; color: rgb(92, 46, 103) !important; background-color: r=
gb(121, 237, 178) !important; }
------MultipartBoundary--mmfJMv6VFTPpufsAbXFV99k6lkza06mpzfQx4MhsBg------
